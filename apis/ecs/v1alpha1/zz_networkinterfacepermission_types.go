// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NetworkInterfacePermissionInitParameters struct {

	// Alibaba Cloud Partner (Certified ISV) account ID or individual user ID.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Whether to force deletion of Network Interface Permission. Default value: true.
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The ID of the network interface.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.NetworkInterface
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Reference to a NetworkInterface in ecs to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	NetworkInterfaceIDRef *v1.Reference `json:"networkInterfaceIdRef,omitempty" tf:"-"`

	// Selector for a NetworkInterface in ecs to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	NetworkInterfaceIDSelector *v1.Selector `json:"networkInterfaceIdSelector,omitempty" tf:"-"`

	// The permissions of the Network Interface. Valid values: InstanceAttach. InstanceAttach: Allows authorized users to mount your ENI to the other ECS instance. The ECS instance must be in the same zone as the ENI.
	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`
}

type NetworkInterfacePermissionObservation struct {

	// Alibaba Cloud Partner (Certified ISV) account ID or individual user ID.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Whether to force deletion of Network Interface Permission. Default value: true.
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the network interface.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// The permissions of the Network Interface. Valid values: InstanceAttach. InstanceAttach: Allows authorized users to mount your ENI to the other ECS instance. The ECS instance must be in the same zone as the ENI.
	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`

	// The Status of the Network Interface Permissions. Valid values: Pending, Granted, Revoking, Revoked.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type NetworkInterfacePermissionParameters struct {

	// Alibaba Cloud Partner (Certified ISV) account ID or individual user ID.
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Whether to force deletion of Network Interface Permission. Default value: true.
	// +kubebuilder:validation:Optional
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The ID of the network interface.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.NetworkInterface
	// +kubebuilder:validation:Optional
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Reference to a NetworkInterface in ecs to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	NetworkInterfaceIDRef *v1.Reference `json:"networkInterfaceIdRef,omitempty" tf:"-"`

	// Selector for a NetworkInterface in ecs to populate networkInterfaceId.
	// +kubebuilder:validation:Optional
	NetworkInterfaceIDSelector *v1.Selector `json:"networkInterfaceIdSelector,omitempty" tf:"-"`

	// The permissions of the Network Interface. Valid values: InstanceAttach. InstanceAttach: Allows authorized users to mount your ENI to the other ECS instance. The ECS instance must be in the same zone as the ENI.
	// +kubebuilder:validation:Optional
	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// NetworkInterfacePermissionSpec defines the desired state of NetworkInterfacePermission
type NetworkInterfacePermissionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkInterfacePermissionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NetworkInterfacePermissionInitParameters `json:"initProvider,omitempty"`
}

// NetworkInterfacePermissionStatus defines the observed state of NetworkInterfacePermission.
type NetworkInterfacePermissionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkInterfacePermissionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NetworkInterfacePermission is the Schema for the NetworkInterfacePermissions API. Provides a Alicloud ECS Network Interface Permission resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type NetworkInterfacePermission struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountId) || (has(self.initProvider) && has(self.initProvider.accountId))",message="spec.forProvider.accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.permission) || (has(self.initProvider) && has(self.initProvider.permission))",message="spec.forProvider.permission is a required parameter"
	Spec   NetworkInterfacePermissionSpec   `json:"spec"`
	Status NetworkInterfacePermissionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkInterfacePermissionList contains a list of NetworkInterfacePermissions
type NetworkInterfacePermissionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkInterfacePermission `json:"items"`
}

// Repository type metadata.
var (
	NetworkInterfacePermission_Kind             = "NetworkInterfacePermission"
	NetworkInterfacePermission_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkInterfacePermission_Kind}.String()
	NetworkInterfacePermission_KindAPIVersion   = NetworkInterfacePermission_Kind + "." + CRDGroupVersion.String()
	NetworkInterfacePermission_GroupVersionKind = CRDGroupVersion.WithKind(NetworkInterfacePermission_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkInterfacePermission{}, &NetworkInterfacePermissionList{})
}
