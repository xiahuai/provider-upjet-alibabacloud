// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EndpointAclInitParameters struct {

	// The ACL policy. Valid value:
	ACLStrategy *string `json:"aclStrategy,omitempty" tf:"acl_strategy,omitempty"`

	// The CIDR block.
	// -> NOTE: To ensure business stability, the system is configured by default with a CIDR (0.0.0.0/0) that allows access from all source addresses.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`

	// Access point type. Value:
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/messageservice/v1alpha1.Endpoint
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	EndpointType *string `json:"endpointType,omitempty" tf:"endpoint_type,omitempty"`

	// Reference to a Endpoint in messageservice to populate endpointType.
	// +kubebuilder:validation:Optional
	EndpointTypeRef *v1.Reference `json:"endpointTypeRef,omitempty" tf:"-"`

	// Selector for a Endpoint in messageservice to populate endpointType.
	// +kubebuilder:validation:Optional
	EndpointTypeSelector *v1.Selector `json:"endpointTypeSelector,omitempty" tf:"-"`
}

type EndpointAclObservation struct {

	// The ACL policy. Valid value:
	ACLStrategy *string `json:"aclStrategy,omitempty" tf:"acl_strategy,omitempty"`

	// The CIDR block.
	// -> NOTE: To ensure business stability, the system is configured by default with a CIDR (0.0.0.0/0) that allows access from all source addresses.
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`

	// Access point type. Value:
	EndpointType *string `json:"endpointType,omitempty" tf:"endpoint_type,omitempty"`

	// It formats as <endpoint_type>:<acl_strategy>:<cidr>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type EndpointAclParameters struct {

	// The ACL policy. Valid value:
	// +kubebuilder:validation:Optional
	ACLStrategy *string `json:"aclStrategy,omitempty" tf:"acl_strategy,omitempty"`

	// The CIDR block.
	// -> NOTE: To ensure business stability, the system is configured by default with a CIDR (0.0.0.0/0) that allows access from all source addresses.
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`

	// Access point type. Value:
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/messageservice/v1alpha1.Endpoint
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	EndpointType *string `json:"endpointType,omitempty" tf:"endpoint_type,omitempty"`

	// Reference to a Endpoint in messageservice to populate endpointType.
	// +kubebuilder:validation:Optional
	EndpointTypeRef *v1.Reference `json:"endpointTypeRef,omitempty" tf:"-"`

	// Selector for a Endpoint in messageservice to populate endpointType.
	// +kubebuilder:validation:Optional
	EndpointTypeSelector *v1.Selector `json:"endpointTypeSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// EndpointAclSpec defines the desired state of EndpointAcl
type EndpointAclSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EndpointAclParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EndpointAclInitParameters `json:"initProvider,omitempty"`
}

// EndpointAclStatus defines the observed state of EndpointAcl.
type EndpointAclStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EndpointAclObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EndpointAcl is the Schema for the EndpointAcls API. Provides a Alicloud Message Service Endpoint Acl resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type EndpointAcl struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.aclStrategy) || (has(self.initProvider) && has(self.initProvider.aclStrategy))",message="spec.forProvider.aclStrategy is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.cidr) || (has(self.initProvider) && has(self.initProvider.cidr))",message="spec.forProvider.cidr is a required parameter"
	Spec   EndpointAclSpec   `json:"spec"`
	Status EndpointAclStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EndpointAclList contains a list of EndpointAcls
type EndpointAclList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EndpointAcl `json:"items"`
}

// Repository type metadata.
var (
	EndpointAcl_Kind             = "EndpointAcl"
	EndpointAcl_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EndpointAcl_Kind}.String()
	EndpointAcl_KindAPIVersion   = EndpointAcl_Kind + "." + CRDGroupVersion.String()
	EndpointAcl_GroupVersionKind = CRDGroupVersion.WithKind(EndpointAcl_Kind)
)

func init() {
	SchemeBuilder.Register(&EndpointAcl{}, &EndpointAclList{})
}
