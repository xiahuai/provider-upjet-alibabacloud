// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterInitParameters struct {

	// Specifies whether to enable the no-activity suspension feature. Default value: false. Valid values are true, false. This parameter is valid only for serverless clusters.
	AllowShutDown *string `json:"allowShutDown,omitempty" tf:"allow_shut_down,omitempty"`

	// Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is PrePaid. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// The retention policy for the backup sets when you delete the cluster.  Valid values are ALL, LATEST, NONE. Value options can refer to the latest docs DeleteDBCluster
	BackupRetentionPolicyOnClusterDeletion *string `json:"backupRetentionPolicyOnClusterDeletion,omitempty" tf:"backup_retention_policy_on_cluster_deletion,omitempty"`

	// The time point of data to be cloned. Valid values are LATEST,BackupID,Timestamp.Value options can refer to the latest docs CreateDBCluster CloneDataPoint.
	// -> NOTE: If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint *string `json:"cloneDataPoint,omitempty" tf:"clone_data_point,omitempty"`

	// Specifies whether to enable or disable SQL data collector. Valid values are Enable, Disabled.
	CollectorStatus *string `json:"collectorStatus,omitempty" tf:"collector_status,omitempty"`

	// Enable storage compression function. The value of this parameter is ON. Only MySQL supports.
	// -> NOTE: When the value of db_type is not MySQL, the value of creation_option is neither empty nor Normal, and the value of storage_type is not PSL4, this field will be ignored.
	CompressStorage *string `json:"compressStorage,omitempty" tf:"compress_storage,omitempty"`

	// The edition of the PolarDB service. Valid values are Normal,Basic,ArchiveNormal,NormalMultimaster,SENormal.Value options can refer to the latest docs CreateDBCluster CreationCategory.
	// -> NOTE: You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, creation_category can be set to NormalMultimaster. From version 1.203.0, creation_category can be set to SENormal.
	CreationCategory *string `json:"creationCategory,omitempty" tf:"creation_category,omitempty"`

	// The method that is used to create a cluster. Valid values are Normal,CloneFromPolarDB,CloneFromRDS,MigrationFromRDS,CreateGdnStandby,RecoverFromRecyclebin,UpgradeFromPolarDB. NOTE: From version 1.233.0, creation_option can be set to RecoverFromRecyclebin. From version 1.255.0, creation_option can be set to UpgradeFromPolarDB. Value options can refer to the latest docs CreateDBCluster CreationOption.
	CreationOption *string `json:"creationOption,omitempty" tf:"creation_option,omitempty"`

	// db_cluster_ip_array defines how users can send requests to your API. See db_cluster_ip_array below.
	DBClusterIPArray []DBClusterIPArrayInitParameters `json:"dbClusterIpArray,omitempty" tf:"db_cluster_ip_array,omitempty"`

	// Database minor version. Value options can refer to the latest docs CreateDBCluster DBMinorVersion. This parameter takes effect only when db_type is MySQL and db_version is 8.0.
	DBMinorVersion *string `json:"dbMinorVersion,omitempty" tf:"db_minor_version,omitempty"`

	// The db_node_class of cluster node.
	// -> NOTE: Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	// From version 1.204.0, If you need to create a Serverless cluster with MySQL , db_node_class can be set to polar.mysql.sl.small.
	// From version 1.229.1, If you need to create a Serverless cluster with PostgreSQL 14 using the SENormal edition, db_node_class can be set to polar.pg.sl.small.c(x86 Architecture). Region can refer to the latest docs(https://help.aliyun.com/zh/polardb/polardb-for-postgresql/the-public-preview-of-polardb-for-postgresql-serverless-ends?spm=a2c4g.11186623.0.0.2e9f6cf0B4rIfC).
	DBNodeClass *string `json:"dbNodeClass,omitempty" tf:"db_node_class,omitempty"`

	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// -> NOTE: To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DBNodeCount *float64 `json:"dbNodeCount,omitempty" tf:"db_node_count,omitempty"`

	// The ID of the node or node subscript. Node subscript values: 1 to 15.
	DBNodeID *string `json:"dbNodeId,omitempty" tf:"db_node_id,omitempty"`

	// The number of Standard Edition nodes. Default value: 1. Valid values are 1, 2. From version 1.235.0, Valid values for PolarDB for MySQL Standard Edition: 1 to 8. Valid values for PolarDB for MySQL Enterprise Edition: 1 to 16.
	DBNodeNum *float64 `json:"dbNodeNum,omitempty" tf:"db_node_num,omitempty"`

	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DBType *string `json:"dbType,omitempty" tf:"db_type,omitempty"`

	// Database version. Value options can refer to the latest docs CreateDBCluster DBVersion.
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// The time zone of the cluster. You can set the parameter to a value that is on the hour from -12:00 to +13:00 based on UTC. Example: 00:00. Default value: SYSTEM. This value indicates that the time zone of the cluster is the same as the time zone of the region.
	// -> NOTE: This parameter is valid only when the DBType parameter is set to MySQL.
	DefaultTimeZone *string `json:"defaultTimeZone,omitempty" tf:"default_time_zone,omitempty"`

	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// -> NOTE:  Cannot modify after created when pay_type is Prepaid .deletion_lock the cluster protection lock can be turned on or off when pay_type is Postpaid.
	DeletionLock *float64 `json:"deletionLock,omitempty" tf:"deletion_lock,omitempty"`

	// The description of cluster.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// turn on table auto encryption. Valid values are ON, OFF. Only MySQL 8.0 supports.
	// -> NOTE: encrypt_new_tables Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables *string `json:"encryptNewTables,omitempty" tf:"encrypt_new_tables,omitempty"`

	// The ID of the custom key. encryption_key cannot be modified after TDE is opened.
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// Immediate or scheduled kernel version upgrade. Valid values are true, false. True means immediate execution, False means scheduled execution.
	FromTimeService *string `json:"fromTimeService,omitempty" tf:"from_time_service,omitempty"`

	// The ID of the global database network (GDN).
	// -> NOTE: This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnID *string `json:"gdnId,omitempty" tf:"gdn_id,omitempty"`

	// Indicates whether the hot standby feature is enabled. Valid values are ON, OFF. Only MySQL supports.
	HotReplicaMode *string `json:"hotReplicaMode,omitempty" tf:"hot_replica_mode,omitempty"`

	// Whether to enable the hot standby cluster. Valid values are ON, OFF, EQUAL.
	// -> NOTE: From version 1.249.0, hot_standby_cluster can be set to EQUAL, and this value is only valid for MySQL.
	HotStandbyCluster *string `json:"hotStandbyCluster,omitempty" tf:"hot_standby_cluster,omitempty"`

	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are ON, OFF.
	// -> NOTE:  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// -> NOTE:  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch *string `json:"imciSwitch,omitempty" tf:"imci_switch,omitempty"`

	// Enable the Binlog function. Default value: OFF. Valid values are OFF, ON.
	// -> NOTE: This parameter is valid only MySQL Engine supports.
	LoosePolarLogBin *string `json:"loosePolarLogBin,omitempty" tf:"loose_polar_log_bin,omitempty"`

	// Specifies whether to enable X-Engine. Valid values are ON, OFF.
	// -> NOTE: This parameter takes effect only if you do not set creation_option to CreateGdnStandby and you set db_type to MySQL and db_version to 8.0. To enable X-Engine on a node, make sure that the memory of the node is greater than or equal to 8 GB in size.
	LooseXengine *string `json:"looseXengine,omitempty" tf:"loose_xengine,omitempty"`

	// Set the ratio to enable the X-Engine storage engine. Valid values: 10 to 90.
	// -> NOTE: When the parameter loose_xengine is ON, loose_xengine_use_memory_pct takes effect.
	LooseXengineUseMemoryPct *float64 `json:"looseXengineUseMemoryPct,omitempty" tf:"loose_xengine_use_memory_pct,omitempty"`

	// Specifies whether the table names are case-sensitive. Default value: 1.  Valid values are 1, 0.
	// -> NOTE: This parameter is valid only when the DBType parameter is set to MySQL.
	LowerCaseTableNames *float64 `json:"lowerCaseTableNames,omitempty" tf:"lower_case_table_names,omitempty"`

	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime *string `json:"maintainTime,omitempty" tf:"maintain_time,omitempty"`

	// Use as db_node_class change class, define upgrade or downgrade. Valid values are Upgrade, Downgrade, Default to Upgrade.
	ModifyType *string `json:"modifyType,omitempty" tf:"modify_type,omitempty"`

	// The ID of the parameter template
	// -> NOTE: You can call the DescribeParameterGroups operation to query the details of all parameter templates of a specified region, such as the ID of a parameter template.
	ParameterGroupID *string `json:"parameterGroupId,omitempty" tf:"parameter_group_id,omitempty"`

	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs View database parameter templates .See parameters below.
	Parameters []ParametersInitParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Valid values are PrePaid, PostPaid, Default to PostPaid.
	PayType *string `json:"payType,omitempty" tf:"pay_type,omitempty"`

	// The duration that you will buy DB cluster (in month). It is valid when pay_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	// -> NOTE: The attribute period is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The latest time to start executing the target scheduled task. The format is YYYY-MM-DDThh: mm: ssZ (UTC).
	// -> NOTE: The latest time must be 30 minutes or more later than the start time. If PlannedStartTime is set but this parameter is not specified, the latest time to execute the target task defaults to the start time+30 minutes. For example, when the PlannedStartTime is set to 2021-01-14T09:00:00Z and this parameter is left blank, the target task will start executing at the latest on 2021-01-14T09:30:00Z.
	PlannedEndTime *string `json:"plannedEndTime,omitempty" tf:"planned_end_time,omitempty"`

	// The earliest time to start executing a scheduled (i.e. within the target time period) kernel version upgrade task. The format is YYYY-MM-DDThh: mm: ssZ (UTC).
	// -> NOTE: The starting time range is any time point within the next 24 hours. For example, the current time is 2021-01-14T09:00:00Z, and the allowed start time range for filling in here is 2021-01-14T09:00:00Z~2021-01-15T09:00:00Z. If this parameter is left blank, the kernel version upgrade task will be executed immediately by default.
	PlannedStartTime *string `json:"plannedStartTime,omitempty" tf:"planned_start_time,omitempty"`

	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}. Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.
	// -> NOTE: This parameter is available only if the StorageType parameter is set to ESSDAUTOPL.
	ProvisionedIops *string `json:"provisionedIops,omitempty" tf:"provisioned_iops,omitempty"`

	// The specifications of the Standard Edition PolarProxy. Available parameters can refer to the latest docs CreateDBCluster
	// -> NOTE: This parameter is valid only for standard edition clusters.
	ProxyClass *string `json:"proxyClass,omitempty" tf:"proxy_class,omitempty"`

	// The type of PolarProxy. Valid values are EXCLUSIVE GENERAL.
	// -> NOTE: This parameter is valid for both standard and enterprise clusters.
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	// Valid values are AutoRenewal, Normal, NotRenewal, Default to NotRenewal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// > NOTE: From version 1.250.0, resource_group_id can be modified.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see RAM role overview.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.RoleArnExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Number of Read-only Columnar Nodes. Valid values: 0 to 7. This parameter is valid only for serverless clusters. This parameter is required when there are column nodes that support steady-state serverless.
	ScaleApRoNumMax *float64 `json:"scaleApRoNumMax,omitempty" tf:"scale_ap_ro_num_max,omitempty"`

	// Number of Read-only Columnar Nodes. Valid values: 0 to 7. This parameter is valid only for serverless clusters. This parameter is required when there are column nodes that support steady-state serverless.
	ScaleApRoNumMin *float64 `json:"scaleApRoNumMin,omitempty" tf:"scale_ap_ro_num_min,omitempty"`

	// The maximum number of PCUs per node for scaling. Valid values: 1 PCU to 32 PCUs when serverless_type is AgileServerless and 0 PCU to 8 PCUs when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleMax *float64 `json:"scaleMax,omitempty" tf:"scale_max,omitempty"`

	// The minimum number of PCUs per node for scaling. Valid values: 1 PCU to 31 PCUs when serverless_type is AgileServerless and 0 PCU to 8 PCUs when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleMin *float64 `json:"scaleMin,omitempty" tf:"scale_min,omitempty"`

	// The maximum number of read-only nodes for scaling. Valid values: 0 to 15 when serverless_type is AgileServerless and 0 to 7 when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleRoNumMax *float64 `json:"scaleRoNumMax,omitempty" tf:"scale_ro_num_max,omitempty"`

	// The minimum number of read-only nodes for scaling. Valid values: 0 to 15 when serverless_type is AgileServerless and 0 to 7 when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleRoNumMin *float64 `json:"scaleRoNumMin,omitempty" tf:"scale_ro_num_min,omitempty"`

	// The detection period for No-activity Suspension. Valid values: 300 to 86,4005. Unit: seconds. The detection duration must be a multiple of 300 seconds. This parameter is valid only for serverless clusters.
	SecondsUntilAutoPause *float64 `json:"secondsUntilAutoPause,omitempty" tf:"seconds_until_auto_pause,omitempty"`

	// References to SecurityGroup in ecs to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRefs []v1.Reference `json:"securityGroupIdRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in ecs to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// -> NOTE: Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// This attribute has been deprecated from v1.130.0 and using db_cluster_ip_array sub-element security_ips instead.
	// Its value is same as db_cluster_ip_array sub-element security_ips value and its db_cluster_ip_array_name is "default".
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// CPU upscale threshold. Valid values: 40 to 100. This parameter is valid only for serverless clusters.
	// -> NOTE: serverless_rule_cpu_enlarge_threshold should be at least 30 greater than serverless_rule_cpu_shrink_threshold.
	ServerlessRuleCPUEnlargeThreshold *float64 `json:"serverlessRuleCpuEnlargeThreshold,omitempty" tf:"serverless_rule_cpu_enlarge_threshold,omitempty"`

	// CPU downscale threshold. Valid values: 10 to 100. This parameter is valid only for serverless clusters.
	ServerlessRuleCPUShrinkThreshold *float64 `json:"serverlessRuleCpuShrinkThreshold,omitempty" tf:"serverless_rule_cpu_shrink_threshold,omitempty"`

	// Elasticity sensitivity. Valid values: normal for standard and flexible for sensitive. This parameter is valid only for serverless clusters.
	ServerlessRuleMode *string `json:"serverlessRuleMode,omitempty" tf:"serverless_rule_mode,omitempty"`

	// Serverless steady-state switch. Valid values are ON, OFF. This parameter is valid only for serverless clusters.
	// -> NOTE: When serverless_steady_switch is ON and serverless_type is SteadyServerless, parameters scale_min, scale_max, scale_ro_num_min and scale_ro_num_max are all required.
	ServerlessSteadySwitch *string `json:"serverlessSteadySwitch,omitempty" tf:"serverless_steady_switch,omitempty"`

	// The type of the serverless cluster. Valid values AgileServerless, SteadyServerless. This parameter is valid only for serverless clusters.
	ServerlessType *string `json:"serverlessType,omitempty" tf:"serverless_type,omitempty"`

	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs CreateDBCluster SourceResourceId.
	SourceResourceID *string `json:"sourceResourceId,omitempty" tf:"source_resource_id,omitempty"`

	// The availability zone where the hot standby cluster is stored, takes effect when hot_standby_cluster is ON or EQUAL.
	// -> NOTE: standby_az is required when hot_standby_cluster is EQUAL.
	StandbyAz *string `json:"standbyAz,omitempty" tf:"standby_az,omitempty"`

	// The billing method of the storage. Valid values Postpaid, Prepaid.
	StoragePayType *string `json:"storagePayType,omitempty" tf:"storage_pay_type,omitempty"`

	// Storage space charged by space (monthly package). Unit: GB.
	// -> NOTE:  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when pay_type are PrePaid ,PostPaid.
	// -> NOTE:  Valid values for PolarDB for MySQL Enterprise Edition: 50 to 100000.It is valid when pay_type is PrePaid.
	StorageSpace *float64 `json:"storageSpace,omitempty" tf:"storage_space,omitempty"`

	// The storage type of the cluster. Enterprise storage type values are PSL5, PSL4. The standard version storage type values are ESSDPL1, ESSDPL2, ESSDPL3, ESSDPL0, ESSDAUTOPL. The standard version only supports MySQL and PostgreSQL.
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// Whether the cluster has enabled strong data consistency across multiple zones. Valid values are ON, OFF. Available parameters can refer to the latest docs CreateDBCluster
	StrictConsistency *string `json:"strictConsistency,omitempty" tf:"strict_consistency,omitempty"`

	// The category of the cluster. Valid values are Exclusive, General. Only MySQL supports.
	SubCategory *string `json:"subCategory,omitempty" tf:"sub_category,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Version Code of the target version, whose parameter values can be obtained from the DescribeDBClusterVersion interface.
	TargetDBRevisionVersionCode *string `json:"targetDbRevisionVersionCode,omitempty" tf:"target_db_revision_version_code,omitempty"`

	// turn on TDE encryption. Valid values are Enabled, Disabled. Default to Disabled. TDE cannot be closed after it is turned on.
	// -> NOTE: tde_status Cannot modify after created when db_type is PostgreSQL or Oracle.tde_status only support modification from Disabled to Enabled when db_type is MySQL.
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Version upgrade type. Valid values are PROXY, DB, ALL. PROXY means upgrading the proxy version, DB means upgrading the db version, ALL means upgrading both db and proxy versions simultaneously.
	UpgradeType *string `json:"upgradeType,omitempty" tf:"upgrade_type,omitempty"`

	// The id of the VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// The virtual switch ID to launch DB instances in one VPC.
	// -> NOTE: If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`

	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ClusterObservation struct {

	// Specifies whether to enable the no-activity suspension feature. Default value: false. Valid values are true, false. This parameter is valid only for serverless clusters.
	AllowShutDown *string `json:"allowShutDown,omitempty" tf:"allow_shut_down,omitempty"`

	// Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is PrePaid. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// The retention policy for the backup sets when you delete the cluster.  Valid values are ALL, LATEST, NONE. Value options can refer to the latest docs DeleteDBCluster
	BackupRetentionPolicyOnClusterDeletion *string `json:"backupRetentionPolicyOnClusterDeletion,omitempty" tf:"backup_retention_policy_on_cluster_deletion,omitempty"`

	// The time point of data to be cloned. Valid values are LATEST,BackupID,Timestamp.Value options can refer to the latest docs CreateDBCluster CloneDataPoint.
	// -> NOTE: If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	CloneDataPoint *string `json:"cloneDataPoint,omitempty" tf:"clone_data_point,omitempty"`

	// Specifies whether to enable or disable SQL data collector. Valid values are Enable, Disabled.
	CollectorStatus *string `json:"collectorStatus,omitempty" tf:"collector_status,omitempty"`

	// Enable storage compression function. The value of this parameter is ON. Only MySQL supports.
	// -> NOTE: When the value of db_type is not MySQL, the value of creation_option is neither empty nor Normal, and the value of storage_type is not PSL4, this field will be ignored.
	CompressStorage *string `json:"compressStorage,omitempty" tf:"compress_storage,omitempty"`

	// (Available since 1.81.0) PolarDB cluster connection string.
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// (Available since 1.204.1) PolarDB cluster creation time.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The edition of the PolarDB service. Valid values are Normal,Basic,ArchiveNormal,NormalMultimaster,SENormal.Value options can refer to the latest docs CreateDBCluster CreationCategory.
	// -> NOTE: You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, creation_category can be set to NormalMultimaster. From version 1.203.0, creation_category can be set to SENormal.
	CreationCategory *string `json:"creationCategory,omitempty" tf:"creation_category,omitempty"`

	// The method that is used to create a cluster. Valid values are Normal,CloneFromPolarDB,CloneFromRDS,MigrationFromRDS,CreateGdnStandby,RecoverFromRecyclebin,UpgradeFromPolarDB. NOTE: From version 1.233.0, creation_option can be set to RecoverFromRecyclebin. From version 1.255.0, creation_option can be set to UpgradeFromPolarDB. Value options can refer to the latest docs CreateDBCluster CreationOption.
	CreationOption *string `json:"creationOption,omitempty" tf:"creation_option,omitempty"`

	// db_cluster_ip_array defines how users can send requests to your API. See db_cluster_ip_array below.
	DBClusterIPArray []DBClusterIPArrayObservation `json:"dbClusterIpArray,omitempty" tf:"db_cluster_ip_array,omitempty"`

	// Database minor version. Value options can refer to the latest docs CreateDBCluster DBMinorVersion. This parameter takes effect only when db_type is MySQL and db_version is 8.0.
	DBMinorVersion *string `json:"dbMinorVersion,omitempty" tf:"db_minor_version,omitempty"`

	// The db_node_class of cluster node.
	// -> NOTE: Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	// From version 1.204.0, If you need to create a Serverless cluster with MySQL , db_node_class can be set to polar.mysql.sl.small.
	// From version 1.229.1, If you need to create a Serverless cluster with PostgreSQL 14 using the SENormal edition, db_node_class can be set to polar.pg.sl.small.c(x86 Architecture). Region can refer to the latest docs(https://help.aliyun.com/zh/polardb/polardb-for-postgresql/the-public-preview-of-polardb-for-postgresql-serverless-ends?spm=a2c4g.11186623.0.0.2e9f6cf0B4rIfC).
	DBNodeClass *string `json:"dbNodeClass,omitempty" tf:"db_node_class,omitempty"`

	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// -> NOTE: To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	DBNodeCount *float64 `json:"dbNodeCount,omitempty" tf:"db_node_count,omitempty"`

	// The ID of the node or node subscript. Node subscript values: 1 to 15.
	DBNodeID *string `json:"dbNodeId,omitempty" tf:"db_node_id,omitempty"`

	// The number of Standard Edition nodes. Default value: 1. Valid values are 1, 2. From version 1.235.0, Valid values for PolarDB for MySQL Standard Edition: 1 to 8. Valid values for PolarDB for MySQL Enterprise Edition: 1 to 16.
	DBNodeNum *float64 `json:"dbNodeNum,omitempty" tf:"db_node_num,omitempty"`

	// (Available since v1.216.0) The db_revision_version_list supports the following:
	DBRevisionVersionList []DBRevisionVersionListObservation `json:"dbRevisionVersionList,omitempty" tf:"db_revision_version_list,omitempty"`

	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	DBType *string `json:"dbType,omitempty" tf:"db_type,omitempty"`

	// Database version. Value options can refer to the latest docs CreateDBCluster DBVersion.
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// The time zone of the cluster. You can set the parameter to a value that is on the hour from -12:00 to +13:00 based on UTC. Example: 00:00. Default value: SYSTEM. This value indicates that the time zone of the cluster is the same as the time zone of the region.
	// -> NOTE: This parameter is valid only when the DBType parameter is set to MySQL.
	DefaultTimeZone *string `json:"defaultTimeZone,omitempty" tf:"default_time_zone,omitempty"`

	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// -> NOTE:  Cannot modify after created when pay_type is Prepaid .deletion_lock the cluster protection lock can be turned on or off when pay_type is Postpaid.
	DeletionLock *float64 `json:"deletionLock,omitempty" tf:"deletion_lock,omitempty"`

	// The description of cluster.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// turn on table auto encryption. Valid values are ON, OFF. Only MySQL 8.0 supports.
	// -> NOTE: encrypt_new_tables Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	EncryptNewTables *string `json:"encryptNewTables,omitempty" tf:"encrypt_new_tables,omitempty"`

	// The ID of the custom key. encryption_key cannot be modified after TDE is opened.
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// Immediate or scheduled kernel version upgrade. Valid values are true, false. True means immediate execution, False means scheduled execution.
	FromTimeService *string `json:"fromTimeService,omitempty" tf:"from_time_service,omitempty"`

	// The ID of the global database network (GDN).
	// -> NOTE: This parameter is required if CreationOption is set to CreateGdnStandby.
	GdnID *string `json:"gdnId,omitempty" tf:"gdn_id,omitempty"`

	// Indicates whether the hot standby feature is enabled. Valid values are ON, OFF. Only MySQL supports.
	HotReplicaMode *string `json:"hotReplicaMode,omitempty" tf:"hot_replica_mode,omitempty"`

	// Whether to enable the hot standby cluster. Valid values are ON, OFF, EQUAL.
	// -> NOTE: From version 1.249.0, hot_standby_cluster can be set to EQUAL, and this value is only valid for MySQL.
	HotStandbyCluster *string `json:"hotStandbyCluster,omitempty" tf:"hot_standby_cluster,omitempty"`

	// The PolarDB cluster ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are ON, OFF.
	// -> NOTE:  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// -> NOTE:  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	ImciSwitch *string `json:"imciSwitch,omitempty" tf:"imci_switch,omitempty"`

	// Enable the Binlog function. Default value: OFF. Valid values are OFF, ON.
	// -> NOTE: This parameter is valid only MySQL Engine supports.
	LoosePolarLogBin *string `json:"loosePolarLogBin,omitempty" tf:"loose_polar_log_bin,omitempty"`

	// Specifies whether to enable X-Engine. Valid values are ON, OFF.
	// -> NOTE: This parameter takes effect only if you do not set creation_option to CreateGdnStandby and you set db_type to MySQL and db_version to 8.0. To enable X-Engine on a node, make sure that the memory of the node is greater than or equal to 8 GB in size.
	LooseXengine *string `json:"looseXengine,omitempty" tf:"loose_xengine,omitempty"`

	// Set the ratio to enable the X-Engine storage engine. Valid values: 10 to 90.
	// -> NOTE: When the parameter loose_xengine is ON, loose_xengine_use_memory_pct takes effect.
	LooseXengineUseMemoryPct *float64 `json:"looseXengineUseMemoryPct,omitempty" tf:"loose_xengine_use_memory_pct,omitempty"`

	// Specifies whether the table names are case-sensitive. Default value: 1.  Valid values are 1, 0.
	// -> NOTE: This parameter is valid only when the DBType parameter is set to MySQL.
	LowerCaseTableNames *float64 `json:"lowerCaseTableNames,omitempty" tf:"lower_case_table_names,omitempty"`

	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	MaintainTime *string `json:"maintainTime,omitempty" tf:"maintain_time,omitempty"`

	// Use as db_node_class change class, define upgrade or downgrade. Valid values are Upgrade, Downgrade, Default to Upgrade.
	ModifyType *string `json:"modifyType,omitempty" tf:"modify_type,omitempty"`

	// The ID of the parameter template
	// -> NOTE: You can call the DescribeParameterGroups operation to query the details of all parameter templates of a specified region, such as the ID of a parameter template.
	ParameterGroupID *string `json:"parameterGroupId,omitempty" tf:"parameter_group_id,omitempty"`

	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs View database parameter templates .See parameters below.
	Parameters []ParametersObservation `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Valid values are PrePaid, PostPaid, Default to PostPaid.
	PayType *string `json:"payType,omitempty" tf:"pay_type,omitempty"`

	// The duration that you will buy DB cluster (in month). It is valid when pay_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	// -> NOTE: The attribute period is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The latest time to start executing the target scheduled task. The format is YYYY-MM-DDThh: mm: ssZ (UTC).
	// -> NOTE: The latest time must be 30 minutes or more later than the start time. If PlannedStartTime is set but this parameter is not specified, the latest time to execute the target task defaults to the start time+30 minutes. For example, when the PlannedStartTime is set to 2021-01-14T09:00:00Z and this parameter is left blank, the target task will start executing at the latest on 2021-01-14T09:30:00Z.
	PlannedEndTime *string `json:"plannedEndTime,omitempty" tf:"planned_end_time,omitempty"`

	// The earliest time to start executing a scheduled (i.e. within the target time period) kernel version upgrade task. The format is YYYY-MM-DDThh: mm: ssZ (UTC).
	// -> NOTE: The starting time range is any time point within the next 24 hours. For example, the current time is 2021-01-14T09:00:00Z, and the allowed start time range for filling in here is 2021-01-14T09:00:00Z~2021-01-15T09:00:00Z. If this parameter is left blank, the kernel version upgrade task will be executed immediately by default.
	PlannedStartTime *string `json:"plannedStartTime,omitempty" tf:"planned_start_time,omitempty"`

	// (Available since 1.196.0) PolarDB cluster connection port.
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}. Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.
	// -> NOTE: This parameter is available only if the StorageType parameter is set to ESSDAUTOPL.
	ProvisionedIops *string `json:"provisionedIops,omitempty" tf:"provisioned_iops,omitempty"`

	// The specifications of the Standard Edition PolarProxy. Available parameters can refer to the latest docs CreateDBCluster
	// -> NOTE: This parameter is valid only for standard edition clusters.
	ProxyClass *string `json:"proxyClass,omitempty" tf:"proxy_class,omitempty"`

	// The type of PolarProxy. Valid values are EXCLUSIVE GENERAL.
	// -> NOTE: This parameter is valid for both standard and enterprise clusters.
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	// Valid values are AutoRenewal, Normal, NotRenewal, Default to NotRenewal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// > NOTE: From version 1.250.0, resource_group_id can be modified.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see RAM role overview.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Number of Read-only Columnar Nodes. Valid values: 0 to 7. This parameter is valid only for serverless clusters. This parameter is required when there are column nodes that support steady-state serverless.
	ScaleApRoNumMax *float64 `json:"scaleApRoNumMax,omitempty" tf:"scale_ap_ro_num_max,omitempty"`

	// Number of Read-only Columnar Nodes. Valid values: 0 to 7. This parameter is valid only for serverless clusters. This parameter is required when there are column nodes that support steady-state serverless.
	ScaleApRoNumMin *float64 `json:"scaleApRoNumMin,omitempty" tf:"scale_ap_ro_num_min,omitempty"`

	// The maximum number of PCUs per node for scaling. Valid values: 1 PCU to 32 PCUs when serverless_type is AgileServerless and 0 PCU to 8 PCUs when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleMax *float64 `json:"scaleMax,omitempty" tf:"scale_max,omitempty"`

	// The minimum number of PCUs per node for scaling. Valid values: 1 PCU to 31 PCUs when serverless_type is AgileServerless and 0 PCU to 8 PCUs when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleMin *float64 `json:"scaleMin,omitempty" tf:"scale_min,omitempty"`

	// The maximum number of read-only nodes for scaling. Valid values: 0 to 15 when serverless_type is AgileServerless and 0 to 7 when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleRoNumMax *float64 `json:"scaleRoNumMax,omitempty" tf:"scale_ro_num_max,omitempty"`

	// The minimum number of read-only nodes for scaling. Valid values: 0 to 15 when serverless_type is AgileServerless and 0 to 7 when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	ScaleRoNumMin *float64 `json:"scaleRoNumMin,omitempty" tf:"scale_ro_num_min,omitempty"`

	// The detection period for No-activity Suspension. Valid values: 300 to 86,4005. Unit: seconds. The detection duration must be a multiple of 300 seconds. This parameter is valid only for serverless clusters.
	SecondsUntilAutoPause *float64 `json:"secondsUntilAutoPause,omitempty" tf:"seconds_until_auto_pause,omitempty"`

	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// -> NOTE: Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// This attribute has been deprecated from v1.130.0 and using db_cluster_ip_array sub-element security_ips instead.
	// Its value is same as db_cluster_ip_array sub-element security_ips value and its db_cluster_ip_array_name is "default".
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// CPU upscale threshold. Valid values: 40 to 100. This parameter is valid only for serverless clusters.
	// -> NOTE: serverless_rule_cpu_enlarge_threshold should be at least 30 greater than serverless_rule_cpu_shrink_threshold.
	ServerlessRuleCPUEnlargeThreshold *float64 `json:"serverlessRuleCpuEnlargeThreshold,omitempty" tf:"serverless_rule_cpu_enlarge_threshold,omitempty"`

	// CPU downscale threshold. Valid values: 10 to 100. This parameter is valid only for serverless clusters.
	ServerlessRuleCPUShrinkThreshold *float64 `json:"serverlessRuleCpuShrinkThreshold,omitempty" tf:"serverless_rule_cpu_shrink_threshold,omitempty"`

	// Elasticity sensitivity. Valid values: normal for standard and flexible for sensitive. This parameter is valid only for serverless clusters.
	ServerlessRuleMode *string `json:"serverlessRuleMode,omitempty" tf:"serverless_rule_mode,omitempty"`

	// Serverless steady-state switch. Valid values are ON, OFF. This parameter is valid only for serverless clusters.
	// -> NOTE: When serverless_steady_switch is ON and serverless_type is SteadyServerless, parameters scale_min, scale_max, scale_ro_num_min and scale_ro_num_max are all required.
	ServerlessSteadySwitch *string `json:"serverlessSteadySwitch,omitempty" tf:"serverless_steady_switch,omitempty"`

	// The type of the serverless cluster. Valid values AgileServerless, SteadyServerless. This parameter is valid only for serverless clusters.
	ServerlessType *string `json:"serverlessType,omitempty" tf:"serverless_type,omitempty"`

	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs CreateDBCluster SourceResourceId.
	SourceResourceID *string `json:"sourceResourceId,omitempty" tf:"source_resource_id,omitempty"`

	// The availability zone where the hot standby cluster is stored, takes effect when hot_standby_cluster is ON or EQUAL.
	// -> NOTE: standby_az is required when hot_standby_cluster is EQUAL.
	StandbyAz *string `json:"standbyAz,omitempty" tf:"standby_az,omitempty"`

	// (Available since 1.204.1) PolarDB cluster status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The billing method of the storage. Valid values Postpaid, Prepaid.
	StoragePayType *string `json:"storagePayType,omitempty" tf:"storage_pay_type,omitempty"`

	// Storage space charged by space (monthly package). Unit: GB.
	// -> NOTE:  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when pay_type are PrePaid ,PostPaid.
	// -> NOTE:  Valid values for PolarDB for MySQL Enterprise Edition: 50 to 100000.It is valid when pay_type is PrePaid.
	StorageSpace *float64 `json:"storageSpace,omitempty" tf:"storage_space,omitempty"`

	// The storage type of the cluster. Enterprise storage type values are PSL5, PSL4. The standard version storage type values are ESSDPL1, ESSDPL2, ESSDPL3, ESSDPL0, ESSDAUTOPL. The standard version only supports MySQL and PostgreSQL.
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// Whether the cluster has enabled strong data consistency across multiple zones. Valid values are ON, OFF. Available parameters can refer to the latest docs CreateDBCluster
	StrictConsistency *string `json:"strictConsistency,omitempty" tf:"strict_consistency,omitempty"`

	// The category of the cluster. Valid values are Exclusive, General. Only MySQL supports.
	SubCategory *string `json:"subCategory,omitempty" tf:"sub_category,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Version Code of the target version, whose parameter values can be obtained from the DescribeDBClusterVersion interface.
	TargetDBRevisionVersionCode *string `json:"targetDbRevisionVersionCode,omitempty" tf:"target_db_revision_version_code,omitempty"`

	// (Available since 1.200.0) The region where the TDE key resides.
	// -> NOTE: TDE can be enabled on clusters that have joined a global database network (GDN). After TDE is enabled on the primary cluster in a GDN, TDE is enabled on the secondary clusters in the GDN by default. The key used by the secondary clusters and the region for the key resides must be the same as the primary cluster. The region of the key cannot be modified.
	// -> NOTE: You cannot enable TDE for the secondary clusters in a GDN. Used to view user KMS activation status.
	TdeRegion *string `json:"tdeRegion,omitempty" tf:"tde_region,omitempty"`

	// turn on TDE encryption. Valid values are Enabled, Disabled. Default to Disabled. TDE cannot be closed after it is turned on.
	// -> NOTE: tde_status Cannot modify after created when db_type is PostgreSQL or Oracle.tde_status only support modification from Disabled to Enabled when db_type is MySQL.
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Version upgrade type. Valid values are PROXY, DB, ALL. PROXY means upgrading the proxy version, DB means upgrading the db version, ALL means upgrading both db and proxy versions simultaneously.
	UpgradeType *string `json:"upgradeType,omitempty" tf:"upgrade_type,omitempty"`

	// The id of the VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// The virtual switch ID to launch DB instances in one VPC.
	// -> NOTE: If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// The Zone to launch the DB cluster. it supports multiple zone.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ClusterParameters struct {

	// Specifies whether to enable the no-activity suspension feature. Default value: false. Valid values are true, false. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	AllowShutDown *string `json:"allowShutDown,omitempty" tf:"allow_shut_down,omitempty"`

	// Auto-renewal period of an cluster, in the unit of the month. It is valid when pay_type is PrePaid. Valid value:1, 2, 3, 6, 12, 24, 36, Default to 1.
	// +kubebuilder:validation:Optional
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// The retention policy for the backup sets when you delete the cluster.  Valid values are ALL, LATEST, NONE. Value options can refer to the latest docs DeleteDBCluster
	// +kubebuilder:validation:Optional
	BackupRetentionPolicyOnClusterDeletion *string `json:"backupRetentionPolicyOnClusterDeletion,omitempty" tf:"backup_retention_policy_on_cluster_deletion,omitempty"`

	// The time point of data to be cloned. Valid values are LATEST,BackupID,Timestamp.Value options can refer to the latest docs CreateDBCluster CloneDataPoint.
	// -> NOTE: If CreationOption is set to CloneFromRDS, the value of this parameter must be LATEST.
	// +kubebuilder:validation:Optional
	CloneDataPoint *string `json:"cloneDataPoint,omitempty" tf:"clone_data_point,omitempty"`

	// Specifies whether to enable or disable SQL data collector. Valid values are Enable, Disabled.
	// +kubebuilder:validation:Optional
	CollectorStatus *string `json:"collectorStatus,omitempty" tf:"collector_status,omitempty"`

	// Enable storage compression function. The value of this parameter is ON. Only MySQL supports.
	// -> NOTE: When the value of db_type is not MySQL, the value of creation_option is neither empty nor Normal, and the value of storage_type is not PSL4, this field will be ignored.
	// +kubebuilder:validation:Optional
	CompressStorage *string `json:"compressStorage,omitempty" tf:"compress_storage,omitempty"`

	// The edition of the PolarDB service. Valid values are Normal,Basic,ArchiveNormal,NormalMultimaster,SENormal.Value options can refer to the latest docs CreateDBCluster CreationCategory.
	// -> NOTE: You can set this parameter to Basic only when DBType is set to MySQL and DBVersion is set to 5.6, 5.7, or 8.0. You can set this parameter to Archive only when DBType is set to MySQL and DBVersion is set to 8.0. From version 1.188.0, creation_category can be set to NormalMultimaster. From version 1.203.0, creation_category can be set to SENormal.
	// +kubebuilder:validation:Optional
	CreationCategory *string `json:"creationCategory,omitempty" tf:"creation_category,omitempty"`

	// The method that is used to create a cluster. Valid values are Normal,CloneFromPolarDB,CloneFromRDS,MigrationFromRDS,CreateGdnStandby,RecoverFromRecyclebin,UpgradeFromPolarDB. NOTE: From version 1.233.0, creation_option can be set to RecoverFromRecyclebin. From version 1.255.0, creation_option can be set to UpgradeFromPolarDB. Value options can refer to the latest docs CreateDBCluster CreationOption.
	// +kubebuilder:validation:Optional
	CreationOption *string `json:"creationOption,omitempty" tf:"creation_option,omitempty"`

	// db_cluster_ip_array defines how users can send requests to your API. See db_cluster_ip_array below.
	// +kubebuilder:validation:Optional
	DBClusterIPArray []DBClusterIPArrayParameters `json:"dbClusterIpArray,omitempty" tf:"db_cluster_ip_array,omitempty"`

	// Database minor version. Value options can refer to the latest docs CreateDBCluster DBMinorVersion. This parameter takes effect only when db_type is MySQL and db_version is 8.0.
	// +kubebuilder:validation:Optional
	DBMinorVersion *string `json:"dbMinorVersion,omitempty" tf:"db_minor_version,omitempty"`

	// The db_node_class of cluster node.
	// -> NOTE: Node specifications are divided into cluster version, single node version and History Library version. They can't change each other, but the general specification and exclusive specification of cluster version can be changed.
	// From version 1.204.0, If you need to create a Serverless cluster with MySQL , db_node_class can be set to polar.mysql.sl.small.
	// From version 1.229.1, If you need to create a Serverless cluster with PostgreSQL 14 using the SENormal edition, db_node_class can be set to polar.pg.sl.small.c(x86 Architecture). Region can refer to the latest docs(https://help.aliyun.com/zh/polardb/polardb-for-postgresql/the-public-preview-of-polardb-for-postgresql-serverless-ends?spm=a2c4g.11186623.0.0.2e9f6cf0B4rIfC).
	// +kubebuilder:validation:Optional
	DBNodeClass *string `json:"dbNodeClass,omitempty" tf:"db_node_class,omitempty"`

	// Number of the PolarDB cluster nodes, default is 2(Each cluster must contain at least a primary node and a read-only node). Add/remove nodes by modifying this parameter, valid values: [2~16].
	// -> NOTE: To avoid adding or removing multiple read-only nodes by mistake, the system allows you to add or remove one read-only node at a time.
	// +kubebuilder:validation:Optional
	DBNodeCount *float64 `json:"dbNodeCount,omitempty" tf:"db_node_count,omitempty"`

	// The ID of the node or node subscript. Node subscript values: 1 to 15.
	// +kubebuilder:validation:Optional
	DBNodeID *string `json:"dbNodeId,omitempty" tf:"db_node_id,omitempty"`

	// The number of Standard Edition nodes. Default value: 1. Valid values are 1, 2. From version 1.235.0, Valid values for PolarDB for MySQL Standard Edition: 1 to 8. Valid values for PolarDB for MySQL Enterprise Edition: 1 to 16.
	// +kubebuilder:validation:Optional
	DBNodeNum *float64 `json:"dbNodeNum,omitempty" tf:"db_node_num,omitempty"`

	// Database type. Value options: MySQL, Oracle, PostgreSQL.
	// +kubebuilder:validation:Optional
	DBType *string `json:"dbType,omitempty" tf:"db_type,omitempty"`

	// Database version. Value options can refer to the latest docs CreateDBCluster DBVersion.
	// +kubebuilder:validation:Optional
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// The time zone of the cluster. You can set the parameter to a value that is on the hour from -12:00 to +13:00 based on UTC. Example: 00:00. Default value: SYSTEM. This value indicates that the time zone of the cluster is the same as the time zone of the region.
	// -> NOTE: This parameter is valid only when the DBType parameter is set to MySQL.
	// +kubebuilder:validation:Optional
	DefaultTimeZone *string `json:"defaultTimeZone,omitempty" tf:"default_time_zone,omitempty"`

	// turn on table deletion_lock. Valid values are 0, 1. 1 means to open the cluster protection lock, 0 means to close the cluster protection lock
	// -> NOTE:  Cannot modify after created when pay_type is Prepaid .deletion_lock the cluster protection lock can be turned on or off when pay_type is Postpaid.
	// +kubebuilder:validation:Optional
	DeletionLock *float64 `json:"deletionLock,omitempty" tf:"deletion_lock,omitempty"`

	// The description of cluster.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// turn on table auto encryption. Valid values are ON, OFF. Only MySQL 8.0 supports.
	// -> NOTE: encrypt_new_tables Polardb MySQL 8.0 cluster, after TDE and Automatic Encryption are enabled, all newly created tables are automatically encrypted in the cluster.
	// +kubebuilder:validation:Optional
	EncryptNewTables *string `json:"encryptNewTables,omitempty" tf:"encrypt_new_tables,omitempty"`

	// The ID of the custom key. encryption_key cannot be modified after TDE is opened.
	// +kubebuilder:validation:Optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// Immediate or scheduled kernel version upgrade. Valid values are true, false. True means immediate execution, False means scheduled execution.
	// +kubebuilder:validation:Optional
	FromTimeService *string `json:"fromTimeService,omitempty" tf:"from_time_service,omitempty"`

	// The ID of the global database network (GDN).
	// -> NOTE: This parameter is required if CreationOption is set to CreateGdnStandby.
	// +kubebuilder:validation:Optional
	GdnID *string `json:"gdnId,omitempty" tf:"gdn_id,omitempty"`

	// Indicates whether the hot standby feature is enabled. Valid values are ON, OFF. Only MySQL supports.
	// +kubebuilder:validation:Optional
	HotReplicaMode *string `json:"hotReplicaMode,omitempty" tf:"hot_replica_mode,omitempty"`

	// Whether to enable the hot standby cluster. Valid values are ON, OFF, EQUAL.
	// -> NOTE: From version 1.249.0, hot_standby_cluster can be set to EQUAL, and this value is only valid for MySQL.
	// +kubebuilder:validation:Optional
	HotStandbyCluster *string `json:"hotStandbyCluster,omitempty" tf:"hot_standby_cluster,omitempty"`

	// Specifies whether to enable the In-Memory Column Index (IMCI) feature. Valid values are ON, OFF.
	// -> NOTE:  Only polardb MySQL Cluster version is available. The cluster with minor version number of 8.0.1 supports the column index feature, and the specific kernel version must be 8.0.1.1.22 or above.
	// -> NOTE:  The single node, the single node version of the history library, and the cluster version of the history library do not support column save indexes.
	// +kubebuilder:validation:Optional
	ImciSwitch *string `json:"imciSwitch,omitempty" tf:"imci_switch,omitempty"`

	// Enable the Binlog function. Default value: OFF. Valid values are OFF, ON.
	// -> NOTE: This parameter is valid only MySQL Engine supports.
	// +kubebuilder:validation:Optional
	LoosePolarLogBin *string `json:"loosePolarLogBin,omitempty" tf:"loose_polar_log_bin,omitempty"`

	// Specifies whether to enable X-Engine. Valid values are ON, OFF.
	// -> NOTE: This parameter takes effect only if you do not set creation_option to CreateGdnStandby and you set db_type to MySQL and db_version to 8.0. To enable X-Engine on a node, make sure that the memory of the node is greater than or equal to 8 GB in size.
	// +kubebuilder:validation:Optional
	LooseXengine *string `json:"looseXengine,omitempty" tf:"loose_xengine,omitempty"`

	// Set the ratio to enable the X-Engine storage engine. Valid values: 10 to 90.
	// -> NOTE: When the parameter loose_xengine is ON, loose_xengine_use_memory_pct takes effect.
	// +kubebuilder:validation:Optional
	LooseXengineUseMemoryPct *float64 `json:"looseXengineUseMemoryPct,omitempty" tf:"loose_xengine_use_memory_pct,omitempty"`

	// Specifies whether the table names are case-sensitive. Default value: 1.  Valid values are 1, 0.
	// -> NOTE: This parameter is valid only when the DBType parameter is set to MySQL.
	// +kubebuilder:validation:Optional
	LowerCaseTableNames *float64 `json:"lowerCaseTableNames,omitempty" tf:"lower_case_table_names,omitempty"`

	// Maintainable time period format of the instance: HH:MMZ-HH:MMZ (UTC time)
	// +kubebuilder:validation:Optional
	MaintainTime *string `json:"maintainTime,omitempty" tf:"maintain_time,omitempty"`

	// Use as db_node_class change class, define upgrade or downgrade. Valid values are Upgrade, Downgrade, Default to Upgrade.
	// +kubebuilder:validation:Optional
	ModifyType *string `json:"modifyType,omitempty" tf:"modify_type,omitempty"`

	// The ID of the parameter template
	// -> NOTE: You can call the DescribeParameterGroups operation to query the details of all parameter templates of a specified region, such as the ID of a parameter template.
	// +kubebuilder:validation:Optional
	ParameterGroupID *string `json:"parameterGroupId,omitempty" tf:"parameter_group_id,omitempty"`

	// Set of parameters needs to be set after DB cluster was launched. Available parameters can refer to the latest docs View database parameter templates .See parameters below.
	// +kubebuilder:validation:Optional
	Parameters []ParametersParameters `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Valid values are PrePaid, PostPaid, Default to PostPaid.
	// +kubebuilder:validation:Optional
	PayType *string `json:"payType,omitempty" tf:"pay_type,omitempty"`

	// The duration that you will buy DB cluster (in month). It is valid when pay_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	// -> NOTE: The attribute period is only used to create Subscription instance or modify the PayAsYouGo instance to Subscription.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The latest time to start executing the target scheduled task. The format is YYYY-MM-DDThh: mm: ssZ (UTC).
	// -> NOTE: The latest time must be 30 minutes or more later than the start time. If PlannedStartTime is set but this parameter is not specified, the latest time to execute the target task defaults to the start time+30 minutes. For example, when the PlannedStartTime is set to 2021-01-14T09:00:00Z and this parameter is left blank, the target task will start executing at the latest on 2021-01-14T09:30:00Z.
	// +kubebuilder:validation:Optional
	PlannedEndTime *string `json:"plannedEndTime,omitempty" tf:"planned_end_time,omitempty"`

	// The earliest time to start executing a scheduled (i.e. within the target time period) kernel version upgrade task. The format is YYYY-MM-DDThh: mm: ssZ (UTC).
	// -> NOTE: The starting time range is any time point within the next 24 hours. For example, the current time is 2021-01-14T09:00:00Z, and the allowed start time range for filling in here is 2021-01-14T09:00:00Z~2021-01-15T09:00:00Z. If this parameter is left blank, the kernel version upgrade task will be executed immediately by default.
	// +kubebuilder:validation:Optional
	PlannedStartTime *string `json:"plannedStartTime,omitempty" tf:"planned_start_time,omitempty"`

	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}. Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.
	// -> NOTE: This parameter is available only if the StorageType parameter is set to ESSDAUTOPL.
	// +kubebuilder:validation:Optional
	ProvisionedIops *string `json:"provisionedIops,omitempty" tf:"provisioned_iops,omitempty"`

	// The specifications of the Standard Edition PolarProxy. Available parameters can refer to the latest docs CreateDBCluster
	// -> NOTE: This parameter is valid only for standard edition clusters.
	// +kubebuilder:validation:Optional
	ProxyClass *string `json:"proxyClass,omitempty" tf:"proxy_class,omitempty"`

	// The type of PolarProxy. Valid values are EXCLUSIVE GENERAL.
	// -> NOTE: This parameter is valid for both standard and enterprise clusters.
	// +kubebuilder:validation:Optional
	ProxyType *string `json:"proxyType,omitempty" tf:"proxy_type,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Valid values are AutoRenewal, Normal, NotRenewal, Default to NotRenewal.
	// +kubebuilder:validation:Optional
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// > NOTE: From version 1.250.0, resource_group_id can be modified.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The Alibaba Cloud Resource Name (ARN) of the RAM role. A RAM role is a virtual identity that you can create within your Alibaba Cloud account. For more information see RAM role overview.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.RoleArnExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Number of Read-only Columnar Nodes. Valid values: 0 to 7. This parameter is valid only for serverless clusters. This parameter is required when there are column nodes that support steady-state serverless.
	// +kubebuilder:validation:Optional
	ScaleApRoNumMax *float64 `json:"scaleApRoNumMax,omitempty" tf:"scale_ap_ro_num_max,omitempty"`

	// Number of Read-only Columnar Nodes. Valid values: 0 to 7. This parameter is valid only for serverless clusters. This parameter is required when there are column nodes that support steady-state serverless.
	// +kubebuilder:validation:Optional
	ScaleApRoNumMin *float64 `json:"scaleApRoNumMin,omitempty" tf:"scale_ap_ro_num_min,omitempty"`

	// The maximum number of PCUs per node for scaling. Valid values: 1 PCU to 32 PCUs when serverless_type is AgileServerless and 0 PCU to 8 PCUs when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ScaleMax *float64 `json:"scaleMax,omitempty" tf:"scale_max,omitempty"`

	// The minimum number of PCUs per node for scaling. Valid values: 1 PCU to 31 PCUs when serverless_type is AgileServerless and 0 PCU to 8 PCUs when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ScaleMin *float64 `json:"scaleMin,omitempty" tf:"scale_min,omitempty"`

	// The maximum number of read-only nodes for scaling. Valid values: 0 to 15 when serverless_type is AgileServerless and 0 to 7 when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ScaleRoNumMax *float64 `json:"scaleRoNumMax,omitempty" tf:"scale_ro_num_max,omitempty"`

	// The minimum number of read-only nodes for scaling. Valid values: 0 to 15 when serverless_type is AgileServerless and 0 to 7 when serverless_type is SteadyServerless. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ScaleRoNumMin *float64 `json:"scaleRoNumMin,omitempty" tf:"scale_ro_num_min,omitempty"`

	// The detection period for No-activity Suspension. Valid values: 300 to 86,4005. Unit: seconds. The detection duration must be a multiple of 300 seconds. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	SecondsUntilAutoPause *float64 `json:"secondsUntilAutoPause,omitempty" tf:"seconds_until_auto_pause,omitempty"`

	// References to SecurityGroup in ecs to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRefs []v1.Reference `json:"securityGroupIdRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in ecs to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// The ID of the security group. Separate multiple security groups with commas (,). You can add a maximum of three security groups to a cluster.
	// -> NOTE: Because of data backup and migration, change DB cluster type and storage would cost 15~20 minutes. Please make full preparation before changing them.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// This attribute has been deprecated from v1.130.0 and using db_cluster_ip_array sub-element security_ips instead.
	// Its value is same as db_cluster_ip_array sub-element security_ips value and its db_cluster_ip_array_name is "default".
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// CPU upscale threshold. Valid values: 40 to 100. This parameter is valid only for serverless clusters.
	// -> NOTE: serverless_rule_cpu_enlarge_threshold should be at least 30 greater than serverless_rule_cpu_shrink_threshold.
	// +kubebuilder:validation:Optional
	ServerlessRuleCPUEnlargeThreshold *float64 `json:"serverlessRuleCpuEnlargeThreshold,omitempty" tf:"serverless_rule_cpu_enlarge_threshold,omitempty"`

	// CPU downscale threshold. Valid values: 10 to 100. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ServerlessRuleCPUShrinkThreshold *float64 `json:"serverlessRuleCpuShrinkThreshold,omitempty" tf:"serverless_rule_cpu_shrink_threshold,omitempty"`

	// Elasticity sensitivity. Valid values: normal for standard and flexible for sensitive. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ServerlessRuleMode *string `json:"serverlessRuleMode,omitempty" tf:"serverless_rule_mode,omitempty"`

	// Serverless steady-state switch. Valid values are ON, OFF. This parameter is valid only for serverless clusters.
	// -> NOTE: When serverless_steady_switch is ON and serverless_type is SteadyServerless, parameters scale_min, scale_max, scale_ro_num_min and scale_ro_num_max are all required.
	// +kubebuilder:validation:Optional
	ServerlessSteadySwitch *string `json:"serverlessSteadySwitch,omitempty" tf:"serverless_steady_switch,omitempty"`

	// The type of the serverless cluster. Valid values AgileServerless, SteadyServerless. This parameter is valid only for serverless clusters.
	// +kubebuilder:validation:Optional
	ServerlessType *string `json:"serverlessType,omitempty" tf:"serverless_type,omitempty"`

	// The ID of the source RDS instance or the ID of the source PolarDB cluster. This parameter is required only when CreationOption is set to MigrationFromRDS, CloneFromRDS, or CloneFromPolarDB.Value options can refer to the latest docs CreateDBCluster SourceResourceId.
	// +kubebuilder:validation:Optional
	SourceResourceID *string `json:"sourceResourceId,omitempty" tf:"source_resource_id,omitempty"`

	// The availability zone where the hot standby cluster is stored, takes effect when hot_standby_cluster is ON or EQUAL.
	// -> NOTE: standby_az is required when hot_standby_cluster is EQUAL.
	// +kubebuilder:validation:Optional
	StandbyAz *string `json:"standbyAz,omitempty" tf:"standby_az,omitempty"`

	// The billing method of the storage. Valid values Postpaid, Prepaid.
	// +kubebuilder:validation:Optional
	StoragePayType *string `json:"storagePayType,omitempty" tf:"storage_pay_type,omitempty"`

	// Storage space charged by space (monthly package). Unit: GB.
	// -> NOTE:  Valid values for PolarDB for MySQL Standard Edition: 20 to 32000. It is valid when pay_type are PrePaid ,PostPaid.
	// -> NOTE:  Valid values for PolarDB for MySQL Enterprise Edition: 50 to 100000.It is valid when pay_type is PrePaid.
	// +kubebuilder:validation:Optional
	StorageSpace *float64 `json:"storageSpace,omitempty" tf:"storage_space,omitempty"`

	// The storage type of the cluster. Enterprise storage type values are PSL5, PSL4. The standard version storage type values are ESSDPL1, ESSDPL2, ESSDPL3, ESSDPL0, ESSDAUTOPL. The standard version only supports MySQL and PostgreSQL.
	// +kubebuilder:validation:Optional
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// Whether the cluster has enabled strong data consistency across multiple zones. Valid values are ON, OFF. Available parameters can refer to the latest docs CreateDBCluster
	// +kubebuilder:validation:Optional
	StrictConsistency *string `json:"strictConsistency,omitempty" tf:"strict_consistency,omitempty"`

	// The category of the cluster. Valid values are Exclusive, General. Only MySQL supports.
	// +kubebuilder:validation:Optional
	SubCategory *string `json:"subCategory,omitempty" tf:"sub_category,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Version Code of the target version, whose parameter values can be obtained from the DescribeDBClusterVersion interface.
	// +kubebuilder:validation:Optional
	TargetDBRevisionVersionCode *string `json:"targetDbRevisionVersionCode,omitempty" tf:"target_db_revision_version_code,omitempty"`

	// turn on TDE encryption. Valid values are Enabled, Disabled. Default to Disabled. TDE cannot be closed after it is turned on.
	// -> NOTE: tde_status Cannot modify after created when db_type is PostgreSQL or Oracle.tde_status only support modification from Disabled to Enabled when db_type is MySQL.
	// +kubebuilder:validation:Optional
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Version upgrade type. Valid values are PROXY, DB, ALL. PROXY means upgrading the proxy version, DB means upgrading the db version, ALL means upgrading both db and proxy versions simultaneously.
	// +kubebuilder:validation:Optional
	UpgradeType *string `json:"upgradeType,omitempty" tf:"upgrade_type,omitempty"`

	// The id of the VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// The virtual switch ID to launch DB instances in one VPC.
	// -> NOTE: If vswitch_id is not specified, system will get a vswitch belongs to the user automatically.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`

	// The Zone to launch the DB cluster. it supports multiple zone.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type DBClusterIPArrayInitParameters struct {

	// The name of the IP whitelist group. The group name must be 2 to 120 characters in length and consists of lowercase letters and digits. It must start with a letter, and end with a letter or a digit.
	// NOTE: If the specified whitelist group name does not exist, the whitelist group is created. If the specified whitelist group name exists, the whitelist group is modified. If you do not specify this parameter, the default group is modified. You can create a maximum of 50 IP whitelist groups for a cluster.
	DBClusterIPArrayName *string `json:"dbClusterIpArrayName,omitempty" tf:"db_cluster_ip_array_name,omitempty"`

	// The method for modifying the IP whitelist. Valid values are Cover, Append, Delete.
	// NOTE: There does not recommend setting modify_mode to Append or Delete and it will bring a potential diff error.
	ModifyMode *string `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// List of IP addresses allowed to access all databases of a cluster. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`
}

type DBClusterIPArrayObservation struct {

	// The name of the IP whitelist group. The group name must be 2 to 120 characters in length and consists of lowercase letters and digits. It must start with a letter, and end with a letter or a digit.
	// NOTE: If the specified whitelist group name does not exist, the whitelist group is created. If the specified whitelist group name exists, the whitelist group is modified. If you do not specify this parameter, the default group is modified. You can create a maximum of 50 IP whitelist groups for a cluster.
	DBClusterIPArrayName *string `json:"dbClusterIpArrayName,omitempty" tf:"db_cluster_ip_array_name,omitempty"`

	// The method for modifying the IP whitelist. Valid values are Cover, Append, Delete.
	// NOTE: There does not recommend setting modify_mode to Append or Delete and it will bring a potential diff error.
	ModifyMode *string `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// List of IP addresses allowed to access all databases of a cluster. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`
}

type DBClusterIPArrayParameters struct {

	// The name of the IP whitelist group. The group name must be 2 to 120 characters in length and consists of lowercase letters and digits. It must start with a letter, and end with a letter or a digit.
	// NOTE: If the specified whitelist group name does not exist, the whitelist group is created. If the specified whitelist group name exists, the whitelist group is modified. If you do not specify this parameter, the default group is modified. You can create a maximum of 50 IP whitelist groups for a cluster.
	// +kubebuilder:validation:Optional
	DBClusterIPArrayName *string `json:"dbClusterIpArrayName,omitempty" tf:"db_cluster_ip_array_name,omitempty"`

	// The method for modifying the IP whitelist. Valid values are Cover, Append, Delete.
	// NOTE: There does not recommend setting modify_mode to Append or Delete and it will bring a potential diff error.
	// +kubebuilder:validation:Optional
	ModifyMode *string `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// List of IP addresses allowed to access all databases of a cluster. The list contains up to 1,000 IP addresses, separated by commas. Supported formats include 0.0.0.0/0, 10.23.12.24 (IP), and 10.23.12.24/24 (Classless Inter-Domain Routing (CIDR) mode. /24 represents the length of the prefix in an IP address. The range of the prefix length is [1,32]).
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`
}

type DBRevisionVersionListInitParameters struct {
}

type DBRevisionVersionListObservation struct {

	// (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
	ReleaseNote *string `json:"releaseNote,omitempty" tf:"release_note,omitempty"`

	// (Available since v1.216.0) Database version release status. Valid values are Stable, Old, HighRisk.
	ReleaseType *string `json:"releaseType,omitempty" tf:"release_type,omitempty"`

	// (Available since v1.216.0) The revised version Code of the database engine is used to specify the upgrade to the target version.
	RevisionVersionCode *string `json:"revisionVersionCode,omitempty" tf:"revision_version_code,omitempty"`

	// (Available since v1.216.0) The revision version number of the database engine.
	RevisionVersionName *string `json:"revisionVersionName,omitempty" tf:"revision_version_name,omitempty"`
}

type DBRevisionVersionListParameters struct {
}

type ParametersInitParameters struct {

	// Kernel parameter name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Kernel parameter value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ParametersObservation struct {

	// Kernel parameter name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Kernel parameter value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ParametersParameters struct {

	// Kernel parameter name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Kernel parameter value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// ClusterSpec defines the desired state of Cluster
type ClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterInitParameters `json:"initProvider,omitempty"`
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Cluster is the Schema for the Clusters API. Provides a PolarDB cluster resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dbNodeClass) || (has(self.initProvider) && has(self.initProvider.dbNodeClass))",message="spec.forProvider.dbNodeClass is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dbType) || (has(self.initProvider) && has(self.initProvider.dbType))",message="spec.forProvider.dbType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dbVersion) || (has(self.initProvider) && has(self.initProvider.dbVersion))",message="spec.forProvider.dbVersion is a required parameter"
	Spec   ClusterSpec   `json:"spec"`
	Status ClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterList contains a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Repository type metadata.
var (
	Cluster_Kind             = "Cluster"
	Cluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cluster_Kind}.String()
	Cluster_KindAPIVersion   = Cluster_Kind + "." + CRDGroupVersion.String()
	Cluster_GroupVersionKind = CRDGroupVersion.WithKind(Cluster_Kind)
)

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
