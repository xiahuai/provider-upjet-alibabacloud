// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertConfigInitParameters struct {

	// Whether to configure DingTalk notifications. Valid values: true, false.
	DingtalkNotice *bool `json:"dingtalkNotice,omitempty" tf:"dingtalk_notice,omitempty"`

	// Whether to configure mail notification. Valid values: true, false.
	EmailNotice *bool `json:"emailNotice,omitempty" tf:"email_notice,omitempty"`

	// The Alarm Event Type.
	NoticeType *string `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// Whether to configure SMS notification. Valid values: true, false.
	SMSNotice *bool `json:"smsNotice,omitempty" tf:"sms_notice,omitempty"`
}

type AlertConfigObservation struct {

	// Whether to configure DingTalk notifications. Valid values: true, false.
	DingtalkNotice *bool `json:"dingtalkNotice,omitempty" tf:"dingtalk_notice,omitempty"`

	// Whether to configure mail notification. Valid values: true, false.
	EmailNotice *bool `json:"emailNotice,omitempty" tf:"email_notice,omitempty"`

	// The Alarm Event Type.
	NoticeType *string `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// Whether to configure SMS notification. Valid values: true, false.
	SMSNotice *bool `json:"smsNotice,omitempty" tf:"sms_notice,omitempty"`
}

type AlertConfigParameters struct {

	// Whether to configure DingTalk notifications. Valid values: true, false.
	// +kubebuilder:validation:Optional
	DingtalkNotice *bool `json:"dingtalkNotice,omitempty" tf:"dingtalk_notice,omitempty"`

	// Whether to configure mail notification. Valid values: true, false.
	// +kubebuilder:validation:Optional
	EmailNotice *bool `json:"emailNotice,omitempty" tf:"email_notice,omitempty"`

	// The Alarm Event Type.
	// +kubebuilder:validation:Optional
	NoticeType *string `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// Whether to configure SMS notification. Valid values: true, false.
	// +kubebuilder:validation:Optional
	SMSNotice *bool `json:"smsNotice,omitempty" tf:"sms_notice,omitempty"`
}

type GtmInstanceInitParameters struct {

	// The alert notification methods. See alert_config below for details.
	AlertConfig []AlertConfigInitParameters `json:"alertConfig,omitempty" tf:"alert_config,omitempty"`

	// The alert group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/cloudmonitorservice/v1alpha1.AlarmContactGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("alarm_contact_group_name",false)
	// +listType=set
	AlertGroup []*string `json:"alertGroup,omitempty" tf:"alert_group,omitempty"`

	// References to AlarmContactGroup in cloudmonitorservice to populate alertGroup.
	// +kubebuilder:validation:Optional
	AlertGroupRefs []v1.Reference `json:"alertGroupRefs,omitempty" tf:"-"`

	// Selector for a list of AlarmContactGroup in cloudmonitorservice to populate alertGroup.
	// +kubebuilder:validation:Optional
	AlertGroupSelector *v1.Selector `json:"alertGroupSelector,omitempty" tf:"-"`

	// The access type of the CNAME domain name. Valid value: PUBLIC.
	CnameType *string `json:"cnameType,omitempty" tf:"cname_type,omitempty"`

	// The force update.
	ForceUpdate *bool `json:"forceUpdate,omitempty" tf:"force_update,omitempty"`

	// The quota of detection tasks.
	HealthCheckTaskCount *float64 `json:"healthCheckTaskCount,omitempty" tf:"health_check_task_count,omitempty"`

	// The name of the instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The lang.
	Lang *string `json:"lang,omitempty" tf:"lang,omitempty"`

	// Paid package version. Valid values: ultimate, standard.
	PackageEdition *string `json:"packageEdition,omitempty" tf:"package_edition,omitempty"`

	// The Payment Type of the resource. Valid value: Subscription.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The Public Network domain name access method. Valid values: CUSTOM, SYSTEM_ASSIGN.
	PublicCnameMode *string `json:"publicCnameMode,omitempty" tf:"public_cname_mode,omitempty"`

	// The CNAME access domain name.
	PublicRr *string `json:"publicRr,omitempty" tf:"public_rr,omitempty"`

	// The website domain name that the user uses on the Internet.
	PublicUserDomainName *string `json:"publicUserDomainName,omitempty" tf:"public_user_domain_name,omitempty"`

	// The domain name that is used to access GTM over the Internet.
	PublicZoneName *string `json:"publicZoneName,omitempty" tf:"public_zone_name,omitempty"`

	// Automatic renewal period, the unit is month. When setting renewal_status to AutoRenewal, it must be set.
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal, ManualRenewal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// The ID of the resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The quota of SMS notifications.
	SMSNotificationCount *float64 `json:"smsNotificationCount,omitempty" tf:"sms_notification_count,omitempty"`

	// The type of the access policy. Valid values: GEO, LATENCY.
	StrategyMode *string `json:"strategyMode,omitempty" tf:"strategy_mode,omitempty"`

	// The global time to live. Valid values: 60, 120, 300, 600. Unit: second.
	TTL *float64 `json:"ttl,omitempty" tf:"ttl,omitempty"`
}

type GtmInstanceObservation struct {

	// The alert notification methods. See alert_config below for details.
	AlertConfig []AlertConfigObservation `json:"alertConfig,omitempty" tf:"alert_config,omitempty"`

	// The alert group.
	// +listType=set
	AlertGroup []*string `json:"alertGroup,omitempty" tf:"alert_group,omitempty"`

	// The access type of the CNAME domain name. Valid value: PUBLIC.
	CnameType *string `json:"cnameType,omitempty" tf:"cname_type,omitempty"`

	// The force update.
	ForceUpdate *bool `json:"forceUpdate,omitempty" tf:"force_update,omitempty"`

	// The quota of detection tasks.
	HealthCheckTaskCount *float64 `json:"healthCheckTaskCount,omitempty" tf:"health_check_task_count,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the instance.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The lang.
	Lang *string `json:"lang,omitempty" tf:"lang,omitempty"`

	// Paid package version. Valid values: ultimate, standard.
	PackageEdition *string `json:"packageEdition,omitempty" tf:"package_edition,omitempty"`

	// The Payment Type of the resource. Valid value: Subscription.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The Public Network domain name access method. Valid values: CUSTOM, SYSTEM_ASSIGN.
	PublicCnameMode *string `json:"publicCnameMode,omitempty" tf:"public_cname_mode,omitempty"`

	// The CNAME access domain name.
	PublicRr *string `json:"publicRr,omitempty" tf:"public_rr,omitempty"`

	// The website domain name that the user uses on the Internet.
	PublicUserDomainName *string `json:"publicUserDomainName,omitempty" tf:"public_user_domain_name,omitempty"`

	// The domain name that is used to access GTM over the Internet.
	PublicZoneName *string `json:"publicZoneName,omitempty" tf:"public_zone_name,omitempty"`

	// Automatic renewal period, the unit is month. When setting renewal_status to AutoRenewal, it must be set.
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal, ManualRenewal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// The ID of the resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The quota of SMS notifications.
	SMSNotificationCount *float64 `json:"smsNotificationCount,omitempty" tf:"sms_notification_count,omitempty"`

	// The type of the access policy. Valid values: GEO, LATENCY.
	StrategyMode *string `json:"strategyMode,omitempty" tf:"strategy_mode,omitempty"`

	// The global time to live. Valid values: 60, 120, 300, 600. Unit: second.
	TTL *float64 `json:"ttl,omitempty" tf:"ttl,omitempty"`
}

type GtmInstanceParameters struct {

	// The alert notification methods. See alert_config below for details.
	// +kubebuilder:validation:Optional
	AlertConfig []AlertConfigParameters `json:"alertConfig,omitempty" tf:"alert_config,omitempty"`

	// The alert group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/cloudmonitorservice/v1alpha1.AlarmContactGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("alarm_contact_group_name",false)
	// +kubebuilder:validation:Optional
	// +listType=set
	AlertGroup []*string `json:"alertGroup,omitempty" tf:"alert_group,omitempty"`

	// References to AlarmContactGroup in cloudmonitorservice to populate alertGroup.
	// +kubebuilder:validation:Optional
	AlertGroupRefs []v1.Reference `json:"alertGroupRefs,omitempty" tf:"-"`

	// Selector for a list of AlarmContactGroup in cloudmonitorservice to populate alertGroup.
	// +kubebuilder:validation:Optional
	AlertGroupSelector *v1.Selector `json:"alertGroupSelector,omitempty" tf:"-"`

	// The access type of the CNAME domain name. Valid value: PUBLIC.
	// +kubebuilder:validation:Optional
	CnameType *string `json:"cnameType,omitempty" tf:"cname_type,omitempty"`

	// The force update.
	// +kubebuilder:validation:Optional
	ForceUpdate *bool `json:"forceUpdate,omitempty" tf:"force_update,omitempty"`

	// The quota of detection tasks.
	// +kubebuilder:validation:Optional
	HealthCheckTaskCount *float64 `json:"healthCheckTaskCount,omitempty" tf:"health_check_task_count,omitempty"`

	// The name of the instance.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The lang.
	// +kubebuilder:validation:Optional
	Lang *string `json:"lang,omitempty" tf:"lang,omitempty"`

	// Paid package version. Valid values: ultimate, standard.
	// +kubebuilder:validation:Optional
	PackageEdition *string `json:"packageEdition,omitempty" tf:"package_edition,omitempty"`

	// The Payment Type of the resource. Valid value: Subscription.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The Public Network domain name access method. Valid values: CUSTOM, SYSTEM_ASSIGN.
	// +kubebuilder:validation:Optional
	PublicCnameMode *string `json:"publicCnameMode,omitempty" tf:"public_cname_mode,omitempty"`

	// The CNAME access domain name.
	// +kubebuilder:validation:Optional
	PublicRr *string `json:"publicRr,omitempty" tf:"public_rr,omitempty"`

	// The website domain name that the user uses on the Internet.
	// +kubebuilder:validation:Optional
	PublicUserDomainName *string `json:"publicUserDomainName,omitempty" tf:"public_user_domain_name,omitempty"`

	// The domain name that is used to access GTM over the Internet.
	// +kubebuilder:validation:Optional
	PublicZoneName *string `json:"publicZoneName,omitempty" tf:"public_zone_name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Automatic renewal period, the unit is month. When setting renewal_status to AutoRenewal, it must be set.
	// +kubebuilder:validation:Optional
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal, ManualRenewal.
	// +kubebuilder:validation:Optional
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// The ID of the resource group.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The quota of SMS notifications.
	// +kubebuilder:validation:Optional
	SMSNotificationCount *float64 `json:"smsNotificationCount,omitempty" tf:"sms_notification_count,omitempty"`

	// The type of the access policy. Valid values: GEO, LATENCY.
	// +kubebuilder:validation:Optional
	StrategyMode *string `json:"strategyMode,omitempty" tf:"strategy_mode,omitempty"`

	// The global time to live. Valid values: 60, 120, 300, 600. Unit: second.
	// +kubebuilder:validation:Optional
	TTL *float64 `json:"ttl,omitempty" tf:"ttl,omitempty"`
}

// GtmInstanceSpec defines the desired state of GtmInstance
type GtmInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GtmInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GtmInstanceInitParameters `json:"initProvider,omitempty"`
}

// GtmInstanceStatus defines the observed state of GtmInstance.
type GtmInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GtmInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GtmInstance is the Schema for the GtmInstances API. Provides a Alicloud Alidns Gtm Instance resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type GtmInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.healthCheckTaskCount) || (has(self.initProvider) && has(self.initProvider.healthCheckTaskCount))",message="spec.forProvider.healthCheckTaskCount is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceName) || (has(self.initProvider) && has(self.initProvider.instanceName))",message="spec.forProvider.instanceName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.packageEdition) || (has(self.initProvider) && has(self.initProvider.packageEdition))",message="spec.forProvider.packageEdition is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.paymentType) || (has(self.initProvider) && has(self.initProvider.paymentType))",message="spec.forProvider.paymentType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.period) || (has(self.initProvider) && has(self.initProvider.period))",message="spec.forProvider.period is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.smsNotificationCount) || (has(self.initProvider) && has(self.initProvider.smsNotificationCount))",message="spec.forProvider.smsNotificationCount is a required parameter"
	Spec   GtmInstanceSpec   `json:"spec"`
	Status GtmInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GtmInstanceList contains a list of GtmInstances
type GtmInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GtmInstance `json:"items"`
}

// Repository type metadata.
var (
	GtmInstance_Kind             = "GtmInstance"
	GtmInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GtmInstance_Kind}.String()
	GtmInstance_KindAPIVersion   = GtmInstance_Kind + "." + CRDGroupVersion.String()
	GtmInstance_GroupVersionKind = CRDGroupVersion.WithKind(GtmInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&GtmInstance{}, &GtmInstanceList{})
}
