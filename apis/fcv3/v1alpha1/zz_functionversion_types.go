// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FunctionVersionInitParameters struct {

	// Description of the function version
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Function Name
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Reference to a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameRef *v1.Reference `json:"functionNameRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameSelector *v1.Selector `json:"functionNameSelector,omitempty" tf:"-"`
}

type FunctionVersionObservation struct {

	// The creation time of the resource
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Description of the function version
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Function Name
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// The ID of the resource supplied above.The value is formulated as <function_name>:<version_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Available since v1.234.0) Update time
	LastModifiedTime *string `json:"lastModifiedTime,omitempty" tf:"last_modified_time,omitempty"`

	// Function Version
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type FunctionVersionParameters struct {

	// Description of the function version
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Function Name
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +kubebuilder:validation:Optional
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Reference to a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameRef *v1.Reference `json:"functionNameRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameSelector *v1.Selector `json:"functionNameSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// FunctionVersionSpec defines the desired state of FunctionVersion
type FunctionVersionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FunctionVersionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FunctionVersionInitParameters `json:"initProvider,omitempty"`
}

// FunctionVersionStatus defines the observed state of FunctionVersion.
type FunctionVersionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FunctionVersionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FunctionVersion is the Schema for the FunctionVersions API. Provides a Alicloud FCV3 Function Version resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type FunctionVersion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FunctionVersionSpec   `json:"spec"`
	Status            FunctionVersionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FunctionVersionList contains a list of FunctionVersions
type FunctionVersionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FunctionVersion `json:"items"`
}

// Repository type metadata.
var (
	FunctionVersion_Kind             = "FunctionVersion"
	FunctionVersion_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FunctionVersion_Kind}.String()
	FunctionVersion_KindAPIVersion   = FunctionVersion_Kind + "." + CRDGroupVersion.String()
	FunctionVersion_GroupVersionKind = CRDGroupVersion.WithKind(FunctionVersion_Kind)
)

func init() {
	SchemeBuilder.Register(&FunctionVersion{}, &FunctionVersionList{})
}
