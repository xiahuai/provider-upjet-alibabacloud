// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VswitchInitParameters struct {

	// The IPv4 CIDR block of the VSwitch. NOTE: From version 1.233.0, if you do not set is_default, or set is_default to false, cidr_block is required.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The description of VSwitch.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether the IPv6 function is enabled in the switch. Value:
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// The IPv6 CIDR block of the VSwitch.
	IPv6CidrBlockMask *float64 `json:"ipv6CidrBlockMask,omitempty" tf:"ipv6_cidr_block_mask,omitempty"`

	// Specifies whether to create the default VSwitch. Default value: false. Valid values:
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The VPC ID. NOTE: From version 1.233.0, if you do not set is_default, or set is_default to false, vpc_id is required.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// The name of the VSwitch.
	VswitchName *string `json:"vswitchName,omitempty" tf:"vswitch_name,omitempty"`

	// The AZ for the VSwitch. Note: Required for a VPC VSwitch.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type VswitchObservation struct {

	// The IPv4 CIDR block of the VSwitch. NOTE: From version 1.233.0, if you do not set is_default, or set is_default to false, cidr_block is required.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The creation time of the VSwitch.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The description of VSwitch.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether the IPv6 function is enabled in the switch. Value:
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IPv6 CIDR block of the VSwitch.
	IPv6CidrBlock *string `json:"ipv6CidrBlock,omitempty" tf:"ipv6_cidr_block,omitempty"`

	// The IPv6 CIDR block of the VSwitch.
	IPv6CidrBlockMask *float64 `json:"ipv6CidrBlockMask,omitempty" tf:"ipv6_cidr_block_mask,omitempty"`

	// Specifies whether to create the default VSwitch. Default value: false. Valid values:
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The VPC ID. NOTE: From version 1.233.0, if you do not set is_default, or set is_default to false, vpc_id is required.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// The name of the VSwitch.
	VswitchName *string `json:"vswitchName,omitempty" tf:"vswitch_name,omitempty"`

	// The AZ for the VSwitch. Note: Required for a VPC VSwitch.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type VswitchParameters struct {

	// The IPv4 CIDR block of the VSwitch. NOTE: From version 1.233.0, if you do not set is_default, or set is_default to false, cidr_block is required.
	// +kubebuilder:validation:Optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The description of VSwitch.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether the IPv6 function is enabled in the switch. Value:
	// +kubebuilder:validation:Optional
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// The IPv6 CIDR block of the VSwitch.
	// +kubebuilder:validation:Optional
	IPv6CidrBlockMask *float64 `json:"ipv6CidrBlockMask,omitempty" tf:"ipv6_cidr_block_mask,omitempty"`

	// Specifies whether to create the default VSwitch. Default value: false. Valid values:
	// +kubebuilder:validation:Optional
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The VPC ID. NOTE: From version 1.233.0, if you do not set is_default, or set is_default to false, vpc_id is required.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// The name of the VSwitch.
	// +kubebuilder:validation:Optional
	VswitchName *string `json:"vswitchName,omitempty" tf:"vswitch_name,omitempty"`

	// The AZ for the VSwitch. Note: Required for a VPC VSwitch.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// VswitchSpec defines the desired state of Vswitch
type VswitchSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VswitchParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VswitchInitParameters `json:"initProvider,omitempty"`
}

// VswitchStatus defines the observed state of Vswitch.
type VswitchStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VswitchObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Vswitch is the Schema for the Vswitchs API. Provides a Alicloud VPC Vswitch resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Vswitch struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VswitchSpec   `json:"spec"`
	Status            VswitchStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VswitchList contains a list of Vswitchs
type VswitchList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Vswitch `json:"items"`
}

// Repository type metadata.
var (
	Vswitch_Kind             = "Vswitch"
	Vswitch_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Vswitch_Kind}.String()
	Vswitch_KindAPIVersion   = Vswitch_Kind + "." + CRDGroupVersion.String()
	Vswitch_GroupVersionKind = CRDGroupVersion.WithKind(Vswitch_Kind)
)

func init() {
	SchemeBuilder.Register(&Vswitch{}, &VswitchList{})
}
