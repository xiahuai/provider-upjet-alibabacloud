// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoProvisioningGroupInitParameters struct {

	// The name of the auto provisioning group to be created. It must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-)
	AutoProvisioningGroupName *string `json:"autoProvisioningGroupName,omitempty" tf:"auto_provisioning_group_name,omitempty"`

	// The type of the auto provisioning group. Valid values:request and maintain,Default value: maintain.
	AutoProvisioningGroupType *string `json:"autoProvisioningGroupType,omitempty" tf:"auto_provisioning_group_type,omitempty"`

	// The type of supplemental instances. When the total value of PayAsYouGoTargetCapacity and SpotTargetCapacity is smaller than the value of TotalTargetCapacity, the auto provisioning group will create instances of the specified type to meet the capacity requirements. Valid values:PayAsYouGo: Pay-as-you-go instances; Spot: Preemptible instances, Default value: Spot.
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty" tf:"default_target_capacity_type,omitempty"`

	// The description of the auto provisioning group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The shutdown policy for excess preemptible instances followed when the capacity of the auto provisioning group exceeds the target capacity. Valid values: no-termination and termination,Default value: no-termination.
	ExcessCapacityTerminationPolicy *string `json:"excessCapacityTerminationPolicy,omitempty" tf:"excess_capacity_termination_policy,omitempty"`

	// DataDisk mappings to attach to ecs instance. See block-config below for details.
	LaunchTemplateConfig []LaunchTemplateConfigInitParameters `json:"launchTemplateConfig,omitempty" tf:"launch_template_config,omitempty"`

	// The ID of the instance launch template associated with the auto provisioning group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.LaunchTemplate
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Reference to a LaunchTemplate in ecs to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDRef *v1.Reference `json:"launchTemplateIdRef,omitempty" tf:"-"`

	// Selector for a LaunchTemplate in ecs to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDSelector *v1.Selector `json:"launchTemplateIdSelector,omitempty" tf:"-"`

	// The version of the instance launch template associated with the auto provisioning group.
	LaunchTemplateVersion *string `json:"launchTemplateVersion,omitempty" tf:"launch_template_version,omitempty"`

	// The global maximum price for preemptible instances in the auto provisioning group. If both the MaxSpotPrice and LaunchTemplateConfig.N.MaxPrice parameters are specified, the maximum price is the lower value of the two.
	MaxSpotPrice *float64 `json:"maxSpotPrice,omitempty" tf:"max_spot_price,omitempty"`

	// The scale-out policy for pay-as-you-go instances. Valid values: lowest-price and prioritized,Default value: lowest-price.
	PayAsYouGoAllocationStrategy *string `json:"payAsYouGoAllocationStrategy,omitempty" tf:"pay_as_you_go_allocation_strategy,omitempty"`

	// The target capacity of pay-as-you-go instances in the auto provisioning group.
	PayAsYouGoTargetCapacity *string `json:"payAsYouGoTargetCapacity,omitempty" tf:"pay_as_you_go_target_capacity,omitempty"`

	// The scale-out policy for preemptible instances. Valid values:lowest-price and diversified,Default value: lowest-price.
	SpotAllocationStrategy *string `json:"spotAllocationStrategy,omitempty" tf:"spot_allocation_strategy,omitempty"`

	// The default behavior after preemptible instances are shut down. Valid values: stop and terminate,Default value: stop.
	SpotInstanceInterruptionBehavior *string `json:"spotInstanceInterruptionBehavior,omitempty" tf:"spot_instance_interruption_behavior,omitempty"`

	// This parameter takes effect when the SpotAllocationStrategy parameter is set to lowest-price. The auto provisioning group selects instance types of the lowest cost to create instances.
	SpotInstancePoolsToUseCount *float64 `json:"spotInstancePoolsToUseCount,omitempty" tf:"spot_instance_pools_to_use_count,omitempty"`

	// The target capacity of preemptible instances in the auto provisioning group.
	SpotTargetCapacity *string `json:"spotTargetCapacity,omitempty" tf:"spot_target_capacity,omitempty"`

	// Specifies whether to release instances of the auto provisioning group. Valid values:false and true, default value: false.
	TerminateInstances *bool `json:"terminateInstances,omitempty" tf:"terminate_instances,omitempty"`

	// The shutdown policy for preemptible instances when the auto provisioning group expires. Valid values: false and true, default value: false.
	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty" tf:"terminate_instances_with_expiration,omitempty"`

	// The total target capacity of the auto provisioning group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity and the supplemental capacity besides PayAsYouGoTargetCapacity and SpotTargetCapacity.
	TotalTargetCapacity *string `json:"totalTargetCapacity,omitempty" tf:"total_target_capacity,omitempty"`

	// The time when the auto provisioning group is started. The period of time between this point in time and the point in time specified by the valid_until parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group is immediately started after creation.
	ValidFrom *string `json:"validFrom,omitempty" tf:"valid_from,omitempty"`

	// The time when the auto provisioning group expires. The period of time between this point in time and the point in time specified by the valid_from parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group never expires.
	ValidUntil *string `json:"validUntil,omitempty" tf:"valid_until,omitempty"`
}

type AutoProvisioningGroupObservation struct {

	// The name of the auto provisioning group to be created. It must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-)
	AutoProvisioningGroupName *string `json:"autoProvisioningGroupName,omitempty" tf:"auto_provisioning_group_name,omitempty"`

	// The type of the auto provisioning group. Valid values:request and maintain,Default value: maintain.
	AutoProvisioningGroupType *string `json:"autoProvisioningGroupType,omitempty" tf:"auto_provisioning_group_type,omitempty"`

	// The type of supplemental instances. When the total value of PayAsYouGoTargetCapacity and SpotTargetCapacity is smaller than the value of TotalTargetCapacity, the auto provisioning group will create instances of the specified type to meet the capacity requirements. Valid values:PayAsYouGo: Pay-as-you-go instances; Spot: Preemptible instances, Default value: Spot.
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty" tf:"default_target_capacity_type,omitempty"`

	// The description of the auto provisioning group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The shutdown policy for excess preemptible instances followed when the capacity of the auto provisioning group exceeds the target capacity. Valid values: no-termination and termination,Default value: no-termination.
	ExcessCapacityTerminationPolicy *string `json:"excessCapacityTerminationPolicy,omitempty" tf:"excess_capacity_termination_policy,omitempty"`

	// The ID of the auto provisioning group
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// DataDisk mappings to attach to ecs instance. See block-config below for details.
	LaunchTemplateConfig []LaunchTemplateConfigObservation `json:"launchTemplateConfig,omitempty" tf:"launch_template_config,omitempty"`

	// The ID of the instance launch template associated with the auto provisioning group.
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// The version of the instance launch template associated with the auto provisioning group.
	LaunchTemplateVersion *string `json:"launchTemplateVersion,omitempty" tf:"launch_template_version,omitempty"`

	// The global maximum price for preemptible instances in the auto provisioning group. If both the MaxSpotPrice and LaunchTemplateConfig.N.MaxPrice parameters are specified, the maximum price is the lower value of the two.
	MaxSpotPrice *float64 `json:"maxSpotPrice,omitempty" tf:"max_spot_price,omitempty"`

	// The scale-out policy for pay-as-you-go instances. Valid values: lowest-price and prioritized,Default value: lowest-price.
	PayAsYouGoAllocationStrategy *string `json:"payAsYouGoAllocationStrategy,omitempty" tf:"pay_as_you_go_allocation_strategy,omitempty"`

	// The target capacity of pay-as-you-go instances in the auto provisioning group.
	PayAsYouGoTargetCapacity *string `json:"payAsYouGoTargetCapacity,omitempty" tf:"pay_as_you_go_target_capacity,omitempty"`

	// The scale-out policy for preemptible instances. Valid values:lowest-price and diversified,Default value: lowest-price.
	SpotAllocationStrategy *string `json:"spotAllocationStrategy,omitempty" tf:"spot_allocation_strategy,omitempty"`

	// The default behavior after preemptible instances are shut down. Valid values: stop and terminate,Default value: stop.
	SpotInstanceInterruptionBehavior *string `json:"spotInstanceInterruptionBehavior,omitempty" tf:"spot_instance_interruption_behavior,omitempty"`

	// This parameter takes effect when the SpotAllocationStrategy parameter is set to lowest-price. The auto provisioning group selects instance types of the lowest cost to create instances.
	SpotInstancePoolsToUseCount *float64 `json:"spotInstancePoolsToUseCount,omitempty" tf:"spot_instance_pools_to_use_count,omitempty"`

	// The target capacity of preemptible instances in the auto provisioning group.
	SpotTargetCapacity *string `json:"spotTargetCapacity,omitempty" tf:"spot_target_capacity,omitempty"`

	// Specifies whether to release instances of the auto provisioning group. Valid values:false and true, default value: false.
	TerminateInstances *bool `json:"terminateInstances,omitempty" tf:"terminate_instances,omitempty"`

	// The shutdown policy for preemptible instances when the auto provisioning group expires. Valid values: false and true, default value: false.
	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty" tf:"terminate_instances_with_expiration,omitempty"`

	// The total target capacity of the auto provisioning group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity and the supplemental capacity besides PayAsYouGoTargetCapacity and SpotTargetCapacity.
	TotalTargetCapacity *string `json:"totalTargetCapacity,omitempty" tf:"total_target_capacity,omitempty"`

	// The time when the auto provisioning group is started. The period of time between this point in time and the point in time specified by the valid_until parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group is immediately started after creation.
	ValidFrom *string `json:"validFrom,omitempty" tf:"valid_from,omitempty"`

	// The time when the auto provisioning group expires. The period of time between this point in time and the point in time specified by the valid_from parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group never expires.
	ValidUntil *string `json:"validUntil,omitempty" tf:"valid_until,omitempty"`
}

type AutoProvisioningGroupParameters struct {

	// The name of the auto provisioning group to be created. It must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-)
	// +kubebuilder:validation:Optional
	AutoProvisioningGroupName *string `json:"autoProvisioningGroupName,omitempty" tf:"auto_provisioning_group_name,omitempty"`

	// The type of the auto provisioning group. Valid values:request and maintain,Default value: maintain.
	// +kubebuilder:validation:Optional
	AutoProvisioningGroupType *string `json:"autoProvisioningGroupType,omitempty" tf:"auto_provisioning_group_type,omitempty"`

	// The type of supplemental instances. When the total value of PayAsYouGoTargetCapacity and SpotTargetCapacity is smaller than the value of TotalTargetCapacity, the auto provisioning group will create instances of the specified type to meet the capacity requirements. Valid values:PayAsYouGo: Pay-as-you-go instances; Spot: Preemptible instances, Default value: Spot.
	// +kubebuilder:validation:Optional
	DefaultTargetCapacityType *string `json:"defaultTargetCapacityType,omitempty" tf:"default_target_capacity_type,omitempty"`

	// The description of the auto provisioning group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The shutdown policy for excess preemptible instances followed when the capacity of the auto provisioning group exceeds the target capacity. Valid values: no-termination and termination,Default value: no-termination.
	// +kubebuilder:validation:Optional
	ExcessCapacityTerminationPolicy *string `json:"excessCapacityTerminationPolicy,omitempty" tf:"excess_capacity_termination_policy,omitempty"`

	// DataDisk mappings to attach to ecs instance. See block-config below for details.
	// +kubebuilder:validation:Optional
	LaunchTemplateConfig []LaunchTemplateConfigParameters `json:"launchTemplateConfig,omitempty" tf:"launch_template_config,omitempty"`

	// The ID of the instance launch template associated with the auto provisioning group.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.LaunchTemplate
	// +kubebuilder:validation:Optional
	LaunchTemplateID *string `json:"launchTemplateId,omitempty" tf:"launch_template_id,omitempty"`

	// Reference to a LaunchTemplate in ecs to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDRef *v1.Reference `json:"launchTemplateIdRef,omitempty" tf:"-"`

	// Selector for a LaunchTemplate in ecs to populate launchTemplateId.
	// +kubebuilder:validation:Optional
	LaunchTemplateIDSelector *v1.Selector `json:"launchTemplateIdSelector,omitempty" tf:"-"`

	// The version of the instance launch template associated with the auto provisioning group.
	// +kubebuilder:validation:Optional
	LaunchTemplateVersion *string `json:"launchTemplateVersion,omitempty" tf:"launch_template_version,omitempty"`

	// The global maximum price for preemptible instances in the auto provisioning group. If both the MaxSpotPrice and LaunchTemplateConfig.N.MaxPrice parameters are specified, the maximum price is the lower value of the two.
	// +kubebuilder:validation:Optional
	MaxSpotPrice *float64 `json:"maxSpotPrice,omitempty" tf:"max_spot_price,omitempty"`

	// The scale-out policy for pay-as-you-go instances. Valid values: lowest-price and prioritized,Default value: lowest-price.
	// +kubebuilder:validation:Optional
	PayAsYouGoAllocationStrategy *string `json:"payAsYouGoAllocationStrategy,omitempty" tf:"pay_as_you_go_allocation_strategy,omitempty"`

	// The target capacity of pay-as-you-go instances in the auto provisioning group.
	// +kubebuilder:validation:Optional
	PayAsYouGoTargetCapacity *string `json:"payAsYouGoTargetCapacity,omitempty" tf:"pay_as_you_go_target_capacity,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The scale-out policy for preemptible instances. Valid values:lowest-price and diversified,Default value: lowest-price.
	// +kubebuilder:validation:Optional
	SpotAllocationStrategy *string `json:"spotAllocationStrategy,omitempty" tf:"spot_allocation_strategy,omitempty"`

	// The default behavior after preemptible instances are shut down. Valid values: stop and terminate,Default value: stop.
	// +kubebuilder:validation:Optional
	SpotInstanceInterruptionBehavior *string `json:"spotInstanceInterruptionBehavior,omitempty" tf:"spot_instance_interruption_behavior,omitempty"`

	// This parameter takes effect when the SpotAllocationStrategy parameter is set to lowest-price. The auto provisioning group selects instance types of the lowest cost to create instances.
	// +kubebuilder:validation:Optional
	SpotInstancePoolsToUseCount *float64 `json:"spotInstancePoolsToUseCount,omitempty" tf:"spot_instance_pools_to_use_count,omitempty"`

	// The target capacity of preemptible instances in the auto provisioning group.
	// +kubebuilder:validation:Optional
	SpotTargetCapacity *string `json:"spotTargetCapacity,omitempty" tf:"spot_target_capacity,omitempty"`

	// Specifies whether to release instances of the auto provisioning group. Valid values:false and true, default value: false.
	// +kubebuilder:validation:Optional
	TerminateInstances *bool `json:"terminateInstances,omitempty" tf:"terminate_instances,omitempty"`

	// The shutdown policy for preemptible instances when the auto provisioning group expires. Valid values: false and true, default value: false.
	// +kubebuilder:validation:Optional
	TerminateInstancesWithExpiration *bool `json:"terminateInstancesWithExpiration,omitempty" tf:"terminate_instances_with_expiration,omitempty"`

	// The total target capacity of the auto provisioning group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity and the supplemental capacity besides PayAsYouGoTargetCapacity and SpotTargetCapacity.
	// +kubebuilder:validation:Optional
	TotalTargetCapacity *string `json:"totalTargetCapacity,omitempty" tf:"total_target_capacity,omitempty"`

	// The time when the auto provisioning group is started. The period of time between this point in time and the point in time specified by the valid_until parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group is immediately started after creation.
	// +kubebuilder:validation:Optional
	ValidFrom *string `json:"validFrom,omitempty" tf:"valid_from,omitempty"`

	// The time when the auto provisioning group expires. The period of time between this point in time and the point in time specified by the valid_from parameter is the effective time period of the auto provisioning group.By default, an auto provisioning group never expires.
	// +kubebuilder:validation:Optional
	ValidUntil *string `json:"validUntil,omitempty" tf:"valid_until,omitempty"`
}

type LaunchTemplateConfigInitParameters struct {

	// The instance type of the Nth extended configurations of the launch template.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The maximum price of the instance type specified in the Nth extended configurations of the launch template.
	MaxPrice *string `json:"maxPrice,omitempty" tf:"max_price,omitempty"`

	// The priority of the instance type specified in the Nth extended configurations of the launch template. A value of 0 indicates the highest priority.
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of the VSwitch in the Nth extended configurations of the launch template.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`

	// The weight of the instance type specified in the Nth extended configurations of the launch template.
	WeightedCapacity *string `json:"weightedCapacity,omitempty" tf:"weighted_capacity,omitempty"`
}

type LaunchTemplateConfigObservation struct {

	// The instance type of the Nth extended configurations of the launch template.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The maximum price of the instance type specified in the Nth extended configurations of the launch template.
	MaxPrice *string `json:"maxPrice,omitempty" tf:"max_price,omitempty"`

	// The priority of the instance type specified in the Nth extended configurations of the launch template. A value of 0 indicates the highest priority.
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of the VSwitch in the Nth extended configurations of the launch template.
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// The weight of the instance type specified in the Nth extended configurations of the launch template.
	WeightedCapacity *string `json:"weightedCapacity,omitempty" tf:"weighted_capacity,omitempty"`
}

type LaunchTemplateConfigParameters struct {

	// The instance type of the Nth extended configurations of the launch template.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The maximum price of the instance type specified in the Nth extended configurations of the launch template.
	// +kubebuilder:validation:Optional
	MaxPrice *string `json:"maxPrice" tf:"max_price,omitempty"`

	// The priority of the instance type specified in the Nth extended configurations of the launch template. A value of 0 indicates the highest priority.
	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// The ID of the VSwitch in the Nth extended configurations of the launch template.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`

	// The weight of the instance type specified in the Nth extended configurations of the launch template.
	// +kubebuilder:validation:Optional
	WeightedCapacity *string `json:"weightedCapacity" tf:"weighted_capacity,omitempty"`
}

// AutoProvisioningGroupSpec defines the desired state of AutoProvisioningGroup
type AutoProvisioningGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutoProvisioningGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutoProvisioningGroupInitParameters `json:"initProvider,omitempty"`
}

// AutoProvisioningGroupStatus defines the observed state of AutoProvisioningGroup.
type AutoProvisioningGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutoProvisioningGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AutoProvisioningGroup is the Schema for the AutoProvisioningGroups API. Provides a ECS Auto Provisioning group resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AutoProvisioningGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.launchTemplateConfig) || (has(self.initProvider) && has(self.initProvider.launchTemplateConfig))",message="spec.forProvider.launchTemplateConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.totalTargetCapacity) || (has(self.initProvider) && has(self.initProvider.totalTargetCapacity))",message="spec.forProvider.totalTargetCapacity is a required parameter"
	Spec   AutoProvisioningGroupSpec   `json:"spec"`
	Status AutoProvisioningGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutoProvisioningGroupList contains a list of AutoProvisioningGroups
type AutoProvisioningGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutoProvisioningGroup `json:"items"`
}

// Repository type metadata.
var (
	AutoProvisioningGroup_Kind             = "AutoProvisioningGroup"
	AutoProvisioningGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AutoProvisioningGroup_Kind}.String()
	AutoProvisioningGroup_KindAPIVersion   = AutoProvisioningGroup_Kind + "." + CRDGroupVersion.String()
	AutoProvisioningGroup_GroupVersionKind = CRDGroupVersion.WithKind(AutoProvisioningGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&AutoProvisioningGroup{}, &AutoProvisioningGroupList{})
}
