// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccessPointInitParameters struct {

	// The name of the access point
	AccessPointName *string `json:"accessPointName,omitempty" tf:"access_point_name,omitempty"`

	// The Bucket to which the current access point belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Access point network source. The valid values are as follows:
	NetworkOrigin *string `json:"networkOrigin,omitempty" tf:"network_origin,omitempty"`

	// Configuration of Access Point Blocking Public Access See public_access_block_configuration below.
	PublicAccessBlockConfiguration []PublicAccessBlockConfigurationInitParameters `json:"publicAccessBlockConfiguration,omitempty" tf:"public_access_block_configuration,omitempty"`

	// If the Network Origin is vpc, the VPC source information is saved here. See vpc_configuration below.
	VPCConfiguration []VPCConfigurationInitParameters `json:"vpcConfiguration,omitempty" tf:"vpc_configuration,omitempty"`
}

type AccessPointObservation struct {

	// The name of the access point
	AccessPointName *string `json:"accessPointName,omitempty" tf:"access_point_name,omitempty"`

	// The Bucket to which the current access point belongs.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// The ID of the resource supplied above.The value is formulated as <bucket>:<access_point_name>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Access point network source. The valid values are as follows:
	NetworkOrigin *string `json:"networkOrigin,omitempty" tf:"network_origin,omitempty"`

	// Configuration of Access Point Blocking Public Access See public_access_block_configuration below.
	PublicAccessBlockConfiguration []PublicAccessBlockConfigurationObservation `json:"publicAccessBlockConfiguration,omitempty" tf:"public_access_block_configuration,omitempty"`

	// The status of the resource
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// If the Network Origin is vpc, the VPC source information is saved here. See vpc_configuration below.
	VPCConfiguration []VPCConfigurationObservation `json:"vpcConfiguration,omitempty" tf:"vpc_configuration,omitempty"`
}

type AccessPointParameters struct {

	// The name of the access point
	// +kubebuilder:validation:Optional
	AccessPointName *string `json:"accessPointName,omitempty" tf:"access_point_name,omitempty"`

	// The Bucket to which the current access point belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Access point network source. The valid values are as follows:
	// +kubebuilder:validation:Optional
	NetworkOrigin *string `json:"networkOrigin,omitempty" tf:"network_origin,omitempty"`

	// Configuration of Access Point Blocking Public Access See public_access_block_configuration below.
	// +kubebuilder:validation:Optional
	PublicAccessBlockConfiguration []PublicAccessBlockConfigurationParameters `json:"publicAccessBlockConfiguration,omitempty" tf:"public_access_block_configuration,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// If the Network Origin is vpc, the VPC source information is saved here. See vpc_configuration below.
	// +kubebuilder:validation:Optional
	VPCConfiguration []VPCConfigurationParameters `json:"vpcConfiguration,omitempty" tf:"vpc_configuration,omitempty"`
}

type PublicAccessBlockConfigurationInitParameters struct {

	// Block public access enabled for access point
	BlockPublicAccess *bool `json:"blockPublicAccess,omitempty" tf:"block_public_access,omitempty"`
}

type PublicAccessBlockConfigurationObservation struct {

	// Block public access enabled for access point
	BlockPublicAccess *bool `json:"blockPublicAccess,omitempty" tf:"block_public_access,omitempty"`
}

type PublicAccessBlockConfigurationParameters struct {

	// Block public access enabled for access point
	// +kubebuilder:validation:Optional
	BlockPublicAccess *bool `json:"blockPublicAccess,omitempty" tf:"block_public_access,omitempty"`
}

type VPCConfigurationInitParameters struct {

	// The vpc ID is required only when the value of NetworkOrigin is VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

type VPCConfigurationObservation struct {

	// The vpc ID is required only when the value of NetworkOrigin is VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type VPCConfigurationParameters struct {

	// The vpc ID is required only when the value of NetworkOrigin is VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// AccessPointSpec defines the desired state of AccessPoint
type AccessPointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccessPointParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccessPointInitParameters `json:"initProvider,omitempty"`
}

// AccessPointStatus defines the observed state of AccessPoint.
type AccessPointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccessPointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccessPoint is the Schema for the AccessPoints API. Provides a Alicloud OSS Access Point resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AccessPoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessPointName) || (has(self.initProvider) && has(self.initProvider.accessPointName))",message="spec.forProvider.accessPointName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.networkOrigin) || (has(self.initProvider) && has(self.initProvider.networkOrigin))",message="spec.forProvider.networkOrigin is a required parameter"
	Spec   AccessPointSpec   `json:"spec"`
	Status AccessPointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccessPointList contains a list of AccessPoints
type AccessPointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccessPoint `json:"items"`
}

// Repository type metadata.
var (
	AccessPoint_Kind             = "AccessPoint"
	AccessPoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccessPoint_Kind}.String()
	AccessPoint_KindAPIVersion   = AccessPoint_Kind + "." + CRDGroupVersion.String()
	AccessPoint_GroupVersionKind = CRDGroupVersion.WithKind(AccessPoint_Kind)
)

func init() {
	SchemeBuilder.Register(&AccessPoint{}, &AccessPointList{})
}
