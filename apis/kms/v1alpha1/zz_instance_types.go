// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BindVpcsInitParameters struct {

	// region id
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// VPC ID
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// VPC owner root user ID
	VPCOwnerID *string `json:"vpcOwnerId,omitempty" tf:"vpc_owner_id,omitempty"`

	// vswitch id
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`
}

type BindVpcsObservation struct {

	// region id
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// VPC ID
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// VPC owner root user ID
	VPCOwnerID *string `json:"vpcOwnerId,omitempty" tf:"vpc_owner_id,omitempty"`

	// vswitch id
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`
}

type BindVpcsParameters struct {

	// region id
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// VPC ID
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// VPC owner root user ID
	// +kubebuilder:validation:Optional
	VPCOwnerID *string `json:"vpcOwnerId,omitempty" tf:"vpc_owner_id,omitempty"`

	// vswitch id
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`
}

type InstanceInitParameters struct {

	// Aucillary VPCs used to access this KMS instance See bind_vpcs below.
	BindVpcs []BindVpcsInitParameters `json:"bindVpcs,omitempty" tf:"bind_vpcs,omitempty"`

	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup *string `json:"forceDeleteWithoutBackup,omitempty" tf:"force_delete_without_backup,omitempty"`

	// The name of the resource
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Maximum number of stored keys. The attribute is valid when the attribute payment_type is Subscription.
	KeyNum *float64 `json:"keyNum,omitempty" tf:"key_num,omitempty"`

	// Instance Audit Log Switch. The attribute is valid when the attribute payment_type is Subscription.
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// Instance log capacity. The attribute is valid when the attribute payment_type is Subscription.
	LogStorage *float64 `json:"logStorage,omitempty" tf:"log_storage,omitempty"`

	// Payment type,valid values:
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Purchase cycle, in months. The attribute is valid when the attribute payment_type is Subscription.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// KMS Instance commodity type (software/hardware)
	ProductVersion *string `json:"productVersion,omitempty" tf:"product_version,omitempty"`

	// Automatic renewal period, in months. The attribute is valid when the attribute payment_type is Subscription.
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Renewal options. Valid values: AutoRenewal, ManualRenewal. The attribute is valid when the attribute payment_type is Subscription.
	RenewStatus *string `json:"renewStatus,omitempty" tf:"renew_status,omitempty"`

	// Maximum number of Secrets. The attribute is valid when the attribute payment_type is Subscription.
	SecretNum *float64 `json:"secretNum,omitempty" tf:"secret_num,omitempty"`

	// The computation performance level of the KMS instance. The attribute is valid when the attribute payment_type is Subscription.
	Spec *float64 `json:"spec,omitempty" tf:"spec,omitempty"`

	// Instance VPC id
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute payment_type is Subscription.
	VPCNum *float64 `json:"vpcNum,omitempty" tf:"vpc_num,omitempty"`

	// Instance bind vswitches
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +listType=set
	VswitchIds []*string `json:"vswitchIds,omitempty" tf:"vswitch_ids,omitempty"`

	// References to Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VswitchIdsRefs []v1.Reference `json:"vswitchIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VswitchIdsSelector *v1.Selector `json:"vswitchIdsSelector,omitempty" tf:"-"`

	// zone id
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("zone_id",false)
	// +listType=set
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`

	// References to Vswitch in vpc to populate zoneIds.
	// +kubebuilder:validation:Optional
	ZoneIdsRefs []v1.Reference `json:"zoneIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate zoneIds.
	// +kubebuilder:validation:Optional
	ZoneIdsSelector *v1.Selector `json:"zoneIdsSelector,omitempty" tf:"-"`
}

type InstanceObservation struct {

	// Aucillary VPCs used to access this KMS instance See bind_vpcs below.
	BindVpcs []BindVpcsObservation `json:"bindVpcs,omitempty" tf:"bind_vpcs,omitempty"`

	// KMS instance certificate chain in PEM format.
	CACertificateChainPem *string `json:"caCertificateChainPem,omitempty" tf:"ca_certificate_chain_pem,omitempty"`

	// The creation time of the resource.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// (Available since v1.233.1) Instance expiration time.
	EndDate *string `json:"endDate,omitempty" tf:"end_date,omitempty"`

	// Whether to force deletion even without backup.
	ForceDeleteWithoutBackup *string `json:"forceDeleteWithoutBackup,omitempty" tf:"force_delete_without_backup,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the resource
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Maximum number of stored keys. The attribute is valid when the attribute payment_type is Subscription.
	KeyNum *float64 `json:"keyNum,omitempty" tf:"key_num,omitempty"`

	// Instance Audit Log Switch. The attribute is valid when the attribute payment_type is Subscription.
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// Instance log capacity. The attribute is valid when the attribute payment_type is Subscription.
	LogStorage *float64 `json:"logStorage,omitempty" tf:"log_storage,omitempty"`

	// Payment type,valid values:
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Purchase cycle, in months. The attribute is valid when the attribute payment_type is Subscription.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// KMS Instance commodity type (software/hardware)
	ProductVersion *string `json:"productVersion,omitempty" tf:"product_version,omitempty"`

	// Automatic renewal period, in months. The attribute is valid when the attribute payment_type is Subscription.
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Renewal options. Valid values: AutoRenewal, ManualRenewal. The attribute is valid when the attribute payment_type is Subscription.
	RenewStatus *string `json:"renewStatus,omitempty" tf:"renew_status,omitempty"`

	// Maximum number of Secrets. The attribute is valid when the attribute payment_type is Subscription.
	SecretNum *float64 `json:"secretNum,omitempty" tf:"secret_num,omitempty"`

	// The computation performance level of the KMS instance. The attribute is valid when the attribute payment_type is Subscription.
	Spec *float64 `json:"spec,omitempty" tf:"spec,omitempty"`

	// Instance status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Instance VPC id
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute payment_type is Subscription.
	VPCNum *float64 `json:"vpcNum,omitempty" tf:"vpc_num,omitempty"`

	// Instance bind vswitches
	// +listType=set
	VswitchIds []*string `json:"vswitchIds,omitempty" tf:"vswitch_ids,omitempty"`

	// zone id
	// +listType=set
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

type InstanceParameters struct {

	// Aucillary VPCs used to access this KMS instance See bind_vpcs below.
	// +kubebuilder:validation:Optional
	BindVpcs []BindVpcsParameters `json:"bindVpcs,omitempty" tf:"bind_vpcs,omitempty"`

	// Whether to force deletion even without backup.
	// +kubebuilder:validation:Optional
	ForceDeleteWithoutBackup *string `json:"forceDeleteWithoutBackup,omitempty" tf:"force_delete_without_backup,omitempty"`

	// The name of the resource
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// Maximum number of stored keys. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	KeyNum *float64 `json:"keyNum,omitempty" tf:"key_num,omitempty"`

	// Instance Audit Log Switch. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	Log *string `json:"log,omitempty" tf:"log,omitempty"`

	// Instance log capacity. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	LogStorage *float64 `json:"logStorage,omitempty" tf:"log_storage,omitempty"`

	// Payment type,valid values:
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Purchase cycle, in months. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// KMS Instance commodity type (software/hardware)
	// +kubebuilder:validation:Optional
	ProductVersion *string `json:"productVersion,omitempty" tf:"product_version,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Automatic renewal period, in months. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Renewal options. Valid values: AutoRenewal, ManualRenewal. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	RenewStatus *string `json:"renewStatus,omitempty" tf:"renew_status,omitempty"`

	// Maximum number of Secrets. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	SecretNum *float64 `json:"secretNum,omitempty" tf:"secret_num,omitempty"`

	// The computation performance level of the KMS instance. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	Spec *float64 `json:"spec,omitempty" tf:"spec,omitempty"`

	// Instance VPC id
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// The number of managed accesses. The maximum number of VPCs that can access this KMS instance. The attribute is valid when the attribute payment_type is Subscription.
	// +kubebuilder:validation:Optional
	VPCNum *float64 `json:"vpcNum,omitempty" tf:"vpc_num,omitempty"`

	// Instance bind vswitches
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +kubebuilder:validation:Optional
	// +listType=set
	VswitchIds []*string `json:"vswitchIds,omitempty" tf:"vswitch_ids,omitempty"`

	// References to Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VswitchIdsRefs []v1.Reference `json:"vswitchIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VswitchIdsSelector *v1.Selector `json:"vswitchIdsSelector,omitempty" tf:"-"`

	// zone id
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("zone_id",false)
	// +kubebuilder:validation:Optional
	// +listType=set
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`

	// References to Vswitch in vpc to populate zoneIds.
	// +kubebuilder:validation:Optional
	ZoneIdsRefs []v1.Reference `json:"zoneIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate zoneIds.
	// +kubebuilder:validation:Optional
	ZoneIdsSelector *v1.Selector `json:"zoneIdsSelector,omitempty" tf:"-"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceInitParameters `json:"initProvider,omitempty"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Instance is the Schema for the Instances API. Provides a Alicloud KMS Instance resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec"`
	Status            InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
