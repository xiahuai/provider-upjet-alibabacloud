// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupPolicyInitParameters struct {

	// The backup frequency. Valid values are Normal, 2/24H, 3/24H, 4/24H.Default to Normal.
	BackupFrequency *string `json:"backupFrequency,omitempty" tf:"backup_frequency,omitempty"`

	// Cluster backup retention days, Fixed for 7 days, not modified.
	BackupRetentionPeriod *string `json:"backupRetentionPeriod,omitempty" tf:"backup_retention_period,omitempty"`

	// Specifies whether to retain backups when you delete a cluster. Valid values are ALL, LATEST, NONE. Default to NONE. Value options can refer to the latest docs ModifyBackupPolicy
	BackupRetentionPolicyOnClusterDeletion *string `json:"backupRetentionPolicyOnClusterDeletion,omitempty" tf:"backup_retention_policy_on_cluster_deletion,omitempty"`

	// The Id of cluster that can run database.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	DBClusterID *string `json:"dbClusterId,omitempty" tf:"db_cluster_id,omitempty"`

	// Reference to a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDRef *v1.Reference `json:"dbClusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDSelector *v1.Selector `json:"dbClusterIdSelector,omitempty" tf:"-"`

	// The Id of cluster that can run database.The backup frequency. Valid values are Normal, 2/24H, 3/24H, 4/24H.Default to Normal.
	DataLevel1BackupFrequency *string `json:"dataLevel1BackupFrequency,omitempty" tf:"data_level1_backup_frequency,omitempty"`

	// PolarDB Cluster of level-1 backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].
	// -> NOTE: Note Select at least two values. Separate multiple values with commas (,).
	// +listType=set
	DataLevel1BackupPeriod []*string `json:"dataLevel1BackupPeriod,omitempty" tf:"data_level1_backup_period,omitempty"`

	// The retention period of level-1 backups. Valid values: 3 to 14. Unit: days.
	DataLevel1BackupRetentionPeriod *float64 `json:"dataLevel1BackupRetentionPeriod,omitempty" tf:"data_level1_backup_retention_period,omitempty"`

	// The time period during which automatic backup is performed. The format is HH: MMZ HH: MMZ (UTC time), and the entered value must be an hour apart, such as 14:00z-15:00z.
	DataLevel1BackupTime *string `json:"dataLevel1BackupTime,omitempty" tf:"data_level1_backup_time,omitempty"`

	// PolarDB Cluster of level-2 backup is a cross regional backup area.
	DataLevel2BackupAnotherRegionRegion *string `json:"dataLevel2BackupAnotherRegionRegion,omitempty" tf:"data_level2_backup_another_region_region,omitempty"`

	// PolarDB Cluster of level-2 backup cross region backup retention period. Valid values are 0, 30 to 7300, -1. Default to 0.
	DataLevel2BackupAnotherRegionRetentionPeriod *float64 `json:"dataLevel2BackupAnotherRegionRetentionPeriod,omitempty" tf:"data_level2_backup_another_region_retention_period,omitempty"`

	// PolarDB Cluster of level-2 backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].
	// -> NOTE: Note Select at least two values. Separate multiple values with commas (,).
	// +listType=set
	DataLevel2BackupPeriod []*string `json:"dataLevel2BackupPeriod,omitempty" tf:"data_level2_backup_period,omitempty"`

	// The retention period of level-2 backups. Valid values are 0, 30 to 7300, -1. Default to 0.
	DataLevel2BackupRetentionPeriod *float64 `json:"dataLevel2BackupRetentionPeriod,omitempty" tf:"data_level2_backup_retention_period,omitempty"`

	// The region in which you want to store cross-region log backups. For information about regions that support the cross-region backup feature, see Overview.
	LogBackupAnotherRegionRegion *string `json:"logBackupAnotherRegionRegion,omitempty" tf:"log_backup_another_region_region,omitempty"`

	// The retention period of cross-region log backups. Default value: OFF. Valid values are 0, 30 to 7300, -1.
	// -> NOTE: Note When you create a cluster, the default value of this parameter is 0.
	LogBackupAnotherRegionRetentionPeriod *float64 `json:"logBackupAnotherRegionRetentionPeriod,omitempty" tf:"log_backup_another_region_retention_period,omitempty"`

	// The retention period of the log backups. Valid values are 3 to 7300, -1.
	LogBackupRetentionPeriod *float64 `json:"logBackupRetentionPeriod,omitempty" tf:"log_backup_retention_period,omitempty"`

	// PolarDB Cluster backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]. Default to ["Tuesday", "Thursday", "Saturday"].
	// +listType=set
	PreferredBackupPeriod []*string `json:"preferredBackupPeriod,omitempty" tf:"preferred_backup_period,omitempty"`

	// PolarDB Cluster backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
	PreferredBackupTime *string `json:"preferredBackupTime,omitempty" tf:"preferred_backup_time,omitempty"`
}

type BackupPolicyObservation struct {

	// The backup frequency. Valid values are Normal, 2/24H, 3/24H, 4/24H.Default to Normal.
	BackupFrequency *string `json:"backupFrequency,omitempty" tf:"backup_frequency,omitempty"`

	// Cluster backup retention days, Fixed for 7 days, not modified.
	BackupRetentionPeriod *string `json:"backupRetentionPeriod,omitempty" tf:"backup_retention_period,omitempty"`

	// Specifies whether to retain backups when you delete a cluster. Valid values are ALL, LATEST, NONE. Default to NONE. Value options can refer to the latest docs ModifyBackupPolicy
	BackupRetentionPolicyOnClusterDeletion *string `json:"backupRetentionPolicyOnClusterDeletion,omitempty" tf:"backup_retention_policy_on_cluster_deletion,omitempty"`

	// The Id of cluster that can run database.
	DBClusterID *string `json:"dbClusterId,omitempty" tf:"db_cluster_id,omitempty"`

	// The Id of cluster that can run database.The backup frequency. Valid values are Normal, 2/24H, 3/24H, 4/24H.Default to Normal.
	DataLevel1BackupFrequency *string `json:"dataLevel1BackupFrequency,omitempty" tf:"data_level1_backup_frequency,omitempty"`

	// PolarDB Cluster of level-1 backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].
	// -> NOTE: Note Select at least two values. Separate multiple values with commas (,).
	// +listType=set
	DataLevel1BackupPeriod []*string `json:"dataLevel1BackupPeriod,omitempty" tf:"data_level1_backup_period,omitempty"`

	// The retention period of level-1 backups. Valid values: 3 to 14. Unit: days.
	DataLevel1BackupRetentionPeriod *float64 `json:"dataLevel1BackupRetentionPeriod,omitempty" tf:"data_level1_backup_retention_period,omitempty"`

	// The time period during which automatic backup is performed. The format is HH: MMZ HH: MMZ (UTC time), and the entered value must be an hour apart, such as 14:00z-15:00z.
	DataLevel1BackupTime *string `json:"dataLevel1BackupTime,omitempty" tf:"data_level1_backup_time,omitempty"`

	// PolarDB Cluster of level-2 backup is a cross regional backup area.
	DataLevel2BackupAnotherRegionRegion *string `json:"dataLevel2BackupAnotherRegionRegion,omitempty" tf:"data_level2_backup_another_region_region,omitempty"`

	// PolarDB Cluster of level-2 backup cross region backup retention period. Valid values are 0, 30 to 7300, -1. Default to 0.
	DataLevel2BackupAnotherRegionRetentionPeriod *float64 `json:"dataLevel2BackupAnotherRegionRetentionPeriod,omitempty" tf:"data_level2_backup_another_region_retention_period,omitempty"`

	// PolarDB Cluster of level-2 backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].
	// -> NOTE: Note Select at least two values. Separate multiple values with commas (,).
	// +listType=set
	DataLevel2BackupPeriod []*string `json:"dataLevel2BackupPeriod,omitempty" tf:"data_level2_backup_period,omitempty"`

	// The retention period of level-2 backups. Valid values are 0, 30 to 7300, -1. Default to 0.
	DataLevel2BackupRetentionPeriod *float64 `json:"dataLevel2BackupRetentionPeriod,omitempty" tf:"data_level2_backup_retention_period,omitempty"`

	// Indicates whether the log backup feature was enabled. Valid values are 0, 1. 1 By default, the log backup feature is enabled and cannot be disabled.
	EnableBackupLog *float64 `json:"enableBackupLog,omitempty" tf:"enable_backup_log,omitempty"`

	// The current backup policy resource ID. It is same as 'db_cluster_id'.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The region in which you want to store cross-region log backups. For information about regions that support the cross-region backup feature, see Overview.
	LogBackupAnotherRegionRegion *string `json:"logBackupAnotherRegionRegion,omitempty" tf:"log_backup_another_region_region,omitempty"`

	// The retention period of cross-region log backups. Default value: OFF. Valid values are 0, 30 to 7300, -1.
	// -> NOTE: Note When you create a cluster, the default value of this parameter is 0.
	LogBackupAnotherRegionRetentionPeriod *float64 `json:"logBackupAnotherRegionRetentionPeriod,omitempty" tf:"log_backup_another_region_retention_period,omitempty"`

	// The retention period of the log backups. Valid values are 3 to 7300, -1.
	LogBackupRetentionPeriod *float64 `json:"logBackupRetentionPeriod,omitempty" tf:"log_backup_retention_period,omitempty"`

	// PolarDB Cluster backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]. Default to ["Tuesday", "Thursday", "Saturday"].
	// +listType=set
	PreferredBackupPeriod []*string `json:"preferredBackupPeriod,omitempty" tf:"preferred_backup_period,omitempty"`

	// PolarDB Cluster backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
	PreferredBackupTime *string `json:"preferredBackupTime,omitempty" tf:"preferred_backup_time,omitempty"`
}

type BackupPolicyParameters struct {

	// The backup frequency. Valid values are Normal, 2/24H, 3/24H, 4/24H.Default to Normal.
	// +kubebuilder:validation:Optional
	BackupFrequency *string `json:"backupFrequency,omitempty" tf:"backup_frequency,omitempty"`

	// Cluster backup retention days, Fixed for 7 days, not modified.
	// +kubebuilder:validation:Optional
	BackupRetentionPeriod *string `json:"backupRetentionPeriod,omitempty" tf:"backup_retention_period,omitempty"`

	// Specifies whether to retain backups when you delete a cluster. Valid values are ALL, LATEST, NONE. Default to NONE. Value options can refer to the latest docs ModifyBackupPolicy
	// +kubebuilder:validation:Optional
	BackupRetentionPolicyOnClusterDeletion *string `json:"backupRetentionPolicyOnClusterDeletion,omitempty" tf:"backup_retention_policy_on_cluster_deletion,omitempty"`

	// The Id of cluster that can run database.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	DBClusterID *string `json:"dbClusterId,omitempty" tf:"db_cluster_id,omitempty"`

	// Reference to a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDRef *v1.Reference `json:"dbClusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDSelector *v1.Selector `json:"dbClusterIdSelector,omitempty" tf:"-"`

	// The Id of cluster that can run database.The backup frequency. Valid values are Normal, 2/24H, 3/24H, 4/24H.Default to Normal.
	// +kubebuilder:validation:Optional
	DataLevel1BackupFrequency *string `json:"dataLevel1BackupFrequency,omitempty" tf:"data_level1_backup_frequency,omitempty"`

	// PolarDB Cluster of level-1 backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].
	// -> NOTE: Note Select at least two values. Separate multiple values with commas (,).
	// +kubebuilder:validation:Optional
	// +listType=set
	DataLevel1BackupPeriod []*string `json:"dataLevel1BackupPeriod,omitempty" tf:"data_level1_backup_period,omitempty"`

	// The retention period of level-1 backups. Valid values: 3 to 14. Unit: days.
	// +kubebuilder:validation:Optional
	DataLevel1BackupRetentionPeriod *float64 `json:"dataLevel1BackupRetentionPeriod,omitempty" tf:"data_level1_backup_retention_period,omitempty"`

	// The time period during which automatic backup is performed. The format is HH: MMZ HH: MMZ (UTC time), and the entered value must be an hour apart, such as 14:00z-15:00z.
	// +kubebuilder:validation:Optional
	DataLevel1BackupTime *string `json:"dataLevel1BackupTime,omitempty" tf:"data_level1_backup_time,omitempty"`

	// PolarDB Cluster of level-2 backup is a cross regional backup area.
	// +kubebuilder:validation:Optional
	DataLevel2BackupAnotherRegionRegion *string `json:"dataLevel2BackupAnotherRegionRegion,omitempty" tf:"data_level2_backup_another_region_region,omitempty"`

	// PolarDB Cluster of level-2 backup cross region backup retention period. Valid values are 0, 30 to 7300, -1. Default to 0.
	// +kubebuilder:validation:Optional
	DataLevel2BackupAnotherRegionRetentionPeriod *float64 `json:"dataLevel2BackupAnotherRegionRetentionPeriod,omitempty" tf:"data_level2_backup_another_region_retention_period,omitempty"`

	// PolarDB Cluster of level-2 backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].
	// -> NOTE: Note Select at least two values. Separate multiple values with commas (,).
	// +kubebuilder:validation:Optional
	// +listType=set
	DataLevel2BackupPeriod []*string `json:"dataLevel2BackupPeriod,omitempty" tf:"data_level2_backup_period,omitempty"`

	// The retention period of level-2 backups. Valid values are 0, 30 to 7300, -1. Default to 0.
	// +kubebuilder:validation:Optional
	DataLevel2BackupRetentionPeriod *float64 `json:"dataLevel2BackupRetentionPeriod,omitempty" tf:"data_level2_backup_retention_period,omitempty"`

	// The region in which you want to store cross-region log backups. For information about regions that support the cross-region backup feature, see Overview.
	// +kubebuilder:validation:Optional
	LogBackupAnotherRegionRegion *string `json:"logBackupAnotherRegionRegion,omitempty" tf:"log_backup_another_region_region,omitempty"`

	// The retention period of cross-region log backups. Default value: OFF. Valid values are 0, 30 to 7300, -1.
	// -> NOTE: Note When you create a cluster, the default value of this parameter is 0.
	// +kubebuilder:validation:Optional
	LogBackupAnotherRegionRetentionPeriod *float64 `json:"logBackupAnotherRegionRetentionPeriod,omitempty" tf:"log_backup_another_region_retention_period,omitempty"`

	// The retention period of the log backups. Valid values are 3 to 7300, -1.
	// +kubebuilder:validation:Optional
	LogBackupRetentionPeriod *float64 `json:"logBackupRetentionPeriod,omitempty" tf:"log_backup_retention_period,omitempty"`

	// PolarDB Cluster backup period. Valid values: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]. Default to ["Tuesday", "Thursday", "Saturday"].
	// +kubebuilder:validation:Optional
	// +listType=set
	PreferredBackupPeriod []*string `json:"preferredBackupPeriod,omitempty" tf:"preferred_backup_period,omitempty"`

	// PolarDB Cluster backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
	// +kubebuilder:validation:Optional
	PreferredBackupTime *string `json:"preferredBackupTime,omitempty" tf:"preferred_backup_time,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// BackupPolicySpec defines the desired state of BackupPolicy
type BackupPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BackupPolicyInitParameters `json:"initProvider,omitempty"`
}

// BackupPolicyStatus defines the observed state of BackupPolicy.
type BackupPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BackupPolicy is the Schema for the BackupPolicys API. Provides a PolarDB backup policy resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type BackupPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BackupPolicySpec   `json:"spec"`
	Status            BackupPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupPolicyList contains a list of BackupPolicys
type BackupPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupPolicy `json:"items"`
}

// Repository type metadata.
var (
	BackupPolicy_Kind             = "BackupPolicy"
	BackupPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupPolicy_Kind}.String()
	BackupPolicy_KindAPIVersion   = BackupPolicy_Kind + "." + CRDGroupVersion.String()
	BackupPolicy_GroupVersionKind = CRDGroupVersion.WithKind(BackupPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupPolicy{}, &BackupPolicyList{})
}
