// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CookieConfigInitParameters struct {

	// The values of the cookie. See values below.
	Values []ValuesInitParameters `json:"values,omitempty" tf:"values,omitempty"`
}

type CookieConfigObservation struct {

	// The values of the cookie. See values below.
	Values []ValuesObservation `json:"values,omitempty" tf:"values,omitempty"`
}

type CookieConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	Values []ValuesParameters `json:"values,omitempty" tf:"values,omitempty"`
}

type CorsConfigInitParameters struct {

	// Specifies whether credentials can be passed during CORS operations. Valid values: on, off.
	AllowCredentials *string `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The allowed headers for CORS requests.
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The allowed HTTP methods for CORS requests. Valid values: GET, POST, PUT, DELETE, HEAD, OPTIONS, PATCH.
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The allowed origins of CORS requests.
	AllowOrigin []*string `json:"allowOrigin,omitempty" tf:"allow_origin,omitempty"`

	// The headers that can be exposed.
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// The maximum cache time of preflight requests in the browser. Unit: seconds. Valid values: -1 to 172800.
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type CorsConfigObservation struct {

	// Specifies whether credentials can be passed during CORS operations. Valid values: on, off.
	AllowCredentials *string `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The allowed headers for CORS requests.
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The allowed HTTP methods for CORS requests. Valid values: GET, POST, PUT, DELETE, HEAD, OPTIONS, PATCH.
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The allowed origins of CORS requests.
	AllowOrigin []*string `json:"allowOrigin,omitempty" tf:"allow_origin,omitempty"`

	// The headers that can be exposed.
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// The maximum cache time of preflight requests in the browser. Unit: seconds. Valid values: -1 to 172800.
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type CorsConfigParameters struct {

	// Specifies whether credentials can be passed during CORS operations. Valid values: on, off.
	// +kubebuilder:validation:Optional
	AllowCredentials *string `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// The allowed headers for CORS requests.
	// +kubebuilder:validation:Optional
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// The allowed HTTP methods for CORS requests. Valid values: GET, POST, PUT, DELETE, HEAD, OPTIONS, PATCH.
	// +kubebuilder:validation:Optional
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// The allowed origins of CORS requests.
	// +kubebuilder:validation:Optional
	AllowOrigin []*string `json:"allowOrigin,omitempty" tf:"allow_origin,omitempty"`

	// The headers that can be exposed.
	// +kubebuilder:validation:Optional
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// The maximum cache time of preflight requests in the browser. Unit: seconds. Valid values: -1 to 172800.
	// +kubebuilder:validation:Optional
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type FixedResponseConfigInitParameters struct {

	// The fixed response. The response cannot exceed 1 KB in size and can contain only ASCII characters.
	Content *string `json:"content,omitempty" tf:"content,omitempty"`

	// The format of the fixed response. Valid values: text/plain, text/css, text/html, application/javascript, and application/json.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	// The HTTP status code of the response. The code must be an HTTP_2xx, HTTP_4xx or HTTP_5xx.x is a digit.
	HTTPCode *string `json:"httpCode,omitempty" tf:"http_code,omitempty"`
}

type FixedResponseConfigObservation struct {

	// The fixed response. The response cannot exceed 1 KB in size and can contain only ASCII characters.
	Content *string `json:"content,omitempty" tf:"content,omitempty"`

	// The format of the fixed response. Valid values: text/plain, text/css, text/html, application/javascript, and application/json.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	// The HTTP status code of the response. The code must be an HTTP_2xx, HTTP_4xx or HTTP_5xx.x is a digit.
	HTTPCode *string `json:"httpCode,omitempty" tf:"http_code,omitempty"`
}

type FixedResponseConfigParameters struct {

	// The fixed response. The response cannot exceed 1 KB in size and can contain only ASCII characters.
	// +kubebuilder:validation:Optional
	Content *string `json:"content" tf:"content,omitempty"`

	// The format of the fixed response. Valid values: text/plain, text/css, text/html, application/javascript, and application/json.
	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	// The HTTP status code of the response. The code must be an HTTP_2xx, HTTP_4xx or HTTP_5xx.x is a digit.
	// +kubebuilder:validation:Optional
	HTTPCode *string `json:"httpCode,omitempty" tf:"http_code,omitempty"`
}

type ForwardGroupConfigServerGroupTuplesInitParameters struct {

	// The ID of the destination server group to which requests are forwarded.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.ServerGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ServerGroupID *string `json:"serverGroupId,omitempty" tf:"server_group_id,omitempty"`

	// Reference to a ServerGroup in alb to populate serverGroupId.
	// +kubebuilder:validation:Optional
	ServerGroupIDRef *v1.Reference `json:"serverGroupIdRef,omitempty" tf:"-"`

	// Selector for a ServerGroup in alb to populate serverGroupId.
	// +kubebuilder:validation:Optional
	ServerGroupIDSelector *v1.Selector `json:"serverGroupIdSelector,omitempty" tf:"-"`

	// The Weight of server group. Default value: 100. NOTE: This attribute is required when the number of server_group_tuples is greater than 2.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type ForwardGroupConfigServerGroupTuplesObservation struct {

	// The ID of the destination server group to which requests are forwarded.
	ServerGroupID *string `json:"serverGroupId,omitempty" tf:"server_group_id,omitempty"`

	// The Weight of server group. Default value: 100. NOTE: This attribute is required when the number of server_group_tuples is greater than 2.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type ForwardGroupConfigServerGroupTuplesParameters struct {

	// The ID of the destination server group to which requests are forwarded.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.ServerGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServerGroupID *string `json:"serverGroupId,omitempty" tf:"server_group_id,omitempty"`

	// Reference to a ServerGroup in alb to populate serverGroupId.
	// +kubebuilder:validation:Optional
	ServerGroupIDRef *v1.Reference `json:"serverGroupIdRef,omitempty" tf:"-"`

	// Selector for a ServerGroup in alb to populate serverGroupId.
	// +kubebuilder:validation:Optional
	ServerGroupIDSelector *v1.Selector `json:"serverGroupIdSelector,omitempty" tf:"-"`

	// The Weight of server group. Default value: 100. NOTE: This attribute is required when the number of server_group_tuples is greater than 2.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type HeaderConfigInitParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HeaderConfigObservation struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HeaderConfigParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HostConfigInitParameters struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HostConfigObservation struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type HostConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type InsertHeaderConfigInitParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// is set to SystemDefined, the following values are used:
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`
}

type InsertHeaderConfigObservation struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// is set to SystemDefined, the following values are used:
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`
}

type InsertHeaderConfigParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// is set to SystemDefined, the following values are used:
	// +kubebuilder:validation:Optional
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`
}

type MethodConfigInitParameters struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MethodConfigObservation struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MethodConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MirrorGroupConfigInitParameters struct {

	// The destination server group to which requests are forwarded. See server_group_tuples below.
	ServerGroupTuples []MirrorGroupConfigServerGroupTuplesInitParameters `json:"serverGroupTuples,omitempty" tf:"server_group_tuples,omitempty"`
}

type MirrorGroupConfigObservation struct {

	// The destination server group to which requests are forwarded. See server_group_tuples below.
	ServerGroupTuples []MirrorGroupConfigServerGroupTuplesObservation `json:"serverGroupTuples,omitempty" tf:"server_group_tuples,omitempty"`
}

type MirrorGroupConfigParameters struct {

	// The destination server group to which requests are forwarded. See server_group_tuples below.
	// +kubebuilder:validation:Optional
	ServerGroupTuples []MirrorGroupConfigServerGroupTuplesParameters `json:"serverGroupTuples,omitempty" tf:"server_group_tuples,omitempty"`
}

type MirrorGroupConfigServerGroupTuplesInitParameters struct {

	// The ID of the destination server group to which requests are forwarded.
	ServerGroupID *string `json:"serverGroupId,omitempty" tf:"server_group_id,omitempty"`
}

type MirrorGroupConfigServerGroupTuplesObservation struct {

	// The ID of the destination server group to which requests are forwarded.
	ServerGroupID *string `json:"serverGroupId,omitempty" tf:"server_group_id,omitempty"`
}

type MirrorGroupConfigServerGroupTuplesParameters struct {

	// The ID of the destination server group to which requests are forwarded.
	// +kubebuilder:validation:Optional
	ServerGroupID *string `json:"serverGroupId,omitempty" tf:"server_group_id,omitempty"`
}

type PathConfigInitParameters struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PathConfigObservation struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PathConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type QueryStringConfigInitParameters struct {

	// The values of the cookie. See values below.
	Values []QueryStringConfigValuesInitParameters `json:"values,omitempty" tf:"values,omitempty"`
}

type QueryStringConfigObservation struct {

	// The values of the cookie. See values below.
	Values []QueryStringConfigValuesObservation `json:"values,omitempty" tf:"values,omitempty"`
}

type QueryStringConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	Values []QueryStringConfigValuesParameters `json:"values,omitempty" tf:"values,omitempty"`
}

type QueryStringConfigValuesInitParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type QueryStringConfigValuesObservation struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type QueryStringConfigValuesParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RedirectConfigInitParameters struct {

	// The HTTP status code of the response. The code must be an HTTP_2xx, HTTP_4xx or HTTP_5xx.x is a digit.
	HTTPCode *string `json:"httpCode,omitempty" tf:"http_code,omitempty"`

	// The host name of the destination to which requests are directed. The host name must meet the following rules:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks () and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The path of the destination to which requests are directed. Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?) and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive. Default value: ${path}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them with a valid string.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port of the destination to which requests are redirected. Valid values: 1 to 63335. Default value: ${port}. You cannot use this value together with other characters at the same time.
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// The protocol of the requests to be redirected. Valid values: HTTP and HTTPS. Default value: ${protocol}. You cannot use this value together with other characters at the same time. Note HTTPS listeners can redirect only HTTPS requests.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The query string of the request to be redirected. The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &. Default value: ${query}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them together with a valid string.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type RedirectConfigObservation struct {

	// The HTTP status code of the response. The code must be an HTTP_2xx, HTTP_4xx or HTTP_5xx.x is a digit.
	HTTPCode *string `json:"httpCode,omitempty" tf:"http_code,omitempty"`

	// The host name of the destination to which requests are directed. The host name must meet the following rules:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks () and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The path of the destination to which requests are directed. Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?) and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive. Default value: ${path}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them with a valid string.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port of the destination to which requests are redirected. Valid values: 1 to 63335. Default value: ${port}. You cannot use this value together with other characters at the same time.
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// The protocol of the requests to be redirected. Valid values: HTTP and HTTPS. Default value: ${protocol}. You cannot use this value together with other characters at the same time. Note HTTPS listeners can redirect only HTTPS requests.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The query string of the request to be redirected. The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &. Default value: ${query}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them together with a valid string.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type RedirectConfigParameters struct {

	// The HTTP status code of the response. The code must be an HTTP_2xx, HTTP_4xx or HTTP_5xx.x is a digit.
	// +kubebuilder:validation:Optional
	HTTPCode *string `json:"httpCode,omitempty" tf:"http_code,omitempty"`

	// The host name of the destination to which requests are directed. The host name must meet the following rules:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks () and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The path of the destination to which requests are directed. Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?) and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive. Default value: ${path}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them with a valid string.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The port of the destination to which requests are redirected. Valid values: 1 to 63335. Default value: ${port}. You cannot use this value together with other characters at the same time.
	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// The protocol of the requests to be redirected. Valid values: HTTP and HTTPS. Default value: ${protocol}. You cannot use this value together with other characters at the same time. Note HTTPS listeners can redirect only HTTPS requests.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The query string of the request to be redirected. The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &. Default value: ${query}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them together with a valid string.
	// +kubebuilder:validation:Optional
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type RemoveHeaderConfigInitParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type RemoveHeaderConfigObservation struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type RemoveHeaderConfigParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type ResponseHeaderConfigInitParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ResponseHeaderConfigObservation struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ResponseHeaderConfigParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ResponseStatusCodeConfigInitParameters struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ResponseStatusCodeConfigObservation struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type ResponseStatusCodeConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type RewriteConfigInitParameters struct {

	// The host name of the destination to which requests are directed. The host name must meet the following rules:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks () and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The path of the destination to which requests are directed. Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?) and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive. Default value: ${path}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them with a valid string.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The query string of the request to be redirected. The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &. Default value: ${query}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them together with a valid string.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type RewriteConfigObservation struct {

	// The host name of the destination to which requests are directed. The host name must meet the following rules:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks () and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The path of the destination to which requests are directed. Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?) and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive. Default value: ${path}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them with a valid string.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The query string of the request to be redirected. The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &. Default value: ${query}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them together with a valid string.
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type RewriteConfigParameters struct {

	// The host name of the destination to which requests are directed. The host name must meet the following rules:  The host name must be 3 to 128 characters in length, and can contain letters, digits, hyphens (-), periods (.), asterisks (), and question marks (?). The host name must contain at least one period (.), and cannot start or end with a period (.). The rightmost domain label can contain only letters, asterisks () and question marks (?) and cannot contain digits or hyphens (-). Other domain labels cannot start or end with a hyphen (-). You can include asterisks (*) and question marks (?) anywhere in a domain label. Default value: ${host}. You cannot use this value with other characters at the same time.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// The path of the destination to which requests are directed. Valid values: The path must be 1 to 128 characters in length, and start with a forward slash (/). The path can contain letters, digits, asterisks (*), question marks (?) and the following special characters: $ - _ . + / & ~ @ :. It cannot contain the following special characters: " % # ; ! ( ) [ ] ^ , ”. The path is case-sensitive. Default value: ${path}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them with a valid string.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The query string of the request to be redirected. The query string must be 1 to 128 characters in length, can contain letters and printable characters. It cannot contain the following special characters: # [ ] { } \ | < > &. Default value: ${query}. You can also reference ${host}, ${protocol}, and ${port}. Each variable can appear at most once. You can use the preceding variables at the same time, or use them together with a valid string.
	// +kubebuilder:validation:Optional
	Query *string `json:"query,omitempty" tf:"query,omitempty"`
}

type RuleActionsForwardGroupConfigInitParameters struct {

	// The configuration of session persistence for server groups. See server_group_sticky_session below.
	ServerGroupStickySession []ServerGroupStickySessionInitParameters `json:"serverGroupStickySession,omitempty" tf:"server_group_sticky_session,omitempty"`

	// The destination server group to which requests are forwarded. See server_group_tuples below.
	ServerGroupTuples []ForwardGroupConfigServerGroupTuplesInitParameters `json:"serverGroupTuples,omitempty" tf:"server_group_tuples,omitempty"`
}

type RuleActionsForwardGroupConfigObservation struct {

	// The configuration of session persistence for server groups. See server_group_sticky_session below.
	ServerGroupStickySession []ServerGroupStickySessionObservation `json:"serverGroupStickySession,omitempty" tf:"server_group_sticky_session,omitempty"`

	// The destination server group to which requests are forwarded. See server_group_tuples below.
	ServerGroupTuples []ForwardGroupConfigServerGroupTuplesObservation `json:"serverGroupTuples,omitempty" tf:"server_group_tuples,omitempty"`
}

type RuleActionsForwardGroupConfigParameters struct {

	// The configuration of session persistence for server groups. See server_group_sticky_session below.
	// +kubebuilder:validation:Optional
	ServerGroupStickySession []ServerGroupStickySessionParameters `json:"serverGroupStickySession,omitempty" tf:"server_group_sticky_session,omitempty"`

	// The destination server group to which requests are forwarded. See server_group_tuples below.
	// +kubebuilder:validation:Optional
	ServerGroupTuples []ForwardGroupConfigServerGroupTuplesParameters `json:"serverGroupTuples,omitempty" tf:"server_group_tuples,omitempty"`
}

type RuleActionsInitParameters struct {

	// Request forwarding based on CORS. See cors_config below.
	CorsConfig []CorsConfigInitParameters `json:"corsConfig,omitempty" tf:"cors_config,omitempty"`

	// The configuration of the fixed response. See fixed_response_config below.
	FixedResponseConfig []FixedResponseConfigInitParameters `json:"fixedResponseConfig,omitempty" tf:"fixed_response_config,omitempty"`

	// The forward response action within ALB. See forward_group_config below.
	ForwardGroupConfig []RuleActionsForwardGroupConfigInitParameters `json:"forwardGroupConfig,omitempty" tf:"forward_group_config,omitempty"`

	// The configuration of the inserted header field. See insert_header_config below.
	InsertHeaderConfig []InsertHeaderConfigInitParameters `json:"insertHeaderConfig,omitempty" tf:"insert_header_config,omitempty"`

	// The order of the forwarding rule actions. Valid values: 1 to 50000. The actions are performed in ascending order. You cannot leave this parameter empty. Each value must be unique.
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// The configuration of the external redirect action. See redirect_config below.
	RedirectConfig []RedirectConfigInitParameters `json:"redirectConfig,omitempty" tf:"redirect_config,omitempty"`

	// The configuration of the inserted header field. See remove_header_config below.
	RemoveHeaderConfig []RemoveHeaderConfigInitParameters `json:"removeHeaderConfig,omitempty" tf:"remove_header_config,omitempty"`

	// The redirect action within ALB. See rewrite_config below.
	RewriteConfig []RewriteConfigInitParameters `json:"rewriteConfig,omitempty" tf:"rewrite_config,omitempty"`

	// The Flow speed limit. See traffic_limit_config below.
	TrafficLimitConfig []TrafficLimitConfigInitParameters `json:"trafficLimitConfig,omitempty" tf:"traffic_limit_config,omitempty"`

	// The Traffic mirroring. See traffic_mirror_config below.
	TrafficMirrorConfig []TrafficMirrorConfigInitParameters `json:"trafficMirrorConfig,omitempty" tf:"traffic_mirror_config,omitempty"`

	// The action type. Valid values: ForwardGroup, Redirect, FixedResponse, Rewrite, InsertHeader, RemoveHeader, TrafficLimit, TrafficMirror and Cors.
	// Note: The preceding actions can be classified into two types:  FinalType: A forwarding rule can contain only one FinalType action, which is executed last. This type of action can contain only one ForwardGroup, Redirect or FixedResponse action. ExtType: A forwarding rule can contain one or more ExtType actions, which are executed before FinalType actions and need to coexist with the FinalType actions. This type of action can contain multiple InsertHeader actions or one Rewrite action.
	// NOTE: The TrafficLimit and TrafficMirror option is available since 1.162.0.
	// NOTE: From version 1.205.0, type can be set to Cors.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RuleActionsObservation struct {

	// Request forwarding based on CORS. See cors_config below.
	CorsConfig []CorsConfigObservation `json:"corsConfig,omitempty" tf:"cors_config,omitempty"`

	// The configuration of the fixed response. See fixed_response_config below.
	FixedResponseConfig []FixedResponseConfigObservation `json:"fixedResponseConfig,omitempty" tf:"fixed_response_config,omitempty"`

	// The forward response action within ALB. See forward_group_config below.
	ForwardGroupConfig []RuleActionsForwardGroupConfigObservation `json:"forwardGroupConfig,omitempty" tf:"forward_group_config,omitempty"`

	// The configuration of the inserted header field. See insert_header_config below.
	InsertHeaderConfig []InsertHeaderConfigObservation `json:"insertHeaderConfig,omitempty" tf:"insert_header_config,omitempty"`

	// The order of the forwarding rule actions. Valid values: 1 to 50000. The actions are performed in ascending order. You cannot leave this parameter empty. Each value must be unique.
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// The configuration of the external redirect action. See redirect_config below.
	RedirectConfig []RedirectConfigObservation `json:"redirectConfig,omitempty" tf:"redirect_config,omitempty"`

	// The configuration of the inserted header field. See remove_header_config below.
	RemoveHeaderConfig []RemoveHeaderConfigObservation `json:"removeHeaderConfig,omitempty" tf:"remove_header_config,omitempty"`

	// The redirect action within ALB. See rewrite_config below.
	RewriteConfig []RewriteConfigObservation `json:"rewriteConfig,omitempty" tf:"rewrite_config,omitempty"`

	// The Flow speed limit. See traffic_limit_config below.
	TrafficLimitConfig []TrafficLimitConfigObservation `json:"trafficLimitConfig,omitempty" tf:"traffic_limit_config,omitempty"`

	// The Traffic mirroring. See traffic_mirror_config below.
	TrafficMirrorConfig []TrafficMirrorConfigObservation `json:"trafficMirrorConfig,omitempty" tf:"traffic_mirror_config,omitempty"`

	// The action type. Valid values: ForwardGroup, Redirect, FixedResponse, Rewrite, InsertHeader, RemoveHeader, TrafficLimit, TrafficMirror and Cors.
	// Note: The preceding actions can be classified into two types:  FinalType: A forwarding rule can contain only one FinalType action, which is executed last. This type of action can contain only one ForwardGroup, Redirect or FixedResponse action. ExtType: A forwarding rule can contain one or more ExtType actions, which are executed before FinalType actions and need to coexist with the FinalType actions. This type of action can contain multiple InsertHeader actions or one Rewrite action.
	// NOTE: The TrafficLimit and TrafficMirror option is available since 1.162.0.
	// NOTE: From version 1.205.0, type can be set to Cors.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RuleActionsParameters struct {

	// Request forwarding based on CORS. See cors_config below.
	// +kubebuilder:validation:Optional
	CorsConfig []CorsConfigParameters `json:"corsConfig,omitempty" tf:"cors_config,omitempty"`

	// The configuration of the fixed response. See fixed_response_config below.
	// +kubebuilder:validation:Optional
	FixedResponseConfig []FixedResponseConfigParameters `json:"fixedResponseConfig,omitempty" tf:"fixed_response_config,omitempty"`

	// The forward response action within ALB. See forward_group_config below.
	// +kubebuilder:validation:Optional
	ForwardGroupConfig []RuleActionsForwardGroupConfigParameters `json:"forwardGroupConfig,omitempty" tf:"forward_group_config,omitempty"`

	// The configuration of the inserted header field. See insert_header_config below.
	// +kubebuilder:validation:Optional
	InsertHeaderConfig []InsertHeaderConfigParameters `json:"insertHeaderConfig,omitempty" tf:"insert_header_config,omitempty"`

	// The order of the forwarding rule actions. Valid values: 1 to 50000. The actions are performed in ascending order. You cannot leave this parameter empty. Each value must be unique.
	// +kubebuilder:validation:Optional
	Order *float64 `json:"order" tf:"order,omitempty"`

	// The configuration of the external redirect action. See redirect_config below.
	// +kubebuilder:validation:Optional
	RedirectConfig []RedirectConfigParameters `json:"redirectConfig,omitempty" tf:"redirect_config,omitempty"`

	// The configuration of the inserted header field. See remove_header_config below.
	// +kubebuilder:validation:Optional
	RemoveHeaderConfig []RemoveHeaderConfigParameters `json:"removeHeaderConfig,omitempty" tf:"remove_header_config,omitempty"`

	// The redirect action within ALB. See rewrite_config below.
	// +kubebuilder:validation:Optional
	RewriteConfig []RewriteConfigParameters `json:"rewriteConfig,omitempty" tf:"rewrite_config,omitempty"`

	// The Flow speed limit. See traffic_limit_config below.
	// +kubebuilder:validation:Optional
	TrafficLimitConfig []TrafficLimitConfigParameters `json:"trafficLimitConfig,omitempty" tf:"traffic_limit_config,omitempty"`

	// The Traffic mirroring. See traffic_mirror_config below.
	// +kubebuilder:validation:Optional
	TrafficMirrorConfig []TrafficMirrorConfigParameters `json:"trafficMirrorConfig,omitempty" tf:"traffic_mirror_config,omitempty"`

	// The action type. Valid values: ForwardGroup, Redirect, FixedResponse, Rewrite, InsertHeader, RemoveHeader, TrafficLimit, TrafficMirror and Cors.
	// Note: The preceding actions can be classified into two types:  FinalType: A forwarding rule can contain only one FinalType action, which is executed last. This type of action can contain only one ForwardGroup, Redirect or FixedResponse action. ExtType: A forwarding rule can contain one or more ExtType actions, which are executed before FinalType actions and need to coexist with the FinalType actions. This type of action can contain multiple InsertHeader actions or one Rewrite action.
	// NOTE: The TrafficLimit and TrafficMirror option is available since 1.162.0.
	// NOTE: From version 1.205.0, type can be set to Cors.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleConditionsInitParameters struct {

	// The configuration of the cookie. See See cookie_config below.
	CookieConfig []CookieConfigInitParameters `json:"cookieConfig,omitempty" tf:"cookie_config,omitempty"`

	// The configuration of the header field. See header_config below.
	HeaderConfig []HeaderConfigInitParameters `json:"headerConfig,omitempty" tf:"header_config,omitempty"`

	// The configuration of the host field. See host_config below.
	HostConfig []HostConfigInitParameters `json:"hostConfig,omitempty" tf:"host_config,omitempty"`

	// The configuration of the request method. See method_config below.
	MethodConfig []MethodConfigInitParameters `json:"methodConfig,omitempty" tf:"method_config,omitempty"`

	// The configuration of the path for the request to be forwarded. See path_config below.
	PathConfig []PathConfigInitParameters `json:"pathConfig,omitempty" tf:"path_config,omitempty"`

	// The configuration of the query string. See query_string_config below.
	QueryStringConfig []QueryStringConfigInitParameters `json:"queryStringConfig,omitempty" tf:"query_string_config,omitempty"`

	// The configuration of the header field. See response_header_config below.
	ResponseHeaderConfig []ResponseHeaderConfigInitParameters `json:"responseHeaderConfig,omitempty" tf:"response_header_config,omitempty"`

	// The configuration of the header field. See response_status_code_config below.
	ResponseStatusCodeConfig []ResponseStatusCodeConfigInitParameters `json:"responseStatusCodeConfig,omitempty" tf:"response_status_code_config,omitempty"`

	// The Based on source IP traffic matching. Required and valid when Type is SourceIP. See source_ip_config below.
	SourceIPConfig []SourceIPConfigInitParameters `json:"sourceIpConfig,omitempty" tf:"source_ip_config,omitempty"`

	// The type of the forwarding rule. Valid values:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RuleConditionsObservation struct {

	// The configuration of the cookie. See See cookie_config below.
	CookieConfig []CookieConfigObservation `json:"cookieConfig,omitempty" tf:"cookie_config,omitempty"`

	// The configuration of the header field. See header_config below.
	HeaderConfig []HeaderConfigObservation `json:"headerConfig,omitempty" tf:"header_config,omitempty"`

	// The configuration of the host field. See host_config below.
	HostConfig []HostConfigObservation `json:"hostConfig,omitempty" tf:"host_config,omitempty"`

	// The configuration of the request method. See method_config below.
	MethodConfig []MethodConfigObservation `json:"methodConfig,omitempty" tf:"method_config,omitempty"`

	// The configuration of the path for the request to be forwarded. See path_config below.
	PathConfig []PathConfigObservation `json:"pathConfig,omitempty" tf:"path_config,omitempty"`

	// The configuration of the query string. See query_string_config below.
	QueryStringConfig []QueryStringConfigObservation `json:"queryStringConfig,omitempty" tf:"query_string_config,omitempty"`

	// The configuration of the header field. See response_header_config below.
	ResponseHeaderConfig []ResponseHeaderConfigObservation `json:"responseHeaderConfig,omitempty" tf:"response_header_config,omitempty"`

	// The configuration of the header field. See response_status_code_config below.
	ResponseStatusCodeConfig []ResponseStatusCodeConfigObservation `json:"responseStatusCodeConfig,omitempty" tf:"response_status_code_config,omitempty"`

	// The Based on source IP traffic matching. Required and valid when Type is SourceIP. See source_ip_config below.
	SourceIPConfig []SourceIPConfigObservation `json:"sourceIpConfig,omitempty" tf:"source_ip_config,omitempty"`

	// The type of the forwarding rule. Valid values:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RuleConditionsParameters struct {

	// The configuration of the cookie. See See cookie_config below.
	// +kubebuilder:validation:Optional
	CookieConfig []CookieConfigParameters `json:"cookieConfig,omitempty" tf:"cookie_config,omitempty"`

	// The configuration of the header field. See header_config below.
	// +kubebuilder:validation:Optional
	HeaderConfig []HeaderConfigParameters `json:"headerConfig,omitempty" tf:"header_config,omitempty"`

	// The configuration of the host field. See host_config below.
	// +kubebuilder:validation:Optional
	HostConfig []HostConfigParameters `json:"hostConfig,omitempty" tf:"host_config,omitempty"`

	// The configuration of the request method. See method_config below.
	// +kubebuilder:validation:Optional
	MethodConfig []MethodConfigParameters `json:"methodConfig,omitempty" tf:"method_config,omitempty"`

	// The configuration of the path for the request to be forwarded. See path_config below.
	// +kubebuilder:validation:Optional
	PathConfig []PathConfigParameters `json:"pathConfig,omitempty" tf:"path_config,omitempty"`

	// The configuration of the query string. See query_string_config below.
	// +kubebuilder:validation:Optional
	QueryStringConfig []QueryStringConfigParameters `json:"queryStringConfig,omitempty" tf:"query_string_config,omitempty"`

	// The configuration of the header field. See response_header_config below.
	// +kubebuilder:validation:Optional
	ResponseHeaderConfig []ResponseHeaderConfigParameters `json:"responseHeaderConfig,omitempty" tf:"response_header_config,omitempty"`

	// The configuration of the header field. See response_status_code_config below.
	// +kubebuilder:validation:Optional
	ResponseStatusCodeConfig []ResponseStatusCodeConfigParameters `json:"responseStatusCodeConfig,omitempty" tf:"response_status_code_config,omitempty"`

	// The Based on source IP traffic matching. Required and valid when Type is SourceIP. See source_ip_config below.
	// +kubebuilder:validation:Optional
	SourceIPConfig []SourceIPConfigParameters `json:"sourceIpConfig,omitempty" tf:"source_ip_config,omitempty"`

	// The type of the forwarding rule. Valid values:
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RuleInitParameters struct {

	// The direction to which the forwarding rule is applied. Default value: Request. Valid values:
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies whether to precheck this request.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The ID of the listener to which the forwarding rule belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.Listener
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// The priority of the rule. Valid values: 1 to 10000. A smaller value indicates a higher priority. Note: The priority of each rule within the same listener must be unique.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The actions of the forwarding rules. See rule_actions below.
	RuleActions []RuleActionsInitParameters `json:"ruleActions,omitempty" tf:"rule_actions,omitempty"`

	// The conditions of the forwarding rule. See rule_conditions below.
	RuleConditions []RuleConditionsInitParameters `json:"ruleConditions,omitempty" tf:"rule_conditions,omitempty"`

	// The name of the forwarding rule. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`
}

type RuleObservation struct {

	// The direction to which the forwarding rule is applied. Default value: Request. Valid values:
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies whether to precheck this request.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the listener to which the forwarding rule belongs.
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// The priority of the rule. Valid values: 1 to 10000. A smaller value indicates a higher priority. Note: The priority of each rule within the same listener must be unique.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// The actions of the forwarding rules. See rule_actions below.
	RuleActions []RuleActionsObservation `json:"ruleActions,omitempty" tf:"rule_actions,omitempty"`

	// The conditions of the forwarding rule. See rule_conditions below.
	RuleConditions []RuleConditionsObservation `json:"ruleConditions,omitempty" tf:"rule_conditions,omitempty"`

	// The name of the forwarding rule. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type RuleParameters struct {

	// The direction to which the forwarding rule is applied. Default value: Request. Valid values:
	// +kubebuilder:validation:Optional
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// Specifies whether to precheck this request.
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The ID of the listener to which the forwarding rule belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.Listener
	// +kubebuilder:validation:Optional
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// The priority of the rule. Valid values: 1 to 10000. A smaller value indicates a higher priority. Note: The priority of each rule within the same listener must be unique.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The actions of the forwarding rules. See rule_actions below.
	// +kubebuilder:validation:Optional
	RuleActions []RuleActionsParameters `json:"ruleActions,omitempty" tf:"rule_actions,omitempty"`

	// The conditions of the forwarding rule. See rule_conditions below.
	// +kubebuilder:validation:Optional
	RuleConditions []RuleConditionsParameters `json:"ruleConditions,omitempty" tf:"rule_conditions,omitempty"`

	// The name of the forwarding rule. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), and hyphens (-). The name must start with a letter.
	// +kubebuilder:validation:Optional
	RuleName *string `json:"ruleName,omitempty" tf:"rule_name,omitempty"`
}

type ServerGroupStickySessionInitParameters struct {

	// Whether to enable session persistence.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The timeout period. Unit: seconds. Valid values: 1 to 86400. Default value: 1000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type ServerGroupStickySessionObservation struct {

	// Whether to enable session persistence.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The timeout period. Unit: seconds. Valid values: 1 to 86400. Default value: 1000.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type ServerGroupStickySessionParameters struct {

	// Whether to enable session persistence.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The timeout period. Unit: seconds. Valid values: 1 to 86400. Default value: 1000.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type SourceIPConfigInitParameters struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type SourceIPConfigObservation struct {

	// The values of the cookie. See values below.
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type SourceIPConfigParameters struct {

	// The values of the cookie. See values below.
	// +kubebuilder:validation:Optional
	// +listType=set
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type TrafficLimitConfigInitParameters struct {

	// The number of requests per second for a single IP address. Value range: 1~1000000. Note: If the QPS parameter is also configured, the value of the PerIpQps parameter must be smaller than the value of the QPS parameter.
	PerIPQPS *float64 `json:"perIpQps,omitempty" tf:"per_ip_qps,omitempty"`

	// The Number of requests per second. Valid values: 1 to 100000.
	QPS *float64 `json:"qps,omitempty" tf:"qps,omitempty"`
}

type TrafficLimitConfigObservation struct {

	// The number of requests per second for a single IP address. Value range: 1~1000000. Note: If the QPS parameter is also configured, the value of the PerIpQps parameter must be smaller than the value of the QPS parameter.
	PerIPQPS *float64 `json:"perIpQps,omitempty" tf:"per_ip_qps,omitempty"`

	// The Number of requests per second. Valid values: 1 to 100000.
	QPS *float64 `json:"qps,omitempty" tf:"qps,omitempty"`
}

type TrafficLimitConfigParameters struct {

	// The number of requests per second for a single IP address. Value range: 1~1000000. Note: If the QPS parameter is also configured, the value of the PerIpQps parameter must be smaller than the value of the QPS parameter.
	// +kubebuilder:validation:Optional
	PerIPQPS *float64 `json:"perIpQps,omitempty" tf:"per_ip_qps,omitempty"`

	// The Number of requests per second. Valid values: 1 to 100000.
	// +kubebuilder:validation:Optional
	QPS *float64 `json:"qps,omitempty" tf:"qps,omitempty"`
}

type TrafficMirrorConfigInitParameters struct {

	// The Traffic is mirrored to the server group. See mirror_group_config below.
	MirrorGroupConfig []MirrorGroupConfigInitParameters `json:"mirrorGroupConfig,omitempty" tf:"mirror_group_config,omitempty"`

	// The Mirror target type.
	TargetType *string `json:"targetType,omitempty" tf:"target_type,omitempty"`
}

type TrafficMirrorConfigObservation struct {

	// The Traffic is mirrored to the server group. See mirror_group_config below.
	MirrorGroupConfig []MirrorGroupConfigObservation `json:"mirrorGroupConfig,omitempty" tf:"mirror_group_config,omitempty"`

	// The Mirror target type.
	TargetType *string `json:"targetType,omitempty" tf:"target_type,omitempty"`
}

type TrafficMirrorConfigParameters struct {

	// The Traffic is mirrored to the server group. See mirror_group_config below.
	// +kubebuilder:validation:Optional
	MirrorGroupConfig []MirrorGroupConfigParameters `json:"mirrorGroupConfig,omitempty" tf:"mirror_group_config,omitempty"`

	// The Mirror target type.
	// +kubebuilder:validation:Optional
	TargetType *string `json:"targetType,omitempty" tf:"target_type,omitempty"`
}

type ValuesInitParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesObservation struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ValuesParameters struct {

	// The name of the inserted header field. The name must be 1 to 40 characters in length, and can contain letters, digits, underscores (_), and hyphens (-). You cannot use the same name in InsertHeader. Note You cannot use Cookie or Host in the name.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The content of the inserted header field. Valid values:
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// RuleSpec defines the desired state of Rule
type RuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RuleInitParameters `json:"initProvider,omitempty"`
}

// RuleStatus defines the observed state of Rule.
type RuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Rule is the Schema for the Rules API. Provides a Alicloud Application Load Balancer (ALB) Rule resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Rule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.priority) || (has(self.initProvider) && has(self.initProvider.priority))",message="spec.forProvider.priority is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleActions) || (has(self.initProvider) && has(self.initProvider.ruleActions))",message="spec.forProvider.ruleActions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleConditions) || (has(self.initProvider) && has(self.initProvider.ruleConditions))",message="spec.forProvider.ruleConditions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleName) || (has(self.initProvider) && has(self.initProvider.ruleName))",message="spec.forProvider.ruleName is a required parameter"
	Spec   RuleSpec   `json:"spec"`
	Status RuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RuleList contains a list of Rules
type RuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Rule `json:"items"`
}

// Repository type metadata.
var (
	Rule_Kind             = "Rule"
	Rule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Rule_Kind}.String()
	Rule_KindAPIVersion   = Rule_Kind + "." + CRDGroupVersion.String()
	Rule_GroupVersionKind = CRDGroupVersion.WithKind(Rule_Kind)
)

func init() {
	SchemeBuilder.Register(&Rule{}, &RuleList{})
}
