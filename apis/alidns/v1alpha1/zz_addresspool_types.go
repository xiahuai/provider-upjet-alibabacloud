// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AddressInitParameters struct {

	// The address that you want to add to the address pool.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// The source region of the address. expressed as a JSON string. The structure is as follows:
	AttributeInfo *string `json:"attributeInfo,omitempty" tf:"attribute_info,omitempty"`

	// The weight of the address. NOTE: The attribute is valid when the attribute lba_strategy is RATIO.
	LbaWeight *float64 `json:"lbaWeight,omitempty" tf:"lba_weight,omitempty"`

	// The type of the address. Valid values:SMART, ONLINE and OFFLINE.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The description of the address.
	Remark *string `json:"remark,omitempty" tf:"remark,omitempty"`
}

type AddressObservation struct {

	// The address that you want to add to the address pool.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// The source region of the address. expressed as a JSON string. The structure is as follows:
	AttributeInfo *string `json:"attributeInfo,omitempty" tf:"attribute_info,omitempty"`

	// The weight of the address. NOTE: The attribute is valid when the attribute lba_strategy is RATIO.
	LbaWeight *float64 `json:"lbaWeight,omitempty" tf:"lba_weight,omitempty"`

	// The type of the address. Valid values:SMART, ONLINE and OFFLINE.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The description of the address.
	Remark *string `json:"remark,omitempty" tf:"remark,omitempty"`
}

type AddressParameters struct {

	// The address that you want to add to the address pool.
	// +kubebuilder:validation:Optional
	Address *string `json:"address" tf:"address,omitempty"`

	// The source region of the address. expressed as a JSON string. The structure is as follows:
	// +kubebuilder:validation:Optional
	AttributeInfo *string `json:"attributeInfo" tf:"attribute_info,omitempty"`

	// The weight of the address. NOTE: The attribute is valid when the attribute lba_strategy is RATIO.
	// +kubebuilder:validation:Optional
	LbaWeight *float64 `json:"lbaWeight,omitempty" tf:"lba_weight,omitempty"`

	// The type of the address. Valid values:SMART, ONLINE and OFFLINE.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`

	// The description of the address.
	// +kubebuilder:validation:Optional
	Remark *string `json:"remark,omitempty" tf:"remark,omitempty"`
}

type AddressPoolInitParameters struct {

	// The address lists of the Address Pool. See address below for details.
	Address []AddressInitParameters `json:"address,omitempty" tf:"address,omitempty"`

	// The name of the address pool.
	AddressPoolName *string `json:"addressPoolName,omitempty" tf:"address_pool_name,omitempty"`

	// The ID of the instance.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alidns/v1alpha1.GtmInstance
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a GtmInstance in alidns to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a GtmInstance in alidns to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The load balancing policy of the address pool. Valid values:ALL_RR or RATIO. ALL_RR: returns all addresses. RATIO: returns addresses by weight.
	LbaStrategy *string `json:"lbaStrategy,omitempty" tf:"lba_strategy,omitempty"`

	// The type of the address pool. Valid values: IPV4, IPV6, DOMAIN.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AddressPoolObservation struct {

	// The address lists of the Address Pool. See address below for details.
	Address []AddressObservation `json:"address,omitempty" tf:"address,omitempty"`

	// The name of the address pool.
	AddressPoolName *string `json:"addressPoolName,omitempty" tf:"address_pool_name,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The load balancing policy of the address pool. Valid values:ALL_RR or RATIO. ALL_RR: returns all addresses. RATIO: returns addresses by weight.
	LbaStrategy *string `json:"lbaStrategy,omitempty" tf:"lba_strategy,omitempty"`

	// The type of the address pool. Valid values: IPV4, IPV6, DOMAIN.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AddressPoolParameters struct {

	// The address lists of the Address Pool. See address below for details.
	// +kubebuilder:validation:Optional
	Address []AddressParameters `json:"address,omitempty" tf:"address,omitempty"`

	// The name of the address pool.
	// +kubebuilder:validation:Optional
	AddressPoolName *string `json:"addressPoolName,omitempty" tf:"address_pool_name,omitempty"`

	// The ID of the instance.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alidns/v1alpha1.GtmInstance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a GtmInstance in alidns to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a GtmInstance in alidns to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The load balancing policy of the address pool. Valid values:ALL_RR or RATIO. ALL_RR: returns all addresses. RATIO: returns addresses by weight.
	// +kubebuilder:validation:Optional
	LbaStrategy *string `json:"lbaStrategy,omitempty" tf:"lba_strategy,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The type of the address pool. Valid values: IPV4, IPV6, DOMAIN.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// AddressPoolSpec defines the desired state of AddressPool
type AddressPoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AddressPoolParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AddressPoolInitParameters `json:"initProvider,omitempty"`
}

// AddressPoolStatus defines the observed state of AddressPool.
type AddressPoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AddressPoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AddressPool is the Schema for the AddressPools API. Provides a Alicloud Alidns Address Pool resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AddressPool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.address) || (has(self.initProvider) && has(self.initProvider.address))",message="spec.forProvider.address is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.addressPoolName) || (has(self.initProvider) && has(self.initProvider.addressPoolName))",message="spec.forProvider.addressPoolName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.lbaStrategy) || (has(self.initProvider) && has(self.initProvider.lbaStrategy))",message="spec.forProvider.lbaStrategy is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   AddressPoolSpec   `json:"spec"`
	Status AddressPoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AddressPoolList contains a list of AddressPools
type AddressPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AddressPool `json:"items"`
}

// Repository type metadata.
var (
	AddressPool_Kind             = "AddressPool"
	AddressPool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AddressPool_Kind}.String()
	AddressPool_KindAPIVersion   = AddressPool_Kind + "." + CRDGroupVersion.String()
	AddressPool_GroupVersionKind = CRDGroupVersion.WithKind(AddressPool_Kind)
)

func init() {
	SchemeBuilder.Register(&AddressPool{}, &AddressPoolList{})
}
