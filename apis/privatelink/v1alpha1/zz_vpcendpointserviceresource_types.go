// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VpcEndpointServiceResourceInitParameters struct {

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The service resource ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.LoadBalancer
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a LoadBalancer in alb to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a LoadBalancer in alb to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// Service resource type, value:
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The endpoint service ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/privatelink/v1alpha1.VPCEndpointService
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// Reference to a VPCEndpointService in privatelink to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDRef *v1.Reference `json:"serviceIdRef,omitempty" tf:"-"`

	// Selector for a VPCEndpointService in privatelink to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDSelector *v1.Selector `json:"serviceIdSelector,omitempty" tf:"-"`

	// The ID of the zone to which the service resource belongs. (valid when the resource type is nlb/alb).
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type VpcEndpointServiceResourceObservation struct {

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The ID of the resource supplied above.The value is formulated as <service_id>:<resource_id>:<zone_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Available since v1.235.0) The ID of the region where the service resource is deployed.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// The service resource ID.
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Service resource type, value:
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The endpoint service ID.
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// The ID of the zone to which the service resource belongs. (valid when the resource type is nlb/alb).
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type VpcEndpointServiceResourceParameters struct {

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The service resource ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.LoadBalancer
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a LoadBalancer in alb to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a LoadBalancer in alb to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// Service resource type, value:
	// +kubebuilder:validation:Optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// The endpoint service ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/privatelink/v1alpha1.VPCEndpointService
	// +kubebuilder:validation:Optional
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// Reference to a VPCEndpointService in privatelink to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDRef *v1.Reference `json:"serviceIdRef,omitempty" tf:"-"`

	// Selector for a VPCEndpointService in privatelink to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDSelector *v1.Selector `json:"serviceIdSelector,omitempty" tf:"-"`

	// The ID of the zone to which the service resource belongs. (valid when the resource type is nlb/alb).
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// VpcEndpointServiceResourceSpec defines the desired state of VpcEndpointServiceResource
type VpcEndpointServiceResourceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VpcEndpointServiceResourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VpcEndpointServiceResourceInitParameters `json:"initProvider,omitempty"`
}

// VpcEndpointServiceResourceStatus defines the observed state of VpcEndpointServiceResource.
type VpcEndpointServiceResourceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VpcEndpointServiceResourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VpcEndpointServiceResource is the Schema for the VpcEndpointServiceResources API. Provides a Alicloud Private Link Vpc Endpoint Service Resource resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type VpcEndpointServiceResource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceType) || (has(self.initProvider) && has(self.initProvider.resourceType))",message="spec.forProvider.resourceType is a required parameter"
	Spec   VpcEndpointServiceResourceSpec   `json:"spec"`
	Status VpcEndpointServiceResourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VpcEndpointServiceResourceList contains a list of VpcEndpointServiceResources
type VpcEndpointServiceResourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VpcEndpointServiceResource `json:"items"`
}

// Repository type metadata.
var (
	VpcEndpointServiceResource_Kind             = "VpcEndpointServiceResource"
	VpcEndpointServiceResource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VpcEndpointServiceResource_Kind}.String()
	VpcEndpointServiceResource_KindAPIVersion   = VpcEndpointServiceResource_Kind + "." + CRDGroupVersion.String()
	VpcEndpointServiceResource_GroupVersionKind = CRDGroupVersion.WithKind(VpcEndpointServiceResource_Kind)
)

func init() {
	SchemeBuilder.Register(&VpcEndpointServiceResource{}, &VpcEndpointServiceResourceList{})
}
