// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccelerationInfoInitParameters struct {
}

type AccelerationInfoObservation struct {

	// Image Acceleration Status (Deprecated)
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type AccelerationInfoParameters struct {
}

type CodeInitParameters struct {

	// The CRC-64 value of the function code package.
	Checksum *string `json:"checksum,omitempty" tf:"checksum,omitempty"`

	// The name of the OSS Bucket that stores the function code ZIP package.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	OssBucketName *string `json:"ossBucketName,omitempty" tf:"oss_bucket_name,omitempty"`

	// Reference to a Bucket in oss to populate ossBucketName.
	// +kubebuilder:validation:Optional
	OssBucketNameRef *v1.Reference `json:"ossBucketNameRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate ossBucketName.
	// +kubebuilder:validation:Optional
	OssBucketNameSelector *v1.Selector `json:"ossBucketNameSelector,omitempty" tf:"-"`

	// The name of the OSS Object that stores the function code ZIP package.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.BucketObject
	OssObjectName *string `json:"ossObjectName,omitempty" tf:"oss_object_name,omitempty"`

	// Reference to a BucketObject in oss to populate ossObjectName.
	// +kubebuilder:validation:Optional
	OssObjectNameRef *v1.Reference `json:"ossObjectNameRef,omitempty" tf:"-"`

	// Selector for a BucketObject in oss to populate ossObjectName.
	// +kubebuilder:validation:Optional
	OssObjectNameSelector *v1.Selector `json:"ossObjectNameSelector,omitempty" tf:"-"`

	// The Base 64 encoding of the function code ZIP package.
	ZipFile *string `json:"zipFile,omitempty" tf:"zip_file,omitempty"`
}

type CodeObservation struct {

	// The CRC-64 value of the function code package.
	Checksum *string `json:"checksum,omitempty" tf:"checksum,omitempty"`

	// The name of the OSS Bucket that stores the function code ZIP package.
	OssBucketName *string `json:"ossBucketName,omitempty" tf:"oss_bucket_name,omitempty"`

	// The name of the OSS Object that stores the function code ZIP package.
	OssObjectName *string `json:"ossObjectName,omitempty" tf:"oss_object_name,omitempty"`

	// The Base 64 encoding of the function code ZIP package.
	ZipFile *string `json:"zipFile,omitempty" tf:"zip_file,omitempty"`
}

type CodeParameters struct {

	// The CRC-64 value of the function code package.
	// +kubebuilder:validation:Optional
	Checksum *string `json:"checksum,omitempty" tf:"checksum,omitempty"`

	// The name of the OSS Bucket that stores the function code ZIP package.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	// +kubebuilder:validation:Optional
	OssBucketName *string `json:"ossBucketName,omitempty" tf:"oss_bucket_name,omitempty"`

	// Reference to a Bucket in oss to populate ossBucketName.
	// +kubebuilder:validation:Optional
	OssBucketNameRef *v1.Reference `json:"ossBucketNameRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate ossBucketName.
	// +kubebuilder:validation:Optional
	OssBucketNameSelector *v1.Selector `json:"ossBucketNameSelector,omitempty" tf:"-"`

	// The name of the OSS Object that stores the function code ZIP package.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.BucketObject
	// +kubebuilder:validation:Optional
	OssObjectName *string `json:"ossObjectName,omitempty" tf:"oss_object_name,omitempty"`

	// Reference to a BucketObject in oss to populate ossObjectName.
	// +kubebuilder:validation:Optional
	OssObjectNameRef *v1.Reference `json:"ossObjectNameRef,omitempty" tf:"-"`

	// Selector for a BucketObject in oss to populate ossObjectName.
	// +kubebuilder:validation:Optional
	OssObjectNameSelector *v1.Selector `json:"ossObjectNameSelector,omitempty" tf:"-"`

	// The Base 64 encoding of the function code ZIP package.
	// +kubebuilder:validation:Optional
	ZipFile *string `json:"zipFile,omitempty" tf:"zip_file,omitempty"`
}

type CustomContainerConfigInitParameters struct {

	// Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
	AccelerationType *string `json:"accelerationType,omitempty" tf:"acceleration_type,omitempty"`

	// ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
	AcrInstanceID *string `json:"acrInstanceId,omitempty" tf:"acr_instance_id,omitempty"`

	// Container startup parameters.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// Container start command.
	Entrypoint []*string `json:"entrypoint,omitempty" tf:"entrypoint,omitempty"`

	// Function custom health check configuration See health_check_config below.
	HealthCheckConfig []HealthCheckConfigInitParameters `json:"healthCheckConfig,omitempty" tf:"health_check_config,omitempty"`

	// The container Image address.
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// The listening port of the HTTP Server when the custom container runs.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type CustomContainerConfigObservation struct {

	// (Deprecated since v1.242.0) Image Acceleration Information (Obsolete)
	AccelerationInfo []AccelerationInfoObservation `json:"accelerationInfo,omitempty" tf:"acceleration_info,omitempty"`

	// Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
	AccelerationType *string `json:"accelerationType,omitempty" tf:"acceleration_type,omitempty"`

	// ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
	AcrInstanceID *string `json:"acrInstanceId,omitempty" tf:"acr_instance_id,omitempty"`

	// Container startup parameters.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// Container start command.
	Entrypoint []*string `json:"entrypoint,omitempty" tf:"entrypoint,omitempty"`

	// Function custom health check configuration See health_check_config below.
	HealthCheckConfig []HealthCheckConfigObservation `json:"healthCheckConfig,omitempty" tf:"health_check_config,omitempty"`

	// The container Image address.
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// The listening port of the HTTP Server when the custom container runs.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The actual digest version of the deployed Image. The code version specified by this digest is used when the function starts.
	ResolvedImageURI *string `json:"resolvedImageUri,omitempty" tf:"resolved_image_uri,omitempty"`
}

type CustomContainerConfigParameters struct {

	// Whether to enable Image acceleration. Default: The Default value, indicating that image acceleration is enabled. None: indicates that image acceleration is disabled. (Obsolete)
	// +kubebuilder:validation:Optional
	AccelerationType *string `json:"accelerationType,omitempty" tf:"acceleration_type,omitempty"`

	// ACR Enterprise version Image Repository ID, which must be entered when using ACR Enterprise version image. (Obsolete)
	// +kubebuilder:validation:Optional
	AcrInstanceID *string `json:"acrInstanceId,omitempty" tf:"acr_instance_id,omitempty"`

	// Container startup parameters.
	// +kubebuilder:validation:Optional
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// Container start command.
	// +kubebuilder:validation:Optional
	Entrypoint []*string `json:"entrypoint,omitempty" tf:"entrypoint,omitempty"`

	// Function custom health check configuration See health_check_config below.
	// +kubebuilder:validation:Optional
	HealthCheckConfig []HealthCheckConfigParameters `json:"healthCheckConfig,omitempty" tf:"health_check_config,omitempty"`

	// The container Image address.
	// +kubebuilder:validation:Optional
	Image *string `json:"image,omitempty" tf:"image,omitempty"`

	// The listening port of the HTTP Server when the custom container runs.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type CustomDNSInitParameters struct {

	// List of configuration items in the resolv.conf file. Each item corresponds to a key-value pair in the format of key:value, where the key is required. See dns_options below.
	DNSOptions []DNSOptionsInitParameters `json:"dnsOptions,omitempty" tf:"dns_options,omitempty"`

	// IP Address List of DNS servers
	NameServers []*string `json:"nameServers,omitempty" tf:"name_servers,omitempty"`

	// DNS search domain list
	Searches []*string `json:"searches,omitempty" tf:"searches,omitempty"`
}

type CustomDNSObservation struct {

	// List of configuration items in the resolv.conf file. Each item corresponds to a key-value pair in the format of key:value, where the key is required. See dns_options below.
	DNSOptions []DNSOptionsObservation `json:"dnsOptions,omitempty" tf:"dns_options,omitempty"`

	// IP Address List of DNS servers
	NameServers []*string `json:"nameServers,omitempty" tf:"name_servers,omitempty"`

	// DNS search domain list
	Searches []*string `json:"searches,omitempty" tf:"searches,omitempty"`
}

type CustomDNSParameters struct {

	// List of configuration items in the resolv.conf file. Each item corresponds to a key-value pair in the format of key:value, where the key is required. See dns_options below.
	// +kubebuilder:validation:Optional
	DNSOptions []DNSOptionsParameters `json:"dnsOptions,omitempty" tf:"dns_options,omitempty"`

	// IP Address List of DNS servers
	// +kubebuilder:validation:Optional
	NameServers []*string `json:"nameServers,omitempty" tf:"name_servers,omitempty"`

	// DNS search domain list
	// +kubebuilder:validation:Optional
	Searches []*string `json:"searches,omitempty" tf:"searches,omitempty"`
}

type CustomRuntimeConfigHealthCheckConfigInitParameters struct {

	// The health check failure threshold. The system considers the health check failure when the health check fails. The value range is 1~120. The default value is 3.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The URL of the container's custom health check.
	HTTPGetURL *string `json:"httpGetUrl,omitempty" tf:"http_get_url,omitempty"`

	// The delay between the start of the container and the initiation of the health check. Value range 0~120. The default value is 0.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// Health check cycle. The value range is 1~120. The default value is 3.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The threshold for the number of successful health checks. When the threshold is reached, the system considers that the health check is successful. The value range is 1~120. The default value is 1.
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// Health check timeout. Value range 1~3. The default value is 1.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type CustomRuntimeConfigHealthCheckConfigObservation struct {

	// The health check failure threshold. The system considers the health check failure when the health check fails. The value range is 1~120. The default value is 3.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The URL of the container's custom health check.
	HTTPGetURL *string `json:"httpGetUrl,omitempty" tf:"http_get_url,omitempty"`

	// The delay between the start of the container and the initiation of the health check. Value range 0~120. The default value is 0.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// Health check cycle. The value range is 1~120. The default value is 3.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The threshold for the number of successful health checks. When the threshold is reached, the system considers that the health check is successful. The value range is 1~120. The default value is 1.
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// Health check timeout. Value range 1~3. The default value is 1.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type CustomRuntimeConfigHealthCheckConfigParameters struct {

	// The health check failure threshold. The system considers the health check failure when the health check fails. The value range is 1~120. The default value is 3.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The URL of the container's custom health check.
	// +kubebuilder:validation:Optional
	HTTPGetURL *string `json:"httpGetUrl,omitempty" tf:"http_get_url,omitempty"`

	// The delay between the start of the container and the initiation of the health check. Value range 0~120. The default value is 0.
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// Health check cycle. The value range is 1~120. The default value is 3.
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The threshold for the number of successful health checks. When the threshold is reached, the system considers that the health check is successful. The value range is 1~120. The default value is 1.
	// +kubebuilder:validation:Optional
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// Health check timeout. Value range 1~3. The default value is 1.
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type CustomRuntimeConfigInitParameters struct {

	// Instance startup parameters.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Instance start command.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// Function custom health check configuration. See health_check_config below.
	HealthCheckConfig []CustomRuntimeConfigHealthCheckConfigInitParameters `json:"healthCheckConfig,omitempty" tf:"health_check_config,omitempty"`

	// The listening port of the HTTP Server.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type CustomRuntimeConfigObservation struct {

	// Instance startup parameters.
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Instance start command.
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// Function custom health check configuration. See health_check_config below.
	HealthCheckConfig []CustomRuntimeConfigHealthCheckConfigObservation `json:"healthCheckConfig,omitempty" tf:"health_check_config,omitempty"`

	// The listening port of the HTTP Server.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type CustomRuntimeConfigParameters struct {

	// Instance startup parameters.
	// +kubebuilder:validation:Optional
	Args []*string `json:"args,omitempty" tf:"args,omitempty"`

	// Instance start command.
	// +kubebuilder:validation:Optional
	Command []*string `json:"command,omitempty" tf:"command,omitempty"`

	// Function custom health check configuration. See health_check_config below.
	// +kubebuilder:validation:Optional
	HealthCheckConfig []CustomRuntimeConfigHealthCheckConfigParameters `json:"healthCheckConfig,omitempty" tf:"health_check_config,omitempty"`

	// The listening port of the HTTP Server.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type DNSOptionsInitParameters struct {

	// Configuration Item Name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Configuration Item Value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DNSOptionsObservation struct {

	// Configuration Item Name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Configuration Item Value
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DNSOptionsParameters struct {

	// Configuration Item Name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Configuration Item Value
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type FunctionInitParameters struct {

	// The CPU specification of the function. The unit is vCPU, which is a multiple of the 0.05 vCPU.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Function code ZIP package. code and customContainerConfig. See code below.
	Code []CodeInitParameters `json:"code,omitempty" tf:"code,omitempty"`

	// The configuration of the custom container runtime. After the configuration is successful, the function can use the custom container image to execute the function. code and customContainerConfig. See custom_container_config below.
	CustomContainerConfig []CustomContainerConfigInitParameters `json:"customContainerConfig,omitempty" tf:"custom_container_config,omitempty"`

	// Function custom DNS configuration See custom_dns below.
	CustomDNS []CustomDNSInitParameters `json:"customDns,omitempty" tf:"custom_dns,omitempty"`

	// Customize the runtime configuration. See custom_runtime_config below.
	CustomRuntimeConfig []CustomRuntimeConfigInitParameters `json:"customRuntimeConfig,omitempty" tf:"custom_runtime_config,omitempty"`

	// The description of the function. The function compute system does not use this attribute value, but we recommend that you set a concise and clear description for the function.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The disk specification of the function, in MB. The optional value is 512 MB or 10240MB.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// The environment variable set for the function, you can get the value of the environment variable in the function.
	// +mapType=granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// The function name. Consists of uppercase and lowercase letters, digits (0 to 9), underscores (), and dashes (-). It must begin with an English letter (a ~ z), (A ~ Z), or an underscore (). Case sensitive. The length is 1~128 characters.
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Function GPU configuration. See gpu_config below.
	GpuConfig []GpuConfigInitParameters `json:"gpuConfig,omitempty" tf:"gpu_config,omitempty"`

	// Function Handler: the call entry for the function compute system to run your function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// Maximum instance concurrency.
	InstanceConcurrency *float64 `json:"instanceConcurrency,omitempty" tf:"instance_concurrency,omitempty"`

	// Instance isolation mode
	InstanceIsolationMode *string `json:"instanceIsolationMode,omitempty" tf:"instance_isolation_mode,omitempty"`

	// Instance lifecycle callback method configuration. See instance_lifecycle_config below.
	InstanceLifecycleConfig []InstanceLifecycleConfigInitParameters `json:"instanceLifecycleConfig,omitempty" tf:"instance_lifecycle_config,omitempty"`

	// Allow function to access public network
	InternetAccess *bool `json:"internetAccess,omitempty" tf:"internet_access,omitempty"`

	// Invocation Restriction Detail See invocation_restriction below.
	InvocationRestriction []InvocationRestrictionInitParameters `json:"invocationRestriction,omitempty" tf:"invocation_restriction,omitempty"`

	// References to LayerVersion in fcv3 to populate layers.
	// +kubebuilder:validation:Optional
	LayerRefs []v1.Reference `json:"layerRefs,omitempty" tf:"-"`

	// Selector for a list of LayerVersion in fcv3 to populate layers.
	// +kubebuilder:validation:Optional
	LayerSelector *v1.Selector `json:"layerSelector,omitempty" tf:"-"`

	// The list of layers.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.LayerVersion
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.Fcv3LayerVersionArnExtractor()
	// +crossplane:generate:reference:refFieldName=LayerRefs
	// +crossplane:generate:reference:selectorFieldName=LayerSelector
	Layers []*string `json:"layers,omitempty" tf:"layers,omitempty"`

	// The logs generated by the function are written to the configured Logstore. See log_config below.
	LogConfig []LogConfigInitParameters `json:"logConfig,omitempty" tf:"log_config,omitempty"`

	// The memory specification of the function. The unit is MB. The memory size is a multiple of 64MB. The minimum value is 128MB and the maximum value is 32GB. At the same time, the ratio of cpu to memorySize (calculated by GB) should be between 1:1 and 1:4.
	MemorySize *float64 `json:"memorySize,omitempty" tf:"memory_size,omitempty"`

	// NAS configuration. After this parameter is configured, the function can access the specified NAS resource. See nas_config below.
	NasConfig []NasConfigInitParameters `json:"nasConfig,omitempty" tf:"nas_config,omitempty"`

	// OSS mount configuration See oss_mount_config below.
	OssMountConfig []OssMountConfigInitParameters `json:"ossMountConfig,omitempty" tf:"oss_mount_config,omitempty"`

	// The user is authorized to the RAM role of function compute. After the configuration, function compute will assume this role to generate temporary access credentials. In the function, you can use the temporary access credentials of the role to access the specified Alibaba cloud service, such as OSS and OTS
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// Reference to a Role in ram to populate role.
	// +kubebuilder:validation:Optional
	RoleRef *v1.Reference `json:"roleRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate role.
	// +kubebuilder:validation:Optional
	RoleSelector *v1.Selector `json:"roleSelector,omitempty" tf:"-"`

	// Function runtime type
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// The affinity policy of the function compute call request. To implement the request affinity of the MCP SSE protocol, set it to MCP_SSE. If Cookie affinity is used, it can be set to GENERATED_COOKIE. If Header affinity is used, it can be set to HEADER_FIELD. If it is not set or set to NONE, the affinity effect is not set, and the request is routed according to the default scheduling policy of the function calculation system.
	SessionAffinity *string `json:"sessionAffinity,omitempty" tf:"session_affinity,omitempty"`

	// When you set the sessionAffinity affinity type, you need to set the relevant affinity configuration. For example, the MCP_SSE affinity needs to fill in the mcpssessionaffinityconfig configuration. The Cookie affinity needs to be filled with the CookieSessionAffinityConfig configuration, and the Header Field affinity needs to be filled with the HeaderFieldSessionAffinityConfig configuration.
	SessionAffinityConfig *string `json:"sessionAffinityConfig,omitempty" tf:"session_affinity_config,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The maximum running time of the function, in seconds.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// VPC configuration. After this parameter is configured, the function can access the specified VPC resources. See vpc_config below.
	VPCConfig []VPCConfigInitParameters `json:"vpcConfig,omitempty" tf:"vpc_config,omitempty"`
}

type FunctionObservation struct {

	// The CPU specification of the function. The unit is vCPU, which is a multiple of the 0.05 vCPU.
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Function code ZIP package. code and customContainerConfig. See code below.
	Code []CodeObservation `json:"code,omitempty" tf:"code,omitempty"`

	// The code package size of the function returned by the system, in byte Example : 1024
	CodeSize *float64 `json:"codeSize,omitempty" tf:"code_size,omitempty"`

	// The creation time of the function.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The configuration of the custom container runtime. After the configuration is successful, the function can use the custom container image to execute the function. code and customContainerConfig. See custom_container_config below.
	CustomContainerConfig []CustomContainerConfigObservation `json:"customContainerConfig,omitempty" tf:"custom_container_config,omitempty"`

	// Function custom DNS configuration See custom_dns below.
	CustomDNS []CustomDNSObservation `json:"customDns,omitempty" tf:"custom_dns,omitempty"`

	// Customize the runtime configuration. See custom_runtime_config below.
	CustomRuntimeConfig []CustomRuntimeConfigObservation `json:"customRuntimeConfig,omitempty" tf:"custom_runtime_config,omitempty"`

	// The description of the function. The function compute system does not use this attribute value, but we recommend that you set a concise and clear description for the function.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The disk specification of the function, in MB. The optional value is 512 MB or 10240MB.
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// The environment variable set for the function, you can get the value of the environment variable in the function.
	// +mapType=granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// ARN of function
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// The first ID of the resource
	FunctionID *string `json:"functionId,omitempty" tf:"function_id,omitempty"`

	// The function name. Consists of uppercase and lowercase letters, digits (0 to 9), underscores (), and dashes (-). It must begin with an English letter (a ~ z), (A ~ Z), or an underscore (). Case sensitive. The length is 1~128 characters.
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Function GPU configuration. See gpu_config below.
	GpuConfig []GpuConfigObservation `json:"gpuConfig,omitempty" tf:"gpu_config,omitempty"`

	// Function Handler: the call entry for the function compute system to run your function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Maximum instance concurrency.
	InstanceConcurrency *float64 `json:"instanceConcurrency,omitempty" tf:"instance_concurrency,omitempty"`

	// Instance isolation mode
	InstanceIsolationMode *string `json:"instanceIsolationMode,omitempty" tf:"instance_isolation_mode,omitempty"`

	// Instance lifecycle callback method configuration. See instance_lifecycle_config below.
	InstanceLifecycleConfig []InstanceLifecycleConfigObservation `json:"instanceLifecycleConfig,omitempty" tf:"instance_lifecycle_config,omitempty"`

	// Allow function to access public network
	InternetAccess *bool `json:"internetAccess,omitempty" tf:"internet_access,omitempty"`

	// Invocation Restriction Detail See invocation_restriction below.
	InvocationRestriction []InvocationRestrictionObservation `json:"invocationRestriction,omitempty" tf:"invocation_restriction,omitempty"`

	// Last modified time of invocation restriction
	LastModifiedTime *string `json:"lastModifiedTime,omitempty" tf:"last_modified_time,omitempty"`

	// The status of the last function update operation. When the function is created successfully, the value is Successful. Optional values are Successful, Failed, and InProgress.
	LastUpdateStatus *string `json:"lastUpdateStatus,omitempty" tf:"last_update_status,omitempty"`

	// The reason that caused the last function to update the Operation State to the current value
	LastUpdateStatusReason *string `json:"lastUpdateStatusReason,omitempty" tf:"last_update_status_reason,omitempty"`

	// Status code of the reason that caused the last function update operation status to the current value
	LastUpdateStatusReasonCode *string `json:"lastUpdateStatusReasonCode,omitempty" tf:"last_update_status_reason_code,omitempty"`

	// The list of layers.
	Layers []*string `json:"layers,omitempty" tf:"layers,omitempty"`

	// The logs generated by the function are written to the configured Logstore. See log_config below.
	LogConfig []LogConfigObservation `json:"logConfig,omitempty" tf:"log_config,omitempty"`

	// The memory specification of the function. The unit is MB. The memory size is a multiple of 64MB. The minimum value is 128MB and the maximum value is 32GB. At the same time, the ratio of cpu to memorySize (calculated by GB) should be between 1:1 and 1:4.
	MemorySize *float64 `json:"memorySize,omitempty" tf:"memory_size,omitempty"`

	// NAS configuration. After this parameter is configured, the function can access the specified NAS resource. See nas_config below.
	NasConfig []NasConfigObservation `json:"nasConfig,omitempty" tf:"nas_config,omitempty"`

	// OSS mount configuration See oss_mount_config below.
	OssMountConfig []OssMountConfigObservation `json:"ossMountConfig,omitempty" tf:"oss_mount_config,omitempty"`

	// The user is authorized to the RAM role of function compute. After the configuration, function compute will assume this role to generate temporary access credentials. In the function, you can use the temporary access credentials of the role to access the specified Alibaba cloud service, such as OSS and OTS
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// Function runtime type
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// The affinity policy of the function compute call request. To implement the request affinity of the MCP SSE protocol, set it to MCP_SSE. If Cookie affinity is used, it can be set to GENERATED_COOKIE. If Header affinity is used, it can be set to HEADER_FIELD. If it is not set or set to NONE, the affinity effect is not set, and the request is routed according to the default scheduling policy of the function calculation system.
	SessionAffinity *string `json:"sessionAffinity,omitempty" tf:"session_affinity,omitempty"`

	// When you set the sessionAffinity affinity type, you need to set the relevant affinity configuration. For example, the MCP_SSE affinity needs to fill in the mcpssessionaffinityconfig configuration. The Cookie affinity needs to be filled with the CookieSessionAffinityConfig configuration, and the Header Field affinity needs to be filled with the HeaderFieldSessionAffinityConfig configuration.
	SessionAffinityConfig *string `json:"sessionAffinityConfig,omitempty" tf:"session_affinity_config,omitempty"`

	// Function Status
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The reason why the function is in the current state
	StateReason *string `json:"stateReason,omitempty" tf:"state_reason,omitempty"`

	// The status code of the reason the function is in the current state.
	StateReasonCode *string `json:"stateReasonCode,omitempty" tf:"state_reason_code,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The maximum running time of the function, in seconds.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// Tracing configuration
	TracingConfig []TracingConfigObservation `json:"tracingConfig,omitempty" tf:"tracing_config,omitempty"`

	// VPC configuration. After this parameter is configured, the function can access the specified VPC resources. See vpc_config below.
	VPCConfig []VPCConfigObservation `json:"vpcConfig,omitempty" tf:"vpc_config,omitempty"`
}

type FunctionParameters struct {

	// The CPU specification of the function. The unit is vCPU, which is a multiple of the 0.05 vCPU.
	// +kubebuilder:validation:Optional
	CPU *float64 `json:"cpu,omitempty" tf:"cpu,omitempty"`

	// Function code ZIP package. code and customContainerConfig. See code below.
	// +kubebuilder:validation:Optional
	Code []CodeParameters `json:"code,omitempty" tf:"code,omitempty"`

	// The configuration of the custom container runtime. After the configuration is successful, the function can use the custom container image to execute the function. code and customContainerConfig. See custom_container_config below.
	// +kubebuilder:validation:Optional
	CustomContainerConfig []CustomContainerConfigParameters `json:"customContainerConfig,omitempty" tf:"custom_container_config,omitempty"`

	// Function custom DNS configuration See custom_dns below.
	// +kubebuilder:validation:Optional
	CustomDNS []CustomDNSParameters `json:"customDns,omitempty" tf:"custom_dns,omitempty"`

	// Customize the runtime configuration. See custom_runtime_config below.
	// +kubebuilder:validation:Optional
	CustomRuntimeConfig []CustomRuntimeConfigParameters `json:"customRuntimeConfig,omitempty" tf:"custom_runtime_config,omitempty"`

	// The description of the function. The function compute system does not use this attribute value, but we recommend that you set a concise and clear description for the function.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The disk specification of the function, in MB. The optional value is 512 MB or 10240MB.
	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// The environment variable set for the function, you can get the value of the environment variable in the function.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	EnvironmentVariables map[string]*string `json:"environmentVariables,omitempty" tf:"environment_variables,omitempty"`

	// The function name. Consists of uppercase and lowercase letters, digits (0 to 9), underscores (), and dashes (-). It must begin with an English letter (a ~ z), (A ~ Z), or an underscore (). Case sensitive. The length is 1~128 characters.
	// +kubebuilder:validation:Optional
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Function GPU configuration. See gpu_config below.
	// +kubebuilder:validation:Optional
	GpuConfig []GpuConfigParameters `json:"gpuConfig,omitempty" tf:"gpu_config,omitempty"`

	// Function Handler: the call entry for the function compute system to run your function.
	// +kubebuilder:validation:Optional
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// Maximum instance concurrency.
	// +kubebuilder:validation:Optional
	InstanceConcurrency *float64 `json:"instanceConcurrency,omitempty" tf:"instance_concurrency,omitempty"`

	// Instance isolation mode
	// +kubebuilder:validation:Optional
	InstanceIsolationMode *string `json:"instanceIsolationMode,omitempty" tf:"instance_isolation_mode,omitempty"`

	// Instance lifecycle callback method configuration. See instance_lifecycle_config below.
	// +kubebuilder:validation:Optional
	InstanceLifecycleConfig []InstanceLifecycleConfigParameters `json:"instanceLifecycleConfig,omitempty" tf:"instance_lifecycle_config,omitempty"`

	// Allow function to access public network
	// +kubebuilder:validation:Optional
	InternetAccess *bool `json:"internetAccess,omitempty" tf:"internet_access,omitempty"`

	// Invocation Restriction Detail See invocation_restriction below.
	// +kubebuilder:validation:Optional
	InvocationRestriction []InvocationRestrictionParameters `json:"invocationRestriction,omitempty" tf:"invocation_restriction,omitempty"`

	// References to LayerVersion in fcv3 to populate layers.
	// +kubebuilder:validation:Optional
	LayerRefs []v1.Reference `json:"layerRefs,omitempty" tf:"-"`

	// Selector for a list of LayerVersion in fcv3 to populate layers.
	// +kubebuilder:validation:Optional
	LayerSelector *v1.Selector `json:"layerSelector,omitempty" tf:"-"`

	// The list of layers.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.LayerVersion
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.Fcv3LayerVersionArnExtractor()
	// +crossplane:generate:reference:refFieldName=LayerRefs
	// +crossplane:generate:reference:selectorFieldName=LayerSelector
	// +kubebuilder:validation:Optional
	Layers []*string `json:"layers,omitempty" tf:"layers,omitempty"`

	// The logs generated by the function are written to the configured Logstore. See log_config below.
	// +kubebuilder:validation:Optional
	LogConfig []LogConfigParameters `json:"logConfig,omitempty" tf:"log_config,omitempty"`

	// The memory specification of the function. The unit is MB. The memory size is a multiple of 64MB. The minimum value is 128MB and the maximum value is 32GB. At the same time, the ratio of cpu to memorySize (calculated by GB) should be between 1:1 and 1:4.
	// +kubebuilder:validation:Optional
	MemorySize *float64 `json:"memorySize,omitempty" tf:"memory_size,omitempty"`

	// NAS configuration. After this parameter is configured, the function can access the specified NAS resource. See nas_config below.
	// +kubebuilder:validation:Optional
	NasConfig []NasConfigParameters `json:"nasConfig,omitempty" tf:"nas_config,omitempty"`

	// OSS mount configuration See oss_mount_config below.
	// +kubebuilder:validation:Optional
	OssMountConfig []OssMountConfigParameters `json:"ossMountConfig,omitempty" tf:"oss_mount_config,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The user is authorized to the RAM role of function compute. After the configuration, function compute will assume this role to generate temporary access credentials. In the function, you can use the temporary access credentials of the role to access the specified Alibaba cloud service, such as OSS and OTS
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +kubebuilder:validation:Optional
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// Reference to a Role in ram to populate role.
	// +kubebuilder:validation:Optional
	RoleRef *v1.Reference `json:"roleRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate role.
	// +kubebuilder:validation:Optional
	RoleSelector *v1.Selector `json:"roleSelector,omitempty" tf:"-"`

	// Function runtime type
	// +kubebuilder:validation:Optional
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// The affinity policy of the function compute call request. To implement the request affinity of the MCP SSE protocol, set it to MCP_SSE. If Cookie affinity is used, it can be set to GENERATED_COOKIE. If Header affinity is used, it can be set to HEADER_FIELD. If it is not set or set to NONE, the affinity effect is not set, and the request is routed according to the default scheduling policy of the function calculation system.
	// +kubebuilder:validation:Optional
	SessionAffinity *string `json:"sessionAffinity,omitempty" tf:"session_affinity,omitempty"`

	// When you set the sessionAffinity affinity type, you need to set the relevant affinity configuration. For example, the MCP_SSE affinity needs to fill in the mcpssessionaffinityconfig configuration. The Cookie affinity needs to be filled with the CookieSessionAffinityConfig configuration, and the Header Field affinity needs to be filled with the HeaderFieldSessionAffinityConfig configuration.
	// +kubebuilder:validation:Optional
	SessionAffinityConfig *string `json:"sessionAffinityConfig,omitempty" tf:"session_affinity_config,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The maximum running time of the function, in seconds.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// VPC configuration. After this parameter is configured, the function can access the specified VPC resources. See vpc_config below.
	// +kubebuilder:validation:Optional
	VPCConfig []VPCConfigParameters `json:"vpcConfig,omitempty" tf:"vpc_config,omitempty"`
}

type GpuConfigInitParameters struct {

	// GPU memory specification, unit: MB, multiple of 1024MB
	GpuMemorySize *float64 `json:"gpuMemorySize,omitempty" tf:"gpu_memory_size,omitempty"`

	// GPU card architecture.
	GpuType *string `json:"gpuType,omitempty" tf:"gpu_type,omitempty"`
}

type GpuConfigObservation struct {

	// GPU memory specification, unit: MB, multiple of 1024MB
	GpuMemorySize *float64 `json:"gpuMemorySize,omitempty" tf:"gpu_memory_size,omitempty"`

	// GPU card architecture.
	GpuType *string `json:"gpuType,omitempty" tf:"gpu_type,omitempty"`
}

type GpuConfigParameters struct {

	// GPU memory specification, unit: MB, multiple of 1024MB
	// +kubebuilder:validation:Optional
	GpuMemorySize *float64 `json:"gpuMemorySize,omitempty" tf:"gpu_memory_size,omitempty"`

	// GPU card architecture.
	// +kubebuilder:validation:Optional
	GpuType *string `json:"gpuType,omitempty" tf:"gpu_type,omitempty"`
}

type HealthCheckConfigInitParameters struct {

	// The health check failure threshold. The system considers the health check failure when the health check fails. The value range is 1~120. The default value is 3.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The URL of the container's custom health check.
	HTTPGetURL *string `json:"httpGetUrl,omitempty" tf:"http_get_url,omitempty"`

	// The delay between the start of the container and the initiation of the health check. Value range 0~120. The default value is 0.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// Health check cycle. The value range is 1~120. The default value is 3.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The threshold for the number of successful health checks. When the threshold is reached, the system considers that the health check is successful. The value range is 1~120. The default value is 1.
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// Health check timeout. Value range 1~3. The default value is 1.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type HealthCheckConfigObservation struct {

	// The health check failure threshold. The system considers the health check failure when the health check fails. The value range is 1~120. The default value is 3.
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The URL of the container's custom health check.
	HTTPGetURL *string `json:"httpGetUrl,omitempty" tf:"http_get_url,omitempty"`

	// The delay between the start of the container and the initiation of the health check. Value range 0~120. The default value is 0.
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// Health check cycle. The value range is 1~120. The default value is 3.
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The threshold for the number of successful health checks. When the threshold is reached, the system considers that the health check is successful. The value range is 1~120. The default value is 1.
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// Health check timeout. Value range 1~3. The default value is 1.
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type HealthCheckConfigParameters struct {

	// The health check failure threshold. The system considers the health check failure when the health check fails. The value range is 1~120. The default value is 3.
	// +kubebuilder:validation:Optional
	FailureThreshold *float64 `json:"failureThreshold,omitempty" tf:"failure_threshold,omitempty"`

	// The URL of the container's custom health check.
	// +kubebuilder:validation:Optional
	HTTPGetURL *string `json:"httpGetUrl,omitempty" tf:"http_get_url,omitempty"`

	// The delay between the start of the container and the initiation of the health check. Value range 0~120. The default value is 0.
	// +kubebuilder:validation:Optional
	InitialDelaySeconds *float64 `json:"initialDelaySeconds,omitempty" tf:"initial_delay_seconds,omitempty"`

	// Health check cycle. The value range is 1~120. The default value is 3.
	// +kubebuilder:validation:Optional
	PeriodSeconds *float64 `json:"periodSeconds,omitempty" tf:"period_seconds,omitempty"`

	// The threshold for the number of successful health checks. When the threshold is reached, the system considers that the health check is successful. The value range is 1~120. The default value is 1.
	// +kubebuilder:validation:Optional
	SuccessThreshold *float64 `json:"successThreshold,omitempty" tf:"success_threshold,omitempty"`

	// Health check timeout. Value range 1~3. The default value is 1.
	// +kubebuilder:validation:Optional
	TimeoutSeconds *float64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds,omitempty"`
}

type InitializerInitParameters struct {

	// Function Handler: the call entry for the function compute system to run your function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The maximum running time of the function, in seconds.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type InitializerObservation struct {

	// Function Handler: the call entry for the function compute system to run your function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The maximum running time of the function, in seconds.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type InitializerParameters struct {

	// Function Handler: the call entry for the function compute system to run your function.
	// +kubebuilder:validation:Optional
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The maximum running time of the function, in seconds.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type InstanceLifecycleConfigInitParameters struct {

	// Initializer handler method configuration See initializer below.
	Initializer []InitializerInitParameters `json:"initializer,omitempty" tf:"initializer,omitempty"`

	// PreStop handler method configuration See pre_stop below.
	PreStop []PreStopInitParameters `json:"preStop,omitempty" tf:"pre_stop,omitempty"`
}

type InstanceLifecycleConfigObservation struct {

	// Initializer handler method configuration See initializer below.
	Initializer []InitializerObservation `json:"initializer,omitempty" tf:"initializer,omitempty"`

	// PreStop handler method configuration See pre_stop below.
	PreStop []PreStopObservation `json:"preStop,omitempty" tf:"pre_stop,omitempty"`
}

type InstanceLifecycleConfigParameters struct {

	// Initializer handler method configuration See initializer below.
	// +kubebuilder:validation:Optional
	Initializer []InitializerParameters `json:"initializer,omitempty" tf:"initializer,omitempty"`

	// PreStop handler method configuration See pre_stop below.
	// +kubebuilder:validation:Optional
	PreStop []PreStopParameters `json:"preStop,omitempty" tf:"pre_stop,omitempty"`
}

type InvocationRestrictionInitParameters struct {

	// Whether invocation is disabled
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// Disable Reason
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`
}

type InvocationRestrictionObservation struct {

	// Whether invocation is disabled
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// Last modified time of invocation restriction
	LastModifiedTime *string `json:"lastModifiedTime,omitempty" tf:"last_modified_time,omitempty"`

	// Disable Reason
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`
}

type InvocationRestrictionParameters struct {

	// Whether invocation is disabled
	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// Disable Reason
	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`
}

type LogConfigInitParameters struct {

	// After this feature is enabled, you can view core metrics such as instance-level CPU usage, memory usage, instance network status, and the number of requests within an instance. false: The default value, which means that instance-level metrics are turned off. true: indicates that instance-level metrics are enabled.
	EnableInstanceMetrics *bool `json:"enableInstanceMetrics,omitempty" tf:"enable_instance_metrics,omitempty"`

	// After this function is enabled, you can view the time and memory consumed by a call to all functions under this service. false: indicates that request-level metrics are turned off. true: The default value, indicating that request-level metrics are enabled.
	EnableRequestMetrics *bool `json:"enableRequestMetrics,omitempty" tf:"enable_request_metrics,omitempty"`

	// Log Line First Matching Rules
	LogBeginRule *string `json:"logBeginRule,omitempty" tf:"log_begin_rule,omitempty"`

	// The Logstore name of log service.
	Logstore *string `json:"logstore,omitempty" tf:"logstore,omitempty"`

	// The name of the log service Project.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type LogConfigObservation struct {

	// After this feature is enabled, you can view core metrics such as instance-level CPU usage, memory usage, instance network status, and the number of requests within an instance. false: The default value, which means that instance-level metrics are turned off. true: indicates that instance-level metrics are enabled.
	EnableInstanceMetrics *bool `json:"enableInstanceMetrics,omitempty" tf:"enable_instance_metrics,omitempty"`

	// After this function is enabled, you can view the time and memory consumed by a call to all functions under this service. false: indicates that request-level metrics are turned off. true: The default value, indicating that request-level metrics are enabled.
	EnableRequestMetrics *bool `json:"enableRequestMetrics,omitempty" tf:"enable_request_metrics,omitempty"`

	// Log Line First Matching Rules
	LogBeginRule *string `json:"logBeginRule,omitempty" tf:"log_begin_rule,omitempty"`

	// The Logstore name of log service.
	Logstore *string `json:"logstore,omitempty" tf:"logstore,omitempty"`

	// The name of the log service Project.
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type LogConfigParameters struct {

	// After this feature is enabled, you can view core metrics such as instance-level CPU usage, memory usage, instance network status, and the number of requests within an instance. false: The default value, which means that instance-level metrics are turned off. true: indicates that instance-level metrics are enabled.
	// +kubebuilder:validation:Optional
	EnableInstanceMetrics *bool `json:"enableInstanceMetrics,omitempty" tf:"enable_instance_metrics,omitempty"`

	// After this function is enabled, you can view the time and memory consumed by a call to all functions under this service. false: indicates that request-level metrics are turned off. true: The default value, indicating that request-level metrics are enabled.
	// +kubebuilder:validation:Optional
	EnableRequestMetrics *bool `json:"enableRequestMetrics,omitempty" tf:"enable_request_metrics,omitempty"`

	// Log Line First Matching Rules
	// +kubebuilder:validation:Optional
	LogBeginRule *string `json:"logBeginRule,omitempty" tf:"log_begin_rule,omitempty"`

	// The Logstore name of log service.
	// +kubebuilder:validation:Optional
	Logstore *string `json:"logstore,omitempty" tf:"logstore,omitempty"`

	// The name of the log service Project.
	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type MountPointsInitParameters struct {

	// Use transport encryption to mount. Note: only general-purpose NAS supports transmission encryption.
	EnableTLS *bool `json:"enableTls,omitempty" tf:"enable_tls,omitempty"`

	// Local Mount Directory
	MountDir *string `json:"mountDir,omitempty" tf:"mount_dir,omitempty"`

	// NAS server address
	ServerAddr *string `json:"serverAddr,omitempty" tf:"server_addr,omitempty"`
}

type MountPointsObservation struct {

	// Use transport encryption to mount. Note: only general-purpose NAS supports transmission encryption.
	EnableTLS *bool `json:"enableTls,omitempty" tf:"enable_tls,omitempty"`

	// Local Mount Directory
	MountDir *string `json:"mountDir,omitempty" tf:"mount_dir,omitempty"`

	// NAS server address
	ServerAddr *string `json:"serverAddr,omitempty" tf:"server_addr,omitempty"`
}

type MountPointsParameters struct {

	// Use transport encryption to mount. Note: only general-purpose NAS supports transmission encryption.
	// +kubebuilder:validation:Optional
	EnableTLS *bool `json:"enableTls,omitempty" tf:"enable_tls,omitempty"`

	// Local Mount Directory
	// +kubebuilder:validation:Optional
	MountDir *string `json:"mountDir,omitempty" tf:"mount_dir,omitempty"`

	// NAS server address
	// +kubebuilder:validation:Optional
	ServerAddr *string `json:"serverAddr,omitempty" tf:"server_addr,omitempty"`
}

type NasConfigInitParameters struct {

	// Group ID
	GroupID *float64 `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Mount point list See mount_points below.
	MountPoints []MountPointsInitParameters `json:"mountPoints,omitempty" tf:"mount_points,omitempty"`

	// Account ID
	UserID *float64 `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type NasConfigObservation struct {

	// Group ID
	GroupID *float64 `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Mount point list See mount_points below.
	MountPoints []MountPointsObservation `json:"mountPoints,omitempty" tf:"mount_points,omitempty"`

	// Account ID
	UserID *float64 `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type NasConfigParameters struct {

	// Group ID
	// +kubebuilder:validation:Optional
	GroupID *float64 `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Mount point list See mount_points below.
	// +kubebuilder:validation:Optional
	MountPoints []MountPointsParameters `json:"mountPoints,omitempty" tf:"mount_points,omitempty"`

	// Account ID
	// +kubebuilder:validation:Optional
	UserID *float64 `json:"userId,omitempty" tf:"user_id,omitempty"`
}

type OssMountConfigInitParameters struct {

	// OSS mount point list See mount_points below.
	MountPoints []OssMountConfigMountPointsInitParameters `json:"mountPoints,omitempty" tf:"mount_points,omitempty"`
}

type OssMountConfigMountPointsInitParameters struct {

	// OSS Bucket name
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Path of the mounted OSS Bucket
	BucketPath *string `json:"bucketPath,omitempty" tf:"bucket_path,omitempty"`

	// OSS access endpoint
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// Local Mount Directory
	MountDir *string `json:"mountDir,omitempty" tf:"mount_dir,omitempty"`

	// Read-only
	ReadOnly *bool `json:"readOnly,omitempty" tf:"read_only,omitempty"`
}

type OssMountConfigMountPointsObservation struct {

	// OSS Bucket name
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Path of the mounted OSS Bucket
	BucketPath *string `json:"bucketPath,omitempty" tf:"bucket_path,omitempty"`

	// OSS access endpoint
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// Local Mount Directory
	MountDir *string `json:"mountDir,omitempty" tf:"mount_dir,omitempty"`

	// Read-only
	ReadOnly *bool `json:"readOnly,omitempty" tf:"read_only,omitempty"`
}

type OssMountConfigMountPointsParameters struct {

	// OSS Bucket name
	// +kubebuilder:validation:Optional
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Path of the mounted OSS Bucket
	// +kubebuilder:validation:Optional
	BucketPath *string `json:"bucketPath,omitempty" tf:"bucket_path,omitempty"`

	// OSS access endpoint
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// Local Mount Directory
	// +kubebuilder:validation:Optional
	MountDir *string `json:"mountDir,omitempty" tf:"mount_dir,omitempty"`

	// Read-only
	// +kubebuilder:validation:Optional
	ReadOnly *bool `json:"readOnly,omitempty" tf:"read_only,omitempty"`
}

type OssMountConfigObservation struct {

	// OSS mount point list See mount_points below.
	MountPoints []OssMountConfigMountPointsObservation `json:"mountPoints,omitempty" tf:"mount_points,omitempty"`
}

type OssMountConfigParameters struct {

	// OSS mount point list See mount_points below.
	// +kubebuilder:validation:Optional
	MountPoints []OssMountConfigMountPointsParameters `json:"mountPoints,omitempty" tf:"mount_points,omitempty"`
}

type PreStopInitParameters struct {

	// Function Handler: the call entry for the function compute system to run your function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The maximum running time of the function, in seconds.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type PreStopObservation struct {

	// Function Handler: the call entry for the function compute system to run your function.
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The maximum running time of the function, in seconds.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type PreStopParameters struct {

	// Function Handler: the call entry for the function compute system to run your function.
	// +kubebuilder:validation:Optional
	Handler *string `json:"handler,omitempty" tf:"handler,omitempty"`

	// The maximum running time of the function, in seconds.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type TracingConfigInitParameters struct {
}

type TracingConfigObservation struct {

	// Tracing parameters
	// +mapType=granular
	Params map[string]*string `json:"params,omitempty" tf:"params,omitempty"`

	// The tracing protocol type. Currently, only Jaeger is supported.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TracingConfigParameters struct {
}

type VPCConfigInitParameters struct {

	// Security group ID
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.SecurityGroup
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// VPC network ID
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// References to Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VSwitchIDRefs []v1.Reference `json:"vSwitchIdRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VSwitchIDSelector *v1.Selector `json:"vSwitchIdSelector,omitempty" tf:"-"`

	// Switch List
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:refFieldName=VSwitchIDRefs
	// +crossplane:generate:reference:selectorFieldName=VSwitchIDSelector
	VswitchIds []*string `json:"vswitchIds,omitempty" tf:"vswitch_ids,omitempty"`
}

type VPCConfigObservation struct {

	// Security group ID
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// VPC network ID
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Switch List
	VswitchIds []*string `json:"vswitchIds,omitempty" tf:"vswitch_ids,omitempty"`
}

type VPCConfigParameters struct {

	// Security group ID
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// VPC network ID
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// References to Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VSwitchIDRefs []v1.Reference `json:"vSwitchIdRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate vswitchIds.
	// +kubebuilder:validation:Optional
	VSwitchIDSelector *v1.Selector `json:"vSwitchIdSelector,omitempty" tf:"-"`

	// Switch List
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:refFieldName=VSwitchIDRefs
	// +crossplane:generate:reference:selectorFieldName=VSwitchIDSelector
	// +kubebuilder:validation:Optional
	VswitchIds []*string `json:"vswitchIds,omitempty" tf:"vswitch_ids,omitempty"`
}

// FunctionSpec defines the desired state of Function
type FunctionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FunctionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FunctionInitParameters `json:"initProvider,omitempty"`
}

// FunctionStatus defines the observed state of Function.
type FunctionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FunctionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Function is the Schema for the Functions API. Provides a Alicloud Function Compute Service V3 (FCV3) Function resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Function struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.handler) || (has(self.initProvider) && has(self.initProvider.handler))",message="spec.forProvider.handler is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.runtime) || (has(self.initProvider) && has(self.initProvider.runtime))",message="spec.forProvider.runtime is a required parameter"
	Spec   FunctionSpec   `json:"spec"`
	Status FunctionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FunctionList contains a list of Functions
type FunctionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Function `json:"items"`
}

// Repository type metadata.
var (
	Function_Kind             = "Function"
	Function_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Function_Kind}.String()
	Function_KindAPIVersion   = Function_Kind + "." + CRDGroupVersion.String()
	Function_GroupVersionKind = CRDGroupVersion.WithKind(Function_Kind)
)

func init() {
	SchemeBuilder.Register(&Function{}, &FunctionList{})
}
