// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AsyncInvokeConfigInitParameters struct {

	// Whether to enable an asynchronous task
	AsyncTask *bool `json:"asyncTask,omitempty" tf:"async_task,omitempty"`

	// Target Configuration See destination_config below.
	DestinationConfig []DestinationConfigInitParameters `json:"destinationConfig,omitempty" tf:"destination_config,omitempty"`

	// Function Name
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Reference to a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameRef *v1.Reference `json:"functionNameRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameSelector *v1.Selector `json:"functionNameSelector,omitempty" tf:"-"`

	// Event maximum survival time
	MaxAsyncEventAgeInSeconds *float64 `json:"maxAsyncEventAgeInSeconds,omitempty" tf:"max_async_event_age_in_seconds,omitempty"`

	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts *float64 `json:"maxAsyncRetryAttempts,omitempty" tf:"max_async_retry_attempts,omitempty"`

	// Function version or alias
	Qualifier *string `json:"qualifier,omitempty" tf:"qualifier,omitempty"`
}

type AsyncInvokeConfigObservation struct {

	// Whether to enable an asynchronous task
	AsyncTask *bool `json:"asyncTask,omitempty" tf:"async_task,omitempty"`

	// The creation time of the resource
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Target Configuration See destination_config below.
	DestinationConfig []DestinationConfigObservation `json:"destinationConfig,omitempty" tf:"destination_config,omitempty"`

	// (Available since v1.234.0) Function resource identification
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// Function Name
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Available since v1.234.0) Last modification time
	LastModifiedTime *string `json:"lastModifiedTime,omitempty" tf:"last_modified_time,omitempty"`

	// Event maximum survival time
	MaxAsyncEventAgeInSeconds *float64 `json:"maxAsyncEventAgeInSeconds,omitempty" tf:"max_async_event_age_in_seconds,omitempty"`

	// Number of Asynchronous call retries
	MaxAsyncRetryAttempts *float64 `json:"maxAsyncRetryAttempts,omitempty" tf:"max_async_retry_attempts,omitempty"`

	// Function version or alias
	Qualifier *string `json:"qualifier,omitempty" tf:"qualifier,omitempty"`
}

type AsyncInvokeConfigParameters struct {

	// Whether to enable an asynchronous task
	// +kubebuilder:validation:Optional
	AsyncTask *bool `json:"asyncTask,omitempty" tf:"async_task,omitempty"`

	// Target Configuration See destination_config below.
	// +kubebuilder:validation:Optional
	DestinationConfig []DestinationConfigParameters `json:"destinationConfig,omitempty" tf:"destination_config,omitempty"`

	// Function Name
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +kubebuilder:validation:Optional
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Reference to a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameRef *v1.Reference `json:"functionNameRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameSelector *v1.Selector `json:"functionNameSelector,omitempty" tf:"-"`

	// Event maximum survival time
	// +kubebuilder:validation:Optional
	MaxAsyncEventAgeInSeconds *float64 `json:"maxAsyncEventAgeInSeconds,omitempty" tf:"max_async_event_age_in_seconds,omitempty"`

	// Number of Asynchronous call retries
	// +kubebuilder:validation:Optional
	MaxAsyncRetryAttempts *float64 `json:"maxAsyncRetryAttempts,omitempty" tf:"max_async_retry_attempts,omitempty"`

	// Function version or alias
	// +kubebuilder:validation:Optional
	Qualifier *string `json:"qualifier,omitempty" tf:"qualifier,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

type DestinationConfigInitParameters struct {

	// Failed callback target structure See on_failure below.
	OnFailure []OnFailureInitParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// Successful callback target structure See on_success below.
	OnSuccess []OnSuccessInitParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type DestinationConfigObservation struct {

	// Failed callback target structure See on_failure below.
	OnFailure []OnFailureObservation `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// Successful callback target structure See on_success below.
	OnSuccess []OnSuccessObservation `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type DestinationConfigParameters struct {

	// Failed callback target structure See on_failure below.
	// +kubebuilder:validation:Optional
	OnFailure []OnFailureParameters `json:"onFailure,omitempty" tf:"on_failure,omitempty"`

	// Successful callback target structure See on_success below.
	// +kubebuilder:validation:Optional
	OnSuccess []OnSuccessParameters `json:"onSuccess,omitempty" tf:"on_success,omitempty"`
}

type OnFailureInitParameters struct {

	// Asynchronous call target Resource Descriptor
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.Fcv3FunctionArnExtractor()
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Reference to a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationRef *v1.Reference `json:"destinationRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationSelector *v1.Selector `json:"destinationSelector,omitempty" tf:"-"`
}

type OnFailureObservation struct {

	// Asynchronous call target Resource Descriptor
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type OnFailureParameters struct {

	// Asynchronous call target Resource Descriptor
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.Fcv3FunctionArnExtractor()
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Reference to a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationRef *v1.Reference `json:"destinationRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationSelector *v1.Selector `json:"destinationSelector,omitempty" tf:"-"`
}

type OnSuccessInitParameters struct {

	// Asynchronous call target Resource Descriptor
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.Fcv3FunctionArnExtractor()
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Reference to a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationRef *v1.Reference `json:"destinationRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationSelector *v1.Selector `json:"destinationSelector,omitempty" tf:"-"`
}

type OnSuccessObservation struct {

	// Asynchronous call target Resource Descriptor
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`
}

type OnSuccessParameters struct {

	// Asynchronous call target Resource Descriptor
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.Fcv3FunctionArnExtractor()
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Reference to a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationRef *v1.Reference `json:"destinationRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate destination.
	// +kubebuilder:validation:Optional
	DestinationSelector *v1.Selector `json:"destinationSelector,omitempty" tf:"-"`
}

// AsyncInvokeConfigSpec defines the desired state of AsyncInvokeConfig
type AsyncInvokeConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AsyncInvokeConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AsyncInvokeConfigInitParameters `json:"initProvider,omitempty"`
}

// AsyncInvokeConfigStatus defines the observed state of AsyncInvokeConfig.
type AsyncInvokeConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AsyncInvokeConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AsyncInvokeConfig is the Schema for the AsyncInvokeConfigs API. Provides a Alicloud FCV3 Async Invoke Config resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AsyncInvokeConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AsyncInvokeConfigSpec   `json:"spec"`
	Status            AsyncInvokeConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AsyncInvokeConfigList contains a list of AsyncInvokeConfigs
type AsyncInvokeConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AsyncInvokeConfig `json:"items"`
}

// Repository type metadata.
var (
	AsyncInvokeConfig_Kind             = "AsyncInvokeConfig"
	AsyncInvokeConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AsyncInvokeConfig_Kind}.String()
	AsyncInvokeConfig_KindAPIVersion   = AsyncInvokeConfig_Kind + "." + CRDGroupVersion.String()
	AsyncInvokeConfig_GroupVersionKind = CRDGroupVersion.WithKind(AsyncInvokeConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&AsyncInvokeConfig{}, &AsyncInvokeConfigList{})
}
