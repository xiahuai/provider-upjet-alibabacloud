// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountPrivilegeInitParameters struct {

	// A specified account name.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.AccountNameExtractor()
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// Reference to a Account in polardb to populate accountName.
	// +kubebuilder:validation:Optional
	AccountNameRef *v1.Reference `json:"accountNameRef,omitempty" tf:"-"`

	// Selector for a Account in polardb to populate accountName.
	// +kubebuilder:validation:Optional
	AccountNameSelector *v1.Selector `json:"accountNameSelector,omitempty" tf:"-"`

	// The privilege of one account access database. Valid values: ["ReadOnly", "ReadWrite"], ["DMLOnly", "DDLOnly"] added since version v1.101.0. Default to "ReadOnly".
	AccountPrivilege *string `json:"accountPrivilege,omitempty" tf:"account_privilege,omitempty"`

	// The Id of cluster in which account belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	DBClusterID *string `json:"dbClusterId,omitempty" tf:"db_cluster_id,omitempty"`

	// Reference to a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDRef *v1.Reference `json:"dbClusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDSelector *v1.Selector `json:"dbClusterIdSelector,omitempty" tf:"-"`

	// List of specified database name.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Database
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("db_name",false)
	// +listType=set
	DBNames []*string `json:"dbNames,omitempty" tf:"db_names,omitempty"`

	// References to Database in polardb to populate dbNames.
	// +kubebuilder:validation:Optional
	DBNamesRefs []v1.Reference `json:"dbNamesRefs,omitempty" tf:"-"`

	// Selector for a list of Database in polardb to populate dbNames.
	// +kubebuilder:validation:Optional
	DBNamesSelector *v1.Selector `json:"dbNamesSelector,omitempty" tf:"-"`
}

type AccountPrivilegeObservation struct {

	// A specified account name.
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// The privilege of one account access database. Valid values: ["ReadOnly", "ReadWrite"], ["DMLOnly", "DDLOnly"] added since version v1.101.0. Default to "ReadOnly".
	AccountPrivilege *string `json:"accountPrivilege,omitempty" tf:"account_privilege,omitempty"`

	// The Id of cluster in which account belongs.
	DBClusterID *string `json:"dbClusterId,omitempty" tf:"db_cluster_id,omitempty"`

	// List of specified database name.
	// +listType=set
	DBNames []*string `json:"dbNames,omitempty" tf:"db_names,omitempty"`

	// The current account resource ID. Composed of instance ID, account name and privilege with format <db_cluster_id>:<account_name>:<account_privilege>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AccountPrivilegeParameters struct {

	// A specified account name.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Account
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.AccountNameExtractor()
	// +kubebuilder:validation:Optional
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// Reference to a Account in polardb to populate accountName.
	// +kubebuilder:validation:Optional
	AccountNameRef *v1.Reference `json:"accountNameRef,omitempty" tf:"-"`

	// Selector for a Account in polardb to populate accountName.
	// +kubebuilder:validation:Optional
	AccountNameSelector *v1.Selector `json:"accountNameSelector,omitempty" tf:"-"`

	// The privilege of one account access database. Valid values: ["ReadOnly", "ReadWrite"], ["DMLOnly", "DDLOnly"] added since version v1.101.0. Default to "ReadOnly".
	// +kubebuilder:validation:Optional
	AccountPrivilege *string `json:"accountPrivilege,omitempty" tf:"account_privilege,omitempty"`

	// The Id of cluster in which account belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	DBClusterID *string `json:"dbClusterId,omitempty" tf:"db_cluster_id,omitempty"`

	// Reference to a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDRef *v1.Reference `json:"dbClusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in polardb to populate dbClusterId.
	// +kubebuilder:validation:Optional
	DBClusterIDSelector *v1.Selector `json:"dbClusterIdSelector,omitempty" tf:"-"`

	// List of specified database name.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/polardb/v1alpha1.Database
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("db_name",false)
	// +kubebuilder:validation:Optional
	// +listType=set
	DBNames []*string `json:"dbNames,omitempty" tf:"db_names,omitempty"`

	// References to Database in polardb to populate dbNames.
	// +kubebuilder:validation:Optional
	DBNamesRefs []v1.Reference `json:"dbNamesRefs,omitempty" tf:"-"`

	// Selector for a list of Database in polardb to populate dbNames.
	// +kubebuilder:validation:Optional
	DBNamesSelector *v1.Selector `json:"dbNamesSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// AccountPrivilegeSpec defines the desired state of AccountPrivilege
type AccountPrivilegeSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountPrivilegeParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccountPrivilegeInitParameters `json:"initProvider,omitempty"`
}

// AccountPrivilegeStatus defines the observed state of AccountPrivilege.
type AccountPrivilegeStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountPrivilegeObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccountPrivilege is the Schema for the AccountPrivileges API. Provides a PolarDB account privilege resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AccountPrivilege struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AccountPrivilegeSpec   `json:"spec"`
	Status            AccountPrivilegeStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountPrivilegeList contains a list of AccountPrivileges
type AccountPrivilegeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccountPrivilege `json:"items"`
}

// Repository type metadata.
var (
	AccountPrivilege_Kind             = "AccountPrivilege"
	AccountPrivilege_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccountPrivilege_Kind}.String()
	AccountPrivilege_KindAPIVersion   = AccountPrivilege_Kind + "." + CRDGroupVersion.String()
	AccountPrivilege_GroupVersionKind = CRDGroupVersion.WithKind(AccountPrivilege_Kind)
)

func init() {
	SchemeBuilder.Register(&AccountPrivilege{}, &AccountPrivilegeList{})
}
