// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InvocationInitParameters struct {

	// The ID of the command.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Command
	CommandID *string `json:"commandId,omitempty" tf:"command_id,omitempty"`

	// Reference to a Command in ecs to populate commandId.
	// +kubebuilder:validation:Optional
	CommandIDRef *v1.Reference `json:"commandIdRef,omitempty" tf:"-"`

	// Selector for a Command in ecs to populate commandId.
	// +kubebuilder:validation:Optional
	CommandIDSelector *v1.Selector `json:"commandIdSelector,omitempty" tf:"-"`

	// The schedule on which the recurring execution of the command takes place. Take note of the following items:
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The list of instances to execute the command. You can specify up to 50 instance IDs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID []*string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// References to Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRefs []v1.Reference `json:"instanceIdRefs,omitempty" tf:"-"`

	// Selector for a list of Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Specifies how to run the command. Valid values: Once, Period, NextRebootOnly, EveryReboot. Default value: When timed is set to false and Frequency is not specified, the default value of repeat_mode is Once. When Timed is set to true and Frequency is specified, period is used as the value of RepeatMode regardless of whether repeat_mode is specified.
	RepeatMode *string `json:"repeatMode,omitempty" tf:"repeat_mode,omitempty"`

	// Specifies whether to periodically run the command. Default value: false.
	Timed *bool `json:"timed,omitempty" tf:"timed,omitempty"`

	// The username that is used to run the command on the ECS instance.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	// The name of the password used to run the command on a Windows instance.
	WindowsPasswordName *string `json:"windowsPasswordName,omitempty" tf:"windows_password_name,omitempty"`
}

type InvocationObservation struct {

	// The ID of the command.
	CommandID *string `json:"commandId,omitempty" tf:"command_id,omitempty"`

	// The schedule on which the recurring execution of the command takes place. Take note of the following items:
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The list of instances to execute the command. You can specify up to 50 instance IDs.
	InstanceID []*string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Specifies how to run the command. Valid values: Once, Period, NextRebootOnly, EveryReboot. Default value: When timed is set to false and Frequency is not specified, the default value of repeat_mode is Once. When Timed is set to true and Frequency is specified, period is used as the value of RepeatMode regardless of whether repeat_mode is specified.
	RepeatMode *string `json:"repeatMode,omitempty" tf:"repeat_mode,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies whether to periodically run the command. Default value: false.
	Timed *bool `json:"timed,omitempty" tf:"timed,omitempty"`

	// The username that is used to run the command on the ECS instance.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	// The name of the password used to run the command on a Windows instance.
	WindowsPasswordName *string `json:"windowsPasswordName,omitempty" tf:"windows_password_name,omitempty"`
}

type InvocationParameters struct {

	// The ID of the command.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Command
	// +kubebuilder:validation:Optional
	CommandID *string `json:"commandId,omitempty" tf:"command_id,omitempty"`

	// Reference to a Command in ecs to populate commandId.
	// +kubebuilder:validation:Optional
	CommandIDRef *v1.Reference `json:"commandIdRef,omitempty" tf:"-"`

	// Selector for a Command in ecs to populate commandId.
	// +kubebuilder:validation:Optional
	CommandIDSelector *v1.Selector `json:"commandIdSelector,omitempty" tf:"-"`

	// The schedule on which the recurring execution of the command takes place. Take note of the following items:
	// +kubebuilder:validation:Optional
	Frequency *string `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// The list of instances to execute the command. You can specify up to 50 instance IDs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID []*string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// References to Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRefs []v1.Reference `json:"instanceIdRefs,omitempty" tf:"-"`

	// Selector for a list of Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled.  Number of custom parameters: 0 to 10.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Parameters map[string]*string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Specifies how to run the command. Valid values: Once, Period, NextRebootOnly, EveryReboot. Default value: When timed is set to false and Frequency is not specified, the default value of repeat_mode is Once. When Timed is set to true and Frequency is specified, period is used as the value of RepeatMode regardless of whether repeat_mode is specified.
	// +kubebuilder:validation:Optional
	RepeatMode *string `json:"repeatMode,omitempty" tf:"repeat_mode,omitempty"`

	// Specifies whether to periodically run the command. Default value: false.
	// +kubebuilder:validation:Optional
	Timed *bool `json:"timed,omitempty" tf:"timed,omitempty"`

	// The username that is used to run the command on the ECS instance.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`

	// The name of the password used to run the command on a Windows instance.
	// +kubebuilder:validation:Optional
	WindowsPasswordName *string `json:"windowsPasswordName,omitempty" tf:"windows_password_name,omitempty"`
}

// InvocationSpec defines the desired state of Invocation
type InvocationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InvocationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InvocationInitParameters `json:"initProvider,omitempty"`
}

// InvocationStatus defines the observed state of Invocation.
type InvocationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InvocationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Invocation is the Schema for the Invocations API. Provides a Alicloud ECS Invocation resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Invocation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InvocationSpec   `json:"spec"`
	Status            InvocationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InvocationList contains a list of Invocations
type InvocationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Invocation `json:"items"`
}

// Repository type metadata.
var (
	Invocation_Kind             = "Invocation"
	Invocation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Invocation_Kind}.String()
	Invocation_KindAPIVersion   = Invocation_Kind + "." + CRDGroupVersion.String()
	Invocation_GroupVersionKind = CRDGroupVersion.WithKind(Invocation_Kind)
)

func init() {
	SchemeBuilder.Register(&Invocation{}, &InvocationList{})
}
