// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BucketWebsiteInitParameters struct {

	// The name of the bucket
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// The container that holds the error page configuration information. See error_document below.
	ErrorDocument []ErrorDocumentInitParameters `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// Static Website Default Home Page Configuration See index_document below.
	IndexDocument []IndexDocumentInitParameters `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// The container that holds the jump rule or the mirroring back-to-origin rule. See routing_rules below.
	RoutingRules []RoutingRulesInitParameters `json:"routingRules,omitempty" tf:"routing_rules,omitempty"`
}

type BucketWebsiteObservation struct {

	// The name of the bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// The container that holds the error page configuration information. See error_document below.
	ErrorDocument []ErrorDocumentObservation `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Static Website Default Home Page Configuration See index_document below.
	IndexDocument []IndexDocumentObservation `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// The container that holds the jump rule or the mirroring back-to-origin rule. See routing_rules below.
	RoutingRules []RoutingRulesObservation `json:"routingRules,omitempty" tf:"routing_rules,omitempty"`
}

type BucketWebsiteParameters struct {

	// The name of the bucket
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// The container that holds the error page configuration information. See error_document below.
	// +kubebuilder:validation:Optional
	ErrorDocument []ErrorDocumentParameters `json:"errorDocument,omitempty" tf:"error_document,omitempty"`

	// Static Website Default Home Page Configuration See index_document below.
	// +kubebuilder:validation:Optional
	IndexDocument []IndexDocumentParameters `json:"indexDocument,omitempty" tf:"index_document,omitempty"`

	// Signature Region
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The container that holds the jump rule or the mirroring back-to-origin rule. See routing_rules below.
	// +kubebuilder:validation:Optional
	RoutingRules []RoutingRulesParameters `json:"routingRules,omitempty" tf:"routing_rules,omitempty"`
}

type ConditionInitParameters struct {

	// When the specified Object is accessed, this status is returned to match this rule. This field must be 404 when the jump rule is mirrored back to the source.
	HTTPErrorCodeReturnedEquals *string `json:"httpErrorCodeReturnedEquals,omitempty" tf:"http_error_code_returned_equals,omitempty"`

	// This rule can only be matched if the request contains the specified Header and the value is the specified value. You can specify up to 10 containers. See include_headers below.
	IncludeHeaders []IncludeHeadersInitParameters `json:"includeHeaders,omitempty" tf:"include_headers,omitempty"`

	// Only objects that match this prefix can match this rule.
	KeyPrefixEquals *string `json:"keyPrefixEquals,omitempty" tf:"key_prefix_equals,omitempty"`

	// Only objects that match this suffix can match this rule.
	KeySuffixEquals *string `json:"keySuffixEquals,omitempty" tf:"key_suffix_equals,omitempty"`
}

type ConditionObservation struct {

	// When the specified Object is accessed, this status is returned to match this rule. This field must be 404 when the jump rule is mirrored back to the source.
	HTTPErrorCodeReturnedEquals *string `json:"httpErrorCodeReturnedEquals,omitempty" tf:"http_error_code_returned_equals,omitempty"`

	// This rule can only be matched if the request contains the specified Header and the value is the specified value. You can specify up to 10 containers. See include_headers below.
	IncludeHeaders []IncludeHeadersObservation `json:"includeHeaders,omitempty" tf:"include_headers,omitempty"`

	// Only objects that match this prefix can match this rule.
	KeyPrefixEquals *string `json:"keyPrefixEquals,omitempty" tf:"key_prefix_equals,omitempty"`

	// Only objects that match this suffix can match this rule.
	KeySuffixEquals *string `json:"keySuffixEquals,omitempty" tf:"key_suffix_equals,omitempty"`
}

type ConditionParameters struct {

	// When the specified Object is accessed, this status is returned to match this rule. This field must be 404 when the jump rule is mirrored back to the source.
	// +kubebuilder:validation:Optional
	HTTPErrorCodeReturnedEquals *string `json:"httpErrorCodeReturnedEquals,omitempty" tf:"http_error_code_returned_equals,omitempty"`

	// This rule can only be matched if the request contains the specified Header and the value is the specified value. You can specify up to 10 containers. See include_headers below.
	// +kubebuilder:validation:Optional
	IncludeHeaders []IncludeHeadersParameters `json:"includeHeaders,omitempty" tf:"include_headers,omitempty"`

	// Only objects that match this prefix can match this rule.
	// +kubebuilder:validation:Optional
	KeyPrefixEquals *string `json:"keyPrefixEquals,omitempty" tf:"key_prefix_equals,omitempty"`

	// Only objects that match this suffix can match this rule.
	// +kubebuilder:validation:Optional
	KeySuffixEquals *string `json:"keySuffixEquals,omitempty" tf:"key_suffix_equals,omitempty"`
}

type ErrorDocumentInitParameters struct {

	// The HTTP status code when the error page is returned. The default 404.
	HTTPStatus *float64 `json:"httpStatus,omitempty" tf:"http_status,omitempty"`

	// The error page file. If the Object accessed does not exist, this error page is returned.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type ErrorDocumentObservation struct {

	// The HTTP status code when the error page is returned. The default 404.
	HTTPStatus *float64 `json:"httpStatus,omitempty" tf:"http_status,omitempty"`

	// The error page file. If the Object accessed does not exist, this error page is returned.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type ErrorDocumentParameters struct {

	// The HTTP status code when the error page is returned. The default 404.
	// +kubebuilder:validation:Optional
	HTTPStatus *float64 `json:"httpStatus,omitempty" tf:"http_status,omitempty"`

	// The error page file. If the Object accessed does not exist, this error page is returned.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`
}

type IncludeHeadersInitParameters struct {

	// This rule can only be matched if the request contains the Header specified by Key and the value ends with this value.
	EndsWith *string `json:"endsWith,omitempty" tf:"ends_with,omitempty"`

	// This rule can only be matched if the request contains the Header specified by Key and the value is the specified value.
	Equals *string `json:"equals,omitempty" tf:"equals,omitempty"`

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// This rule can only be matched if the request contains the Header specified by Key and the value starts with this value.
	StartsWith *string `json:"startsWith,omitempty" tf:"starts_with,omitempty"`
}

type IncludeHeadersObservation struct {

	// This rule can only be matched if the request contains the Header specified by Key and the value ends with this value.
	EndsWith *string `json:"endsWith,omitempty" tf:"ends_with,omitempty"`

	// This rule can only be matched if the request contains the Header specified by Key and the value is the specified value.
	Equals *string `json:"equals,omitempty" tf:"equals,omitempty"`

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// This rule can only be matched if the request contains the Header specified by Key and the value starts with this value.
	StartsWith *string `json:"startsWith,omitempty" tf:"starts_with,omitempty"`
}

type IncludeHeadersParameters struct {

	// This rule can only be matched if the request contains the Header specified by Key and the value ends with this value.
	// +kubebuilder:validation:Optional
	EndsWith *string `json:"endsWith,omitempty" tf:"ends_with,omitempty"`

	// This rule can only be matched if the request contains the Header specified by Key and the value is the specified value.
	// +kubebuilder:validation:Optional
	Equals *string `json:"equals,omitempty" tf:"equals,omitempty"`

	// The tag key corresponding to the current rule
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// This rule can only be matched if the request contains the Header specified by Key and the value starts with this value.
	// +kubebuilder:validation:Optional
	StartsWith *string `json:"startsWith,omitempty" tf:"starts_with,omitempty"`
}

type IndexDocumentInitParameters struct {

	// The default home page.
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// Whether to jump to the default home page of a subdirectory when accessing a subdirectory.
	SupportSubDir *bool `json:"supportSubDir,omitempty" tf:"support_sub_dir,omitempty"`

	// After the default homepage is set, the behavior when an Object that ends with a non-forward slash (/) is accessed and the Object does not exist.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IndexDocumentObservation struct {

	// The default home page.
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// Whether to jump to the default home page of a subdirectory when accessing a subdirectory.
	SupportSubDir *bool `json:"supportSubDir,omitempty" tf:"support_sub_dir,omitempty"`

	// After the default homepage is set, the behavior when an Object that ends with a non-forward slash (/) is accessed and the Object does not exist.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IndexDocumentParameters struct {

	// The default home page.
	// +kubebuilder:validation:Optional
	Suffix *string `json:"suffix,omitempty" tf:"suffix,omitempty"`

	// Whether to jump to the default home page of a subdirectory when accessing a subdirectory.
	// +kubebuilder:validation:Optional
	SupportSubDir *bool `json:"supportSubDir,omitempty" tf:"support_sub_dir,omitempty"`

	// After the default homepage is set, the behavior when an Object that ends with a non-forward slash (/) is accessed and the Object does not exist.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type LuaConfigInitParameters struct {

	// The Lua script name.
	Script *string `json:"script,omitempty" tf:"script,omitempty"`
}

type LuaConfigObservation struct {

	// The Lua script name.
	Script *string `json:"script,omitempty" tf:"script,omitempty"`
}

type LuaConfigParameters struct {

	// The Lua script name.
	// +kubebuilder:validation:Optional
	Script *string `json:"script,omitempty" tf:"script,omitempty"`
}

type MirrorAuthInitParameters struct {

	// Mirror back-to-source source Station back-to-source AK
	AccessKeyID *string `json:"accessKeyId,omitempty" tf:"access_key_id,omitempty"`

	// Mirroring back to the source station back to the source SK will be automatically desensitized when obtaining the configuration.
	AccessKeySecretSecretRef *v1.SecretKeySelector `json:"accessKeySecretSecretRef,omitempty" tf:"-"`

	// Authentication type of mirror return Source
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// Signature Region
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type MirrorAuthObservation struct {

	// Mirror back-to-source source Station back-to-source AK
	AccessKeyID *string `json:"accessKeyId,omitempty" tf:"access_key_id,omitempty"`

	// Authentication type of mirror return Source
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// Signature Region
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type MirrorAuthParameters struct {

	// Mirror back-to-source source Station back-to-source AK
	// +kubebuilder:validation:Optional
	AccessKeyID *string `json:"accessKeyId,omitempty" tf:"access_key_id,omitempty"`

	// Mirroring back to the source station back to the source SK will be automatically desensitized when obtaining the configuration.
	// +kubebuilder:validation:Optional
	AccessKeySecretSecretRef *v1.SecretKeySelector `json:"accessKeySecretSecretRef,omitempty" tf:"-"`

	// Authentication type of mirror return Source
	// +kubebuilder:validation:Optional
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// Signature Region
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type MirrorHeadersInitParameters struct {

	// Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
	Pass []*string `json:"pass,omitempty" tf:"pass,omitempty"`

	// Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
	PassAll *bool `json:"passAll,omitempty" tf:"pass_all,omitempty"`

	// Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
	Remove []*string `json:"remove,omitempty" tf:"remove,omitempty"`

	// Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See set below.
	Set []SetInitParameters `json:"set,omitempty" tf:"set,omitempty"`
}

type MirrorHeadersObservation struct {

	// Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
	Pass []*string `json:"pass,omitempty" tf:"pass,omitempty"`

	// Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
	PassAll *bool `json:"passAll,omitempty" tf:"pass_all,omitempty"`

	// Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
	Remove []*string `json:"remove,omitempty" tf:"remove,omitempty"`

	// Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See set below.
	Set []SetObservation `json:"set,omitempty" tf:"set,omitempty"`
}

type MirrorHeadersParameters struct {

	// Pass through the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
	// +kubebuilder:validation:Optional
	Pass []*string `json:"pass,omitempty" tf:"pass,omitempty"`

	// Indicates whether other headers except the following headers are transmitted to the source site. It takes effect only when the RedirectType is set to Mirror. content-length, authorization2, authorization, range, date, and other headers Headers whose names start with oss-/x-oss-/x-drs-
	// +kubebuilder:validation:Optional
	PassAll *bool `json:"passAll,omitempty" tf:"pass_all,omitempty"`

	// Do not pass the specified Header to the source site. It takes effect only when the RedirectType is set to Mirror. Each Header is up to 1024 bytes in length and has A character set of 0 to 9, a to Z, A to z, and dashes (-).
	// +kubebuilder:validation:Optional
	Remove []*string `json:"remove,omitempty" tf:"remove,omitempty"`

	// Set a Header to send to the source site. Regardless of whether the request contains the specified Header, these headers will be set when returning to the source site. It takes effect only when the RedirectType is set to Mirror. See set below.
	// +kubebuilder:validation:Optional
	Set []SetParameters `json:"set,omitempty" tf:"set,omitempty"`
}

type MirrorMultiAlternateInitParameters struct {

	// Mirroring back-to-source multi-station Region
	MirrorMultiAlternateDstRegion *string `json:"mirrorMultiAlternateDstRegion,omitempty" tf:"mirror_multi_alternate_dst_region,omitempty"`

	// Image back-to-source multi-source station serial number
	MirrorMultiAlternateNumber *float64 `json:"mirrorMultiAlternateNumber,omitempty" tf:"mirror_multi_alternate_number,omitempty"`

	// Mirroring back-to-source multi-source site URL
	MirrorMultiAlternateURL *string `json:"mirrorMultiAlternateUrl,omitempty" tf:"mirror_multi_alternate_url,omitempty"`

	// Mirroring back-to-source multi-source VpcId
	MirrorMultiAlternateVPCID *string `json:"mirrorMultiAlternateVpcId,omitempty" tf:"mirror_multi_alternate_vpc_id,omitempty"`
}

type MirrorMultiAlternateObservation struct {

	// Mirroring back-to-source multi-station Region
	MirrorMultiAlternateDstRegion *string `json:"mirrorMultiAlternateDstRegion,omitempty" tf:"mirror_multi_alternate_dst_region,omitempty"`

	// Image back-to-source multi-source station serial number
	MirrorMultiAlternateNumber *float64 `json:"mirrorMultiAlternateNumber,omitempty" tf:"mirror_multi_alternate_number,omitempty"`

	// Mirroring back-to-source multi-source site URL
	MirrorMultiAlternateURL *string `json:"mirrorMultiAlternateUrl,omitempty" tf:"mirror_multi_alternate_url,omitempty"`

	// Mirroring back-to-source multi-source VpcId
	MirrorMultiAlternateVPCID *string `json:"mirrorMultiAlternateVpcId,omitempty" tf:"mirror_multi_alternate_vpc_id,omitempty"`
}

type MirrorMultiAlternateParameters struct {

	// Mirroring back-to-source multi-station Region
	// +kubebuilder:validation:Optional
	MirrorMultiAlternateDstRegion *string `json:"mirrorMultiAlternateDstRegion,omitempty" tf:"mirror_multi_alternate_dst_region,omitempty"`

	// Image back-to-source multi-source station serial number
	// +kubebuilder:validation:Optional
	MirrorMultiAlternateNumber *float64 `json:"mirrorMultiAlternateNumber,omitempty" tf:"mirror_multi_alternate_number,omitempty"`

	// Mirroring back-to-source multi-source site URL
	// +kubebuilder:validation:Optional
	MirrorMultiAlternateURL *string `json:"mirrorMultiAlternateUrl,omitempty" tf:"mirror_multi_alternate_url,omitempty"`

	// Mirroring back-to-source multi-source VpcId
	// +kubebuilder:validation:Optional
	MirrorMultiAlternateVPCID *string `json:"mirrorMultiAlternateVpcId,omitempty" tf:"mirror_multi_alternate_vpc_id,omitempty"`
}

type MirrorMultiAlternatesInitParameters struct {

	// Mirror back-to-source multi-source station configuration list See mirror_multi_alternate below.
	MirrorMultiAlternate []MirrorMultiAlternateInitParameters `json:"mirrorMultiAlternate,omitempty" tf:"mirror_multi_alternate,omitempty"`
}

type MirrorMultiAlternatesObservation struct {

	// Mirror back-to-source multi-source station configuration list See mirror_multi_alternate below.
	MirrorMultiAlternate []MirrorMultiAlternateObservation `json:"mirrorMultiAlternate,omitempty" tf:"mirror_multi_alternate,omitempty"`
}

type MirrorMultiAlternatesParameters struct {

	// Mirror back-to-source multi-source station configuration list See mirror_multi_alternate below.
	// +kubebuilder:validation:Optional
	MirrorMultiAlternate []MirrorMultiAlternateParameters `json:"mirrorMultiAlternate,omitempty" tf:"mirror_multi_alternate,omitempty"`
}

type MirrorReturnHeadersInitParameters struct {

	// The list of response header rules for mirroring back-to-source return. See return_header below.
	ReturnHeader []ReturnHeaderInitParameters `json:"returnHeader,omitempty" tf:"return_header,omitempty"`
}

type MirrorReturnHeadersObservation struct {

	// The list of response header rules for mirroring back-to-source return. See return_header below.
	ReturnHeader []ReturnHeaderObservation `json:"returnHeader,omitempty" tf:"return_header,omitempty"`
}

type MirrorReturnHeadersParameters struct {

	// The list of response header rules for mirroring back-to-source return. See return_header below.
	// +kubebuilder:validation:Optional
	ReturnHeader []ReturnHeaderParameters `json:"returnHeader,omitempty" tf:"return_header,omitempty"`
}

type MirrorTaggingsInitParameters struct {

	// Image back-to-source save label rule list See taggings below.
	Taggings []TaggingsInitParameters `json:"taggings,omitempty" tf:"taggings,omitempty"`
}

type MirrorTaggingsObservation struct {

	// Image back-to-source save label rule list See taggings below.
	Taggings []TaggingsObservation `json:"taggings,omitempty" tf:"taggings,omitempty"`
}

type MirrorTaggingsParameters struct {

	// Image back-to-source save label rule list See taggings below.
	// +kubebuilder:validation:Optional
	Taggings []TaggingsParameters `json:"taggings,omitempty" tf:"taggings,omitempty"`
}

type RedirectInitParameters struct {

	// If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
	EnableReplacePrefix *bool `json:"enableReplacePrefix,omitempty" tf:"enable_replace_prefix,omitempty"`

	// The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
	HTTPRedirectCode *string `json:"httpRedirectCode,omitempty" tf:"http_redirect_code,omitempty"`

	// The domain name during the jump. The domain name must comply with the domain name specification.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// Image back-to-source allows getting Image information
	MirrorAllowGetImageInfo *bool `json:"mirrorAllowGetImageInfo,omitempty" tf:"mirror_allow_get_image_info,omitempty"`

	// Whether to allow HeadObject in image back-to-source
	MirrorAllowHeadObject *bool `json:"mirrorAllowHeadObject,omitempty" tf:"mirror_allow_head_object,omitempty"`

	// Mirror back-to-source allows support for video frame truncation
	MirrorAllowVideoSnapshot *bool `json:"mirrorAllowVideoSnapshot,omitempty" tf:"mirror_allow_video_snapshot,omitempty"`

	// The status code of the mirror back-to-source trigger asynchronous pull mode.
	MirrorAsyncStatus *float64 `json:"mirrorAsyncStatus,omitempty" tf:"mirror_async_status,omitempty"`

	// Image back Source station authentication information See mirror_auth below.
	MirrorAuth []MirrorAuthInitParameters `json:"mirrorAuth,omitempty" tf:"mirror_auth,omitempty"`

	// Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
	MirrorCheckMd5 *bool `json:"mirrorCheckMd5,omitempty" tf:"mirror_check_md5,omitempty"`

	// Mirrored back-to-source high-speed Channel vpregion
	MirrorDstRegion *string `json:"mirrorDstRegion,omitempty" tf:"mirror_dst_region,omitempty"`

	// Mirroring back-to-source high-speed Channel standby station VpcId
	MirrorDstSlaveVPCID *string `json:"mirrorDstSlaveVpcId,omitempty" tf:"mirror_dst_slave_vpc_id,omitempty"`

	// Mirror back-to-source high-speed Channel VpcId
	MirrorDstVPCID *string `json:"mirrorDstVpcId,omitempty" tf:"mirror_dst_vpc_id,omitempty"`

	// If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
	MirrorFollowRedirect *bool `json:"mirrorFollowRedirect,omitempty" tf:"mirror_follow_redirect,omitempty"`

	// Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See mirror_headers below.
	MirrorHeaders []MirrorHeadersInitParameters `json:"mirrorHeaders,omitempty" tf:"mirror_headers,omitempty"`

	// Whether it is a mirror back-to-source high-speed Channel
	MirrorIsExpressTunnel *bool `json:"mirrorIsExpressTunnel,omitempty" tf:"mirror_is_express_tunnel,omitempty"`

	// Mirror back-to-source multi-source station configuration container. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_multi_alternates below.
	MirrorMultiAlternates []MirrorMultiAlternatesInitParameters `json:"mirrorMultiAlternates,omitempty" tf:"mirror_multi_alternates,omitempty"`

	// Transparent transmission/to source Station
	MirrorPassOriginalSlashes *bool `json:"mirrorPassOriginalSlashes,omitempty" tf:"mirror_pass_original_slashes,omitempty"`

	// Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
	MirrorPassQueryString *bool `json:"mirrorPassQueryString,omitempty" tf:"mirror_pass_query_string,omitempty"`

	// Whether mirroring back to source does not save data
	MirrorProxyPass *bool `json:"mirrorProxyPass,omitempty" tf:"mirror_proxy_pass,omitempty"`

	// The container that saves the image back to the source and returns the response header rule. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_return_headers below.
	MirrorReturnHeaders []MirrorReturnHeadersInitParameters `json:"mirrorReturnHeaders,omitempty" tf:"mirror_return_headers,omitempty"`

	// Roles used when mirroring back-to-source
	MirrorRole *string `json:"mirrorRole,omitempty" tf:"mirror_role,omitempty"`

	// Mirror back-to-source back-to-source OSS automatically saves user metadata
	MirrorSaveOssMeta *bool `json:"mirrorSaveOssMeta,omitempty" tf:"mirror_save_oss_meta,omitempty"`

	// Transparent transmission of SNI
	MirrorSni *bool `json:"mirrorSni,omitempty" tf:"mirror_sni,omitempty"`

	// It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
	MirrorSwitchAllErrors *bool `json:"mirrorSwitchAllErrors,omitempty" tf:"mirror_switch_all_errors,omitempty"`

	// Save the label according to the parameters when saving the file from the mirror back to the source. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_taggings below.
	MirrorTaggings []MirrorTaggingsInitParameters `json:"mirrorTaggings,omitempty" tf:"mirror_taggings,omitempty"`

	// Mirror back-to-source leased line back-to-source tunnel ID
	MirrorTunnelID *string `json:"mirrorTunnelId,omitempty" tf:"mirror_tunnel_id,omitempty"`

	// The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
	MirrorURL *string `json:"mirrorUrl,omitempty" tf:"mirror_url,omitempty"`

	// Mirror back-to-source Master-backup back-to-source switching decision URL
	MirrorURLProbe *string `json:"mirrorUrlProbe,omitempty" tf:"mirror_url_probe,omitempty"`

	// Mirror back-to-source primary backup back-to-source backup station URL
	MirrorURLSlave *string `json:"mirrorUrlSlave,omitempty" tf:"mirror_url_slave,omitempty"`

	// Whether the source station LastModifiedTime is used for the image back-to-source save file.
	MirrorUserLastModified *bool `json:"mirrorUserLastModified,omitempty" tf:"mirror_user_last_modified,omitempty"`

	// Whether to use role for mirroring back to source
	MirrorUsingRole *bool `json:"mirrorUsingRole,omitempty" tf:"mirror_using_role,omitempty"`

	// Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B & c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B & c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
	PassQueryString *bool `json:"passQueryString,omitempty" tf:"pass_query_string,omitempty"`

	// The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
	RedirectType *string `json:"redirectType,omitempty" tf:"redirect_type,omitempty"`

	// The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
	ReplaceKeyPrefixWith *string `json:"replaceKeyPrefixWith,omitempty" tf:"replace_key_prefix_with,omitempty"`

	// During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
	ReplaceKeyWith *string `json:"replaceKeyWith,omitempty" tf:"replace_key_with,omitempty"`

	// Mirror back-to-source transparent source station response code list
	TransparentMirrorResponseCodes *string `json:"transparentMirrorResponseCodes,omitempty" tf:"transparent_mirror_response_codes,omitempty"`
}

type RedirectObservation struct {

	// If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
	EnableReplacePrefix *bool `json:"enableReplacePrefix,omitempty" tf:"enable_replace_prefix,omitempty"`

	// The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
	HTTPRedirectCode *string `json:"httpRedirectCode,omitempty" tf:"http_redirect_code,omitempty"`

	// The domain name during the jump. The domain name must comply with the domain name specification.
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// Image back-to-source allows getting Image information
	MirrorAllowGetImageInfo *bool `json:"mirrorAllowGetImageInfo,omitempty" tf:"mirror_allow_get_image_info,omitempty"`

	// Whether to allow HeadObject in image back-to-source
	MirrorAllowHeadObject *bool `json:"mirrorAllowHeadObject,omitempty" tf:"mirror_allow_head_object,omitempty"`

	// Mirror back-to-source allows support for video frame truncation
	MirrorAllowVideoSnapshot *bool `json:"mirrorAllowVideoSnapshot,omitempty" tf:"mirror_allow_video_snapshot,omitempty"`

	// The status code of the mirror back-to-source trigger asynchronous pull mode.
	MirrorAsyncStatus *float64 `json:"mirrorAsyncStatus,omitempty" tf:"mirror_async_status,omitempty"`

	// Image back Source station authentication information See mirror_auth below.
	MirrorAuth []MirrorAuthObservation `json:"mirrorAuth,omitempty" tf:"mirror_auth,omitempty"`

	// Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
	MirrorCheckMd5 *bool `json:"mirrorCheckMd5,omitempty" tf:"mirror_check_md5,omitempty"`

	// Mirrored back-to-source high-speed Channel vpregion
	MirrorDstRegion *string `json:"mirrorDstRegion,omitempty" tf:"mirror_dst_region,omitempty"`

	// Mirroring back-to-source high-speed Channel standby station VpcId
	MirrorDstSlaveVPCID *string `json:"mirrorDstSlaveVpcId,omitempty" tf:"mirror_dst_slave_vpc_id,omitempty"`

	// Mirror back-to-source high-speed Channel VpcId
	MirrorDstVPCID *string `json:"mirrorDstVpcId,omitempty" tf:"mirror_dst_vpc_id,omitempty"`

	// If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
	MirrorFollowRedirect *bool `json:"mirrorFollowRedirect,omitempty" tf:"mirror_follow_redirect,omitempty"`

	// Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See mirror_headers below.
	MirrorHeaders []MirrorHeadersObservation `json:"mirrorHeaders,omitempty" tf:"mirror_headers,omitempty"`

	// Whether it is a mirror back-to-source high-speed Channel
	MirrorIsExpressTunnel *bool `json:"mirrorIsExpressTunnel,omitempty" tf:"mirror_is_express_tunnel,omitempty"`

	// Mirror back-to-source multi-source station configuration container. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_multi_alternates below.
	MirrorMultiAlternates []MirrorMultiAlternatesObservation `json:"mirrorMultiAlternates,omitempty" tf:"mirror_multi_alternates,omitempty"`

	// Transparent transmission/to source Station
	MirrorPassOriginalSlashes *bool `json:"mirrorPassOriginalSlashes,omitempty" tf:"mirror_pass_original_slashes,omitempty"`

	// Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
	MirrorPassQueryString *bool `json:"mirrorPassQueryString,omitempty" tf:"mirror_pass_query_string,omitempty"`

	// Whether mirroring back to source does not save data
	MirrorProxyPass *bool `json:"mirrorProxyPass,omitempty" tf:"mirror_proxy_pass,omitempty"`

	// The container that saves the image back to the source and returns the response header rule. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_return_headers below.
	MirrorReturnHeaders []MirrorReturnHeadersObservation `json:"mirrorReturnHeaders,omitempty" tf:"mirror_return_headers,omitempty"`

	// Roles used when mirroring back-to-source
	MirrorRole *string `json:"mirrorRole,omitempty" tf:"mirror_role,omitempty"`

	// Mirror back-to-source back-to-source OSS automatically saves user metadata
	MirrorSaveOssMeta *bool `json:"mirrorSaveOssMeta,omitempty" tf:"mirror_save_oss_meta,omitempty"`

	// Transparent transmission of SNI
	MirrorSni *bool `json:"mirrorSni,omitempty" tf:"mirror_sni,omitempty"`

	// It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
	MirrorSwitchAllErrors *bool `json:"mirrorSwitchAllErrors,omitempty" tf:"mirror_switch_all_errors,omitempty"`

	// Save the label according to the parameters when saving the file from the mirror back to the source. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_taggings below.
	MirrorTaggings []MirrorTaggingsObservation `json:"mirrorTaggings,omitempty" tf:"mirror_taggings,omitempty"`

	// Mirror back-to-source leased line back-to-source tunnel ID
	MirrorTunnelID *string `json:"mirrorTunnelId,omitempty" tf:"mirror_tunnel_id,omitempty"`

	// The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
	MirrorURL *string `json:"mirrorUrl,omitempty" tf:"mirror_url,omitempty"`

	// Mirror back-to-source Master-backup back-to-source switching decision URL
	MirrorURLProbe *string `json:"mirrorUrlProbe,omitempty" tf:"mirror_url_probe,omitempty"`

	// Mirror back-to-source primary backup back-to-source backup station URL
	MirrorURLSlave *string `json:"mirrorUrlSlave,omitempty" tf:"mirror_url_slave,omitempty"`

	// Whether the source station LastModifiedTime is used for the image back-to-source save file.
	MirrorUserLastModified *bool `json:"mirrorUserLastModified,omitempty" tf:"mirror_user_last_modified,omitempty"`

	// Whether to use role for mirroring back to source
	MirrorUsingRole *bool `json:"mirrorUsingRole,omitempty" tf:"mirror_using_role,omitempty"`

	// Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B & c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B & c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
	PassQueryString *bool `json:"passQueryString,omitempty" tf:"pass_query_string,omitempty"`

	// The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
	RedirectType *string `json:"redirectType,omitempty" tf:"redirect_type,omitempty"`

	// The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
	ReplaceKeyPrefixWith *string `json:"replaceKeyPrefixWith,omitempty" tf:"replace_key_prefix_with,omitempty"`

	// During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
	ReplaceKeyWith *string `json:"replaceKeyWith,omitempty" tf:"replace_key_with,omitempty"`

	// Mirror back-to-source transparent source station response code list
	TransparentMirrorResponseCodes *string `json:"transparentMirrorResponseCodes,omitempty" tf:"transparent_mirror_response_codes,omitempty"`
}

type RedirectParameters struct {

	// If this field is set to true, the prefix of Object is replaced with the value specified by ReplaceKeyPrefixWith. If this field is not specified or is blank, the Object prefix is truncated.
	// +kubebuilder:validation:Optional
	EnableReplacePrefix *bool `json:"enableReplacePrefix,omitempty" tf:"enable_replace_prefix,omitempty"`

	// The status code returned during the jump. It takes effect only when the RedirectType is set to External or AliCDN.
	// +kubebuilder:validation:Optional
	HTTPRedirectCode *string `json:"httpRedirectCode,omitempty" tf:"http_redirect_code,omitempty"`

	// The domain name during the jump. The domain name must comply with the domain name specification.
	// +kubebuilder:validation:Optional
	HostName *string `json:"hostName,omitempty" tf:"host_name,omitempty"`

	// Image back-to-source allows getting Image information
	// +kubebuilder:validation:Optional
	MirrorAllowGetImageInfo *bool `json:"mirrorAllowGetImageInfo,omitempty" tf:"mirror_allow_get_image_info,omitempty"`

	// Whether to allow HeadObject in image back-to-source
	// +kubebuilder:validation:Optional
	MirrorAllowHeadObject *bool `json:"mirrorAllowHeadObject,omitempty" tf:"mirror_allow_head_object,omitempty"`

	// Mirror back-to-source allows support for video frame truncation
	// +kubebuilder:validation:Optional
	MirrorAllowVideoSnapshot *bool `json:"mirrorAllowVideoSnapshot,omitempty" tf:"mirror_allow_video_snapshot,omitempty"`

	// The status code of the mirror back-to-source trigger asynchronous pull mode.
	// +kubebuilder:validation:Optional
	MirrorAsyncStatus *float64 `json:"mirrorAsyncStatus,omitempty" tf:"mirror_async_status,omitempty"`

	// Image back Source station authentication information See mirror_auth below.
	// +kubebuilder:validation:Optional
	MirrorAuth []MirrorAuthParameters `json:"mirrorAuth,omitempty" tf:"mirror_auth,omitempty"`

	// Whether to check the MD5 of the source body. It takes effect only when the RedirectType is set to Mirror.
	// +kubebuilder:validation:Optional
	MirrorCheckMd5 *bool `json:"mirrorCheckMd5,omitempty" tf:"mirror_check_md5,omitempty"`

	// Mirrored back-to-source high-speed Channel vpregion
	// +kubebuilder:validation:Optional
	MirrorDstRegion *string `json:"mirrorDstRegion,omitempty" tf:"mirror_dst_region,omitempty"`

	// Mirroring back-to-source high-speed Channel standby station VpcId
	// +kubebuilder:validation:Optional
	MirrorDstSlaveVPCID *string `json:"mirrorDstSlaveVpcId,omitempty" tf:"mirror_dst_slave_vpc_id,omitempty"`

	// Mirror back-to-source high-speed Channel VpcId
	// +kubebuilder:validation:Optional
	MirrorDstVPCID *string `json:"mirrorDstVpcId,omitempty" tf:"mirror_dst_vpc_id,omitempty"`

	// If the result of the image back-to-source acquisition is 3xx, whether to continue to jump to the specified Location to obtain data. It takes effect only when the RedirectType is set to Mirror.
	// +kubebuilder:validation:Optional
	MirrorFollowRedirect *bool `json:"mirrorFollowRedirect,omitempty" tf:"mirror_follow_redirect,omitempty"`

	// Specifies the Header carried when the image returns to the source. It takes effect only when the RedirectType is set to Mirror. See mirror_headers below.
	// +kubebuilder:validation:Optional
	MirrorHeaders []MirrorHeadersParameters `json:"mirrorHeaders,omitempty" tf:"mirror_headers,omitempty"`

	// Whether it is a mirror back-to-source high-speed Channel
	// +kubebuilder:validation:Optional
	MirrorIsExpressTunnel *bool `json:"mirrorIsExpressTunnel,omitempty" tf:"mirror_is_express_tunnel,omitempty"`

	// Mirror back-to-source multi-source station configuration container. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_multi_alternates below.
	// +kubebuilder:validation:Optional
	MirrorMultiAlternates []MirrorMultiAlternatesParameters `json:"mirrorMultiAlternates,omitempty" tf:"mirror_multi_alternates,omitempty"`

	// Transparent transmission/to source Station
	// +kubebuilder:validation:Optional
	MirrorPassOriginalSlashes *bool `json:"mirrorPassOriginalSlashes,omitempty" tf:"mirror_pass_original_slashes,omitempty"`

	// Same as PassQueryString and takes precedence over PassQueryString. It takes effect only when the RedirectType is set to Mirror.
	// +kubebuilder:validation:Optional
	MirrorPassQueryString *bool `json:"mirrorPassQueryString,omitempty" tf:"mirror_pass_query_string,omitempty"`

	// Whether mirroring back to source does not save data
	// +kubebuilder:validation:Optional
	MirrorProxyPass *bool `json:"mirrorProxyPass,omitempty" tf:"mirror_proxy_pass,omitempty"`

	// The container that saves the image back to the source and returns the response header rule. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_return_headers below.
	// +kubebuilder:validation:Optional
	MirrorReturnHeaders []MirrorReturnHeadersParameters `json:"mirrorReturnHeaders,omitempty" tf:"mirror_return_headers,omitempty"`

	// Roles used when mirroring back-to-source
	// +kubebuilder:validation:Optional
	MirrorRole *string `json:"mirrorRole,omitempty" tf:"mirror_role,omitempty"`

	// Mirror back-to-source back-to-source OSS automatically saves user metadata
	// +kubebuilder:validation:Optional
	MirrorSaveOssMeta *bool `json:"mirrorSaveOssMeta,omitempty" tf:"mirror_save_oss_meta,omitempty"`

	// Transparent transmission of SNI
	// +kubebuilder:validation:Optional
	MirrorSni *bool `json:"mirrorSni,omitempty" tf:"mirror_sni,omitempty"`

	// It is used to judge the status of active-standby switching. The judgment logic of active-standby switching is that the source station returns an error. If MirrorSwitchAllErrors is true, it is considered a failure except the following status code: 200,206,301,302,303,307,404; If false, only the source Station Returns 5xx or times out is considered a failure.
	// +kubebuilder:validation:Optional
	MirrorSwitchAllErrors *bool `json:"mirrorSwitchAllErrors,omitempty" tf:"mirror_switch_all_errors,omitempty"`

	// Save the label according to the parameters when saving the file from the mirror back to the source. NOTE:: If you want to clean one configuration, you must set the configuration to empty value, removing from code cannot make effect. See mirror_taggings below.
	// +kubebuilder:validation:Optional
	MirrorTaggings []MirrorTaggingsParameters `json:"mirrorTaggings,omitempty" tf:"mirror_taggings,omitempty"`

	// Mirror back-to-source leased line back-to-source tunnel ID
	// +kubebuilder:validation:Optional
	MirrorTunnelID *string `json:"mirrorTunnelId,omitempty" tf:"mirror_tunnel_id,omitempty"`

	// The address of the origin of the image. It takes effect only when the RedirectType is set to Mirror. The origin address must start with http:// or https:// and end with a forward slash (/). OSS takes the Object name after the Origin address to form the origin URL.
	// +kubebuilder:validation:Optional
	MirrorURL *string `json:"mirrorUrl,omitempty" tf:"mirror_url,omitempty"`

	// Mirror back-to-source Master-backup back-to-source switching decision URL
	// +kubebuilder:validation:Optional
	MirrorURLProbe *string `json:"mirrorUrlProbe,omitempty" tf:"mirror_url_probe,omitempty"`

	// Mirror back-to-source primary backup back-to-source backup station URL
	// +kubebuilder:validation:Optional
	MirrorURLSlave *string `json:"mirrorUrlSlave,omitempty" tf:"mirror_url_slave,omitempty"`

	// Whether the source station LastModifiedTime is used for the image back-to-source save file.
	// +kubebuilder:validation:Optional
	MirrorUserLastModified *bool `json:"mirrorUserLastModified,omitempty" tf:"mirror_user_last_modified,omitempty"`

	// Whether to use role for mirroring back to source
	// +kubebuilder:validation:Optional
	MirrorUsingRole *bool `json:"mirrorUsingRole,omitempty" tf:"mirror_using_role,omitempty"`

	// Whether to carry the request parameters when executing the jump or mirror back-to-source rule. Did the user carry the request parameters when requesting OSS? a = B & c = d, and set PassQueryString to true. If the rule is a 302 jump, this request parameter is added to the Location header of the jump. For example Location:example.com? a = B & c = d, and the jump type is mirrored back-to-origin, this request parameter is also carried in the back-to-origin request initiated. Values: true, false (default)
	// +kubebuilder:validation:Optional
	PassQueryString *bool `json:"passQueryString,omitempty" tf:"pass_query_string,omitempty"`

	// The protocol at the time of the jump. It takes effect only when the RedirectType is set to External or AliCDN.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the type of jump. The value range is as follows: Mirror: Mirror back to the source. External: External redirects, that is, OSS returns a 3xx request to redirect to another address. AliCDN: Alibaba Cloud CDN jump, mainly used for Alibaba Cloud CDN. Unlike External, OSS adds an additional Header. After recognizing this Header, Alibaba Cloud CDN redirects the data to the specified address and returns the obtained data to the user instead of returning the 3xx Redirection request to the user.
	// +kubebuilder:validation:Optional
	RedirectType *string `json:"redirectType,omitempty" tf:"redirect_type,omitempty"`

	// The prefix of the Object name will be replaced with this value during Redirect. If the prefix is empty, this string is inserted in front of the Object name.
	// +kubebuilder:validation:Optional
	ReplaceKeyPrefixWith *string `json:"replaceKeyPrefixWith,omitempty" tf:"replace_key_prefix_with,omitempty"`

	// During redirection, the Object name is replaced with the value specified by ReplaceKeyWith. You can set variables in ReplaceKeyWith. Currently, the supported variable is ${key}, which indicates the name of the Object in the request.
	// +kubebuilder:validation:Optional
	ReplaceKeyWith *string `json:"replaceKeyWith,omitempty" tf:"replace_key_with,omitempty"`

	// Mirror back-to-source transparent source station response code list
	// +kubebuilder:validation:Optional
	TransparentMirrorResponseCodes *string `json:"transparentMirrorResponseCodes,omitempty" tf:"transparent_mirror_response_codes,omitempty"`
}

type ReturnHeaderInitParameters struct {

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ReturnHeaderObservation struct {

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ReturnHeaderParameters struct {

	// The tag key corresponding to the current rule
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RoutingRuleInitParameters struct {

	// Save the criteria that the rule needs to match. See condition below.
	Condition []ConditionInitParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// The Lua script configuration to be executed. See lua_config below.
	LuaConfig []LuaConfigInitParameters `json:"luaConfig,omitempty" tf:"lua_config,omitempty"`

	// Specifies the action to perform after this rule is matched. See redirect below.
	Redirect []RedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// The sequence number of the matching and executing jump rules. OSS matches rules according to this sequence number. If the match is successful, the rule is executed and subsequent rules are not executed.
	RuleNumber *float64 `json:"ruleNumber,omitempty" tf:"rule_number,omitempty"`
}

type RoutingRuleObservation struct {

	// Save the criteria that the rule needs to match. See condition below.
	Condition []ConditionObservation `json:"condition,omitempty" tf:"condition,omitempty"`

	// The Lua script configuration to be executed. See lua_config below.
	LuaConfig []LuaConfigObservation `json:"luaConfig,omitempty" tf:"lua_config,omitempty"`

	// Specifies the action to perform after this rule is matched. See redirect below.
	Redirect []RedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// The sequence number of the matching and executing jump rules. OSS matches rules according to this sequence number. If the match is successful, the rule is executed and subsequent rules are not executed.
	RuleNumber *float64 `json:"ruleNumber,omitempty" tf:"rule_number,omitempty"`
}

type RoutingRuleParameters struct {

	// Save the criteria that the rule needs to match. See condition below.
	// +kubebuilder:validation:Optional
	Condition []ConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// The Lua script configuration to be executed. See lua_config below.
	// +kubebuilder:validation:Optional
	LuaConfig []LuaConfigParameters `json:"luaConfig,omitempty" tf:"lua_config,omitempty"`

	// Specifies the action to perform after this rule is matched. See redirect below.
	// +kubebuilder:validation:Optional
	Redirect []RedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// The sequence number of the matching and executing jump rules. OSS matches rules according to this sequence number. If the match is successful, the rule is executed and subsequent rules are not executed.
	// +kubebuilder:validation:Optional
	RuleNumber *float64 `json:"ruleNumber,omitempty" tf:"rule_number,omitempty"`
}

type RoutingRulesInitParameters struct {

	// Specify a jump rule or a mirroring back-to-origin rule, with a maximum of 20 routing rules. See routing_rule below.
	RoutingRule []RoutingRuleInitParameters `json:"routingRule,omitempty" tf:"routing_rule,omitempty"`
}

type RoutingRulesObservation struct {

	// Specify a jump rule or a mirroring back-to-origin rule, with a maximum of 20 routing rules. See routing_rule below.
	RoutingRule []RoutingRuleObservation `json:"routingRule,omitempty" tf:"routing_rule,omitempty"`
}

type RoutingRulesParameters struct {

	// Specify a jump rule or a mirroring back-to-origin rule, with a maximum of 20 routing rules. See routing_rule below.
	// +kubebuilder:validation:Optional
	RoutingRule []RoutingRuleParameters `json:"routingRule,omitempty" tf:"routing_rule,omitempty"`
}

type SetInitParameters struct {

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SetObservation struct {

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SetParameters struct {

	// The tag key corresponding to the current rule
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaggingsInitParameters struct {

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaggingsObservation struct {

	// The tag key corresponding to the current rule
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaggingsParameters struct {

	// The tag key corresponding to the current rule
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Rules for Saving Label Values
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// BucketWebsiteSpec defines the desired state of BucketWebsite
type BucketWebsiteSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BucketWebsiteParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BucketWebsiteInitParameters `json:"initProvider,omitempty"`
}

// BucketWebsiteStatus defines the observed state of BucketWebsite.
type BucketWebsiteStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BucketWebsiteObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BucketWebsite is the Schema for the BucketWebsites API. Provides a Alicloud OSS Bucket Website resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type BucketWebsite struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketWebsiteSpec   `json:"spec"`
	Status            BucketWebsiteStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BucketWebsiteList contains a list of BucketWebsites
type BucketWebsiteList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BucketWebsite `json:"items"`
}

// Repository type metadata.
var (
	BucketWebsite_Kind             = "BucketWebsite"
	BucketWebsite_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BucketWebsite_Kind}.String()
	BucketWebsite_KindAPIVersion   = BucketWebsite_Kind + "." + CRDGroupVersion.String()
	BucketWebsite_GroupVersionKind = CRDGroupVersion.WithKind(BucketWebsite_Kind)
)

func init() {
	SchemeBuilder.Register(&BucketWebsite{}, &BucketWebsiteList{})
}
