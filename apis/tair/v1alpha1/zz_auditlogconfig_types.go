// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuditLogConfigInitParameters struct {

	// Indicates Whether to Enable the Audit Log.  Valid value:
	DBAudit *bool `json:"dbAudit,omitempty" tf:"db_audit,omitempty"`

	// Instance ID, Call the Describeinstances Get.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/tair/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in tair to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in tair to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Audit Log Retention Period Value: 1~365.
	Retention *float64 `json:"retention,omitempty" tf:"retention,omitempty"`
}

type AuditLogConfigObservation struct {

	// Instance Creation Time.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Indicates Whether to Enable the Audit Log.  Valid value:
	DBAudit *bool `json:"dbAudit,omitempty" tf:"db_audit,omitempty"`

	// Its value is same as instance_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Instance ID, Call the Describeinstances Get.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Audit Log Retention Period Value: 1~365.
	Retention *float64 `json:"retention,omitempty" tf:"retention,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type AuditLogConfigParameters struct {

	// Indicates Whether to Enable the Audit Log.  Valid value:
	// +kubebuilder:validation:Optional
	DBAudit *bool `json:"dbAudit,omitempty" tf:"db_audit,omitempty"`

	// Instance ID, Call the Describeinstances Get.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/tair/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in tair to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in tair to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Audit Log Retention Period Value: 1~365.
	// +kubebuilder:validation:Optional
	Retention *float64 `json:"retention,omitempty" tf:"retention,omitempty"`
}

// AuditLogConfigSpec defines the desired state of AuditLogConfig
type AuditLogConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AuditLogConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AuditLogConfigInitParameters `json:"initProvider,omitempty"`
}

// AuditLogConfigStatus defines the observed state of AuditLogConfig.
type AuditLogConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AuditLogConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AuditLogConfig is the Schema for the AuditLogConfigs API. Provides a Alicloud Tair (Redis OSS-Compatible) And Memcache (KVStore) Audit Log Config resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AuditLogConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AuditLogConfigSpec   `json:"spec"`
	Status            AuditLogConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AuditLogConfigList contains a list of AuditLogConfigs
type AuditLogConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AuditLogConfig `json:"items"`
}

// Repository type metadata.
var (
	AuditLogConfig_Kind             = "AuditLogConfig"
	AuditLogConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AuditLogConfig_Kind}.String()
	AuditLogConfig_KindAPIVersion   = AuditLogConfig_Kind + "." + CRDGroupVersion.String()
	AuditLogConfig_GroupVersionKind = CRDGroupVersion.WithKind(AuditLogConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&AuditLogConfig{}, &AuditLogConfigList{})
}
