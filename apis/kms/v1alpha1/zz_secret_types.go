// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecretInitParameters struct {

	// The description of the secret.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the KMS instance.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/kms/v1alpha1.Instance
	DkmsInstanceID *string `json:"dkmsInstanceId,omitempty" tf:"dkms_instance_id,omitempty"`

	// Reference to a Instance in kms to populate dkmsInstanceId.
	// +kubebuilder:validation:Optional
	DkmsInstanceIDRef *v1.Reference `json:"dkmsInstanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in kms to populate dkmsInstanceId.
	// +kubebuilder:validation:Optional
	DkmsInstanceIDSelector *v1.Selector `json:"dkmsInstanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to enable automatic rotation. Default value: false. Valid values: true, false.
	EnableAutomaticRotation *bool `json:"enableAutomaticRotation,omitempty" tf:"enable_automatic_rotation,omitempty"`

	// The ID of the KMS key.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/kms/v1alpha1.Key
	EncryptionKeyID *string `json:"encryptionKeyId,omitempty" tf:"encryption_key_id,omitempty"`

	// Reference to a Key in kms to populate encryptionKeyId.
	// +kubebuilder:validation:Optional
	EncryptionKeyIDRef *v1.Reference `json:"encryptionKeyIdRef,omitempty" tf:"-"`

	// Selector for a Key in kms to populate encryptionKeyId.
	// +kubebuilder:validation:Optional
	EncryptionKeyIDSelector *v1.Selector `json:"encryptionKeyIdSelector,omitempty" tf:"-"`

	// The extended configuration of the secret. For more information, see How to use it.
	ExtendedConfig *string `json:"extendedConfig,omitempty" tf:"extended_config,omitempty"`

	// Specifies whether to immediately delete a secret. Default value: false. Valid values: true, false.
	ForceDeleteWithoutRecovery *bool `json:"forceDeleteWithoutRecovery,omitempty" tf:"force_delete_without_recovery,omitempty"`

	// The content of the secret policy. The value is in the JSON format. The value can be up to 32,768 bytes in length. For more information, see How to use it.
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// Specifies the recovery period of the secret if you do not forcibly delete it. Unit: Days. Default value: 30. Valid values: 7 to 30. NOTE:  If force_delete_without_recovery is set to true, recovery_window_in_days will be ignored.
	RecoveryWindowInDays *float64 `json:"recoveryWindowInDays,omitempty" tf:"recovery_window_in_days,omitempty"`

	// The interval for automatic rotation. For more information, see How to use it.
	RotationInterval *string `json:"rotationInterval,omitempty" tf:"rotation_interval,omitempty"`

	// The data of the secret. NOTE: From version 1.204.1, secret_data updating diff will be ignored when secret_type is not Generic.
	SecretDataSecretRef v1.SecretKeySelector `json:"secretDataSecretRef" tf:"-"`

	// The type of the secret value. Default value: text. Valid values: text, binary.
	SecretDataType *string `json:"secretDataType,omitempty" tf:"secret_data_type,omitempty"`

	// The name of the secret. For more information, see How to use it.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The type of the secret. Valid values:
	SecretType *string `json:"secretType,omitempty" tf:"secret_type,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The version number of the initial version.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`

	// The stage label that is used to mark the new version.
	// +listType=set
	VersionStages []*string `json:"versionStages,omitempty" tf:"version_stages,omitempty"`
}

type SecretObservation struct {

	// The ARN of the secret.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// (Available since v1.224.0) The time when the secret is created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The description of the secret.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the KMS instance.
	DkmsInstanceID *string `json:"dkmsInstanceId,omitempty" tf:"dkms_instance_id,omitempty"`

	// Specifies whether to enable automatic rotation. Default value: false. Valid values: true, false.
	EnableAutomaticRotation *bool `json:"enableAutomaticRotation,omitempty" tf:"enable_automatic_rotation,omitempty"`

	// The ID of the KMS key.
	EncryptionKeyID *string `json:"encryptionKeyId,omitempty" tf:"encryption_key_id,omitempty"`

	// The extended configuration of the secret. For more information, see How to use it.
	ExtendedConfig *string `json:"extendedConfig,omitempty" tf:"extended_config,omitempty"`

	// Specifies whether to immediately delete a secret. Default value: false. Valid values: true, false.
	ForceDeleteWithoutRecovery *bool `json:"forceDeleteWithoutRecovery,omitempty" tf:"force_delete_without_recovery,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The time when the secret is scheduled to be deleted.
	PlannedDeleteTime *string `json:"plannedDeleteTime,omitempty" tf:"planned_delete_time,omitempty"`

	// The content of the secret policy. The value is in the JSON format. The value can be up to 32,768 bytes in length. For more information, see How to use it.
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// Specifies the recovery period of the secret if you do not forcibly delete it. Unit: Days. Default value: 30. Valid values: 7 to 30. NOTE:  If force_delete_without_recovery is set to true, recovery_window_in_days will be ignored.
	RecoveryWindowInDays *float64 `json:"recoveryWindowInDays,omitempty" tf:"recovery_window_in_days,omitempty"`

	// The interval for automatic rotation. For more information, see How to use it.
	RotationInterval *string `json:"rotationInterval,omitempty" tf:"rotation_interval,omitempty"`

	// The type of the secret value. Default value: text. Valid values: text, binary.
	SecretDataType *string `json:"secretDataType,omitempty" tf:"secret_data_type,omitempty"`

	// The name of the secret. For more information, see How to use it.
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The type of the secret. Valid values:
	SecretType *string `json:"secretType,omitempty" tf:"secret_type,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The version number of the initial version.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`

	// The stage label that is used to mark the new version.
	// +listType=set
	VersionStages []*string `json:"versionStages,omitempty" tf:"version_stages,omitempty"`
}

type SecretParameters struct {

	// The description of the secret.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the KMS instance.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/kms/v1alpha1.Instance
	// +kubebuilder:validation:Optional
	DkmsInstanceID *string `json:"dkmsInstanceId,omitempty" tf:"dkms_instance_id,omitempty"`

	// Reference to a Instance in kms to populate dkmsInstanceId.
	// +kubebuilder:validation:Optional
	DkmsInstanceIDRef *v1.Reference `json:"dkmsInstanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in kms to populate dkmsInstanceId.
	// +kubebuilder:validation:Optional
	DkmsInstanceIDSelector *v1.Selector `json:"dkmsInstanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to enable automatic rotation. Default value: false. Valid values: true, false.
	// +kubebuilder:validation:Optional
	EnableAutomaticRotation *bool `json:"enableAutomaticRotation,omitempty" tf:"enable_automatic_rotation,omitempty"`

	// The ID of the KMS key.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/kms/v1alpha1.Key
	// +kubebuilder:validation:Optional
	EncryptionKeyID *string `json:"encryptionKeyId,omitempty" tf:"encryption_key_id,omitempty"`

	// Reference to a Key in kms to populate encryptionKeyId.
	// +kubebuilder:validation:Optional
	EncryptionKeyIDRef *v1.Reference `json:"encryptionKeyIdRef,omitempty" tf:"-"`

	// Selector for a Key in kms to populate encryptionKeyId.
	// +kubebuilder:validation:Optional
	EncryptionKeyIDSelector *v1.Selector `json:"encryptionKeyIdSelector,omitempty" tf:"-"`

	// The extended configuration of the secret. For more information, see How to use it.
	// +kubebuilder:validation:Optional
	ExtendedConfig *string `json:"extendedConfig,omitempty" tf:"extended_config,omitempty"`

	// Specifies whether to immediately delete a secret. Default value: false. Valid values: true, false.
	// +kubebuilder:validation:Optional
	ForceDeleteWithoutRecovery *bool `json:"forceDeleteWithoutRecovery,omitempty" tf:"force_delete_without_recovery,omitempty"`

	// The content of the secret policy. The value is in the JSON format. The value can be up to 32,768 bytes in length. For more information, see How to use it.
	// +kubebuilder:validation:Optional
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// Specifies the recovery period of the secret if you do not forcibly delete it. Unit: Days. Default value: 30. Valid values: 7 to 30. NOTE:  If force_delete_without_recovery is set to true, recovery_window_in_days will be ignored.
	// +kubebuilder:validation:Optional
	RecoveryWindowInDays *float64 `json:"recoveryWindowInDays,omitempty" tf:"recovery_window_in_days,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The interval for automatic rotation. For more information, see How to use it.
	// +kubebuilder:validation:Optional
	RotationInterval *string `json:"rotationInterval,omitempty" tf:"rotation_interval,omitempty"`

	// The data of the secret. NOTE: From version 1.204.1, secret_data updating diff will be ignored when secret_type is not Generic.
	// +kubebuilder:validation:Optional
	SecretDataSecretRef v1.SecretKeySelector `json:"secretDataSecretRef" tf:"-"`

	// The type of the secret value. Default value: text. Valid values: text, binary.
	// +kubebuilder:validation:Optional
	SecretDataType *string `json:"secretDataType,omitempty" tf:"secret_data_type,omitempty"`

	// The name of the secret. For more information, see How to use it.
	// +kubebuilder:validation:Optional
	SecretName *string `json:"secretName,omitempty" tf:"secret_name,omitempty"`

	// The type of the secret. Valid values:
	// +kubebuilder:validation:Optional
	SecretType *string `json:"secretType,omitempty" tf:"secret_type,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The version number of the initial version.
	// +kubebuilder:validation:Optional
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`

	// The stage label that is used to mark the new version.
	// +kubebuilder:validation:Optional
	// +listType=set
	VersionStages []*string `json:"versionStages,omitempty" tf:"version_stages,omitempty"`
}

// SecretSpec defines the desired state of Secret
type SecretSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecretParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SecretInitParameters `json:"initProvider,omitempty"`
}

// SecretStatus defines the observed state of Secret.
type SecretStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecretObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Secret is the Schema for the Secrets API. Provides a Alicloud KMS Secret resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Secret struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.secretDataSecretRef)",message="spec.forProvider.secretDataSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.secretName) || (has(self.initProvider) && has(self.initProvider.secretName))",message="spec.forProvider.secretName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.versionId) || (has(self.initProvider) && has(self.initProvider.versionId))",message="spec.forProvider.versionId is a required parameter"
	Spec   SecretSpec   `json:"spec"`
	Status SecretStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecretList contains a list of Secrets
type SecretList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Secret `json:"items"`
}

// Repository type metadata.
var (
	Secret_Kind             = "Secret"
	Secret_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Secret_Kind}.String()
	Secret_KindAPIVersion   = Secret_Kind + "." + CRDGroupVersion.String()
	Secret_GroupVersionKind = CRDGroupVersion.WithKind(Secret_Kind)
)

func init() {
	SchemeBuilder.Register(&Secret{}, &SecretList{})
}
