#!/bin/bash

# filter-package-crds.sh - Filter CRDs in package directory based on provider family
# This script creates provider-specific package directories with filtered CRDs

set -e

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
BASE_PACKAGE_DIR="$ROOT_DIR/package"
PROVIDER_FAMILY="${1:-monolith}"

if [ "$PROVIDER_FAMILY" = "monolith" ]; then
    echo "Using monolith package - no filtering needed"
    exit 0
fi

if [ "$PROVIDER_FAMILY" = "config" ]; then
    echo "Using config package - only core CRDs needed"
    # For config provider, we only need the core provider CRDs
    TEMP_PACKAGE_DIR="$ROOT_DIR/.package-$PROVIDER_FAMILY"
    rm -rf "$TEMP_PACKAGE_DIR"
    mkdir -p "$TEMP_PACKAGE_DIR/crds"
    
    # Copy base package files (except CRDs)
    if [ -f "$BASE_PACKAGE_DIR/crossplane.yaml" ]; then
        cp "$BASE_PACKAGE_DIR/crossplane.yaml" "$TEMP_PACKAGE_DIR/"
    fi
    
    if [ -f "$BASE_PACKAGE_DIR/crossplane.yaml.tmpl" ]; then
        cp "$BASE_PACKAGE_DIR/crossplane.yaml.tmpl" "$TEMP_PACKAGE_DIR/"
    fi
    
    if [ -f "$BASE_PACKAGE_DIR/auth.yaml" ]; then
        cp "$BASE_PACKAGE_DIR/auth.yaml" "$TEMP_PACKAGE_DIR/"
    fi
    
    # Only include core provider CRDs (ProviderConfig, StoreConfig, etc.)
    find "$BASE_PACKAGE_DIR/crds" -name "alibabacloud.crossplane.io_*.yaml" -exec cp {} "$TEMP_PACKAGE_DIR/crds/" \; 2>/dev/null || true
    
    echo "Config provider will have $(find "$TEMP_PACKAGE_DIR/crds" -name "*.yaml" | wc -l) core CRDs"
    
    # Replace the package directory with the filtered one
    rm -rf "$BASE_PACKAGE_DIR"
    mv "$TEMP_PACKAGE_DIR" "$BASE_PACKAGE_DIR"
    
    CRD_COUNT=$(find "$BASE_PACKAGE_DIR/crds" -name "*.yaml" | wc -l)
    echo "Config package now contains $CRD_COUNT CRDs"
    
    exit 0
fi

echo "Filtering CRDs for provider family: $PROVIDER_FAMILY"

# Get CRD pattern for the provider family
get_pattern() {
    case "$1" in
        "ack") echo "ack.alibabacloud.crossplane.io_" ;;
        "ackone") echo "ackone.alibabacloud.crossplane.io_" ;;
        "alb") echo "alb.alibabacloud.crossplane.io_" ;;
        "alidns") echo "alidns.alibabacloud.crossplane.io_" ;;
        "cdn") echo "cdn.alibabacloud.crossplane.io_" ;;
        "cloudmonitorservice") echo "cloudmonitorservice.alibabacloud.crossplane.io_" ;;
        "ecs") echo "ecs.alibabacloud.crossplane.io_" ;;
        "kms") echo "kms.alibabacloud.crossplane.io_" ;;
        "messageservice") echo "messageservice.alibabacloud.crossplane.io_" ;;
        "oss") echo "oss.alibabacloud.crossplane.io_" ;;
        "polardb") echo "polardb.alibabacloud.crossplane.io_" ;;
        "privatelink") echo "privatelink.alibabacloud.crossplane.io_" ;;
        "quotas") echo "quotas.alibabacloud.crossplane.io_" ;;
        "ram") echo "ram.alibabacloud.crossplane.io_" ;;
        "tair") echo "tair.alibabacloud.crossplane.io_" ;;
        "vpc") echo "vpc.alibabacloud.crossplane.io_" ;;
        *) echo "${1}.alibabacloud.crossplane.io_" ;;
    esac
}

PATTERN=$(get_pattern "$PROVIDER_FAMILY")

# Backup original CRDs before filtering
if [ ! -d "$ROOT_DIR/.original-package-crds" ]; then
    cp -r "$BASE_PACKAGE_DIR/crds" "$ROOT_DIR/.original-package-crds"
fi

# Create temporary package directory with filtered CRDs
TEMP_PACKAGE_DIR="$ROOT_DIR/.package-$PROVIDER_FAMILY"
rm -rf "$TEMP_PACKAGE_DIR"
mkdir -p "$TEMP_PACKAGE_DIR/crds"

# Copy base package files (except CRDs)
# Note: crossplane.yaml should already be generated by the Makefile before this script runs
if [ -f "$BASE_PACKAGE_DIR/crossplane.yaml" ]; then
    cp "$BASE_PACKAGE_DIR/crossplane.yaml" "$TEMP_PACKAGE_DIR/"
else
    echo "Warning: crossplane.yaml not found in package directory"
fi

if [ -f "$BASE_PACKAGE_DIR/crossplane.yaml.tmpl" ]; then
    cp "$BASE_PACKAGE_DIR/crossplane.yaml.tmpl" "$TEMP_PACKAGE_DIR/"
fi

if [ -f "$BASE_PACKAGE_DIR/auth.yaml" ]; then
    cp "$BASE_PACKAGE_DIR/auth.yaml" "$TEMP_PACKAGE_DIR/"
fi

# Family providers should include their specific CRDs but NOT core provider CRDs
# Only include family-specific CRDs for family providers (not config)
find "$BASE_PACKAGE_DIR/crds" -name "${PATTERN}*.yaml" -exec cp {} "$TEMP_PACKAGE_DIR/crds/" \; 2>/dev/null || true

# For VPC provider, also include VPC-specific CRDs from privatelink that contain "vpc"
if [ "$PROVIDER_FAMILY" = "vpc" ]; then
    find "$BASE_PACKAGE_DIR/crds" -name "privatelink.alibabacloud.crossplane.io_vpc*.yaml" -exec cp {} "$TEMP_PACKAGE_DIR/crds/" \; 2>/dev/null || true
fi

echo "Family provider '$PROVIDER_FAMILY' will have $(find "$TEMP_PACKAGE_DIR/crds" -name "*.yaml" | wc -l) specific CRDs (no core CRDs)"

# Replace the package directory with the filtered one
rm -rf "$BASE_PACKAGE_DIR"
mv "$TEMP_PACKAGE_DIR" "$BASE_PACKAGE_DIR"

CRD_COUNT=$(find "$BASE_PACKAGE_DIR/crds" -name "*.yaml" | wc -l)
echo "Filtered package now contains $CRD_COUNT CRDs for $PROVIDER_FAMILY"

# List the filtered CRDs
echo "CRDs included for $PROVIDER_FAMILY:"
find "$BASE_PACKAGE_DIR/crds" -name "*.yaml" -exec basename {} \; | sort