// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConcurrencyConfigInitParameters struct {

	// Function Name
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Reference to a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameRef *v1.Reference `json:"functionNameRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameSelector *v1.Selector `json:"functionNameSelector,omitempty" tf:"-"`

	// Reserved Concurrency. Functions reserve a part of account concurrency. Other functions cannot use this part of concurrency. Reserved concurrency includes the total concurrency of Reserved Instances and As-You-go instances.
	ReservedConcurrency *float64 `json:"reservedConcurrency,omitempty" tf:"reserved_concurrency,omitempty"`
}

type ConcurrencyConfigObservation struct {

	// (Available since v1.234.0) Resource identity of the function
	FunctionArn *string `json:"functionArn,omitempty" tf:"function_arn,omitempty"`

	// Function Name
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Reserved Concurrency. Functions reserve a part of account concurrency. Other functions cannot use this part of concurrency. Reserved concurrency includes the total concurrency of Reserved Instances and As-You-go instances.
	ReservedConcurrency *float64 `json:"reservedConcurrency,omitempty" tf:"reserved_concurrency,omitempty"`
}

type ConcurrencyConfigParameters struct {

	// Function Name
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/fcv3/v1alpha1.Function
	// +kubebuilder:validation:Optional
	FunctionName *string `json:"functionName,omitempty" tf:"function_name,omitempty"`

	// Reference to a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameRef *v1.Reference `json:"functionNameRef,omitempty" tf:"-"`

	// Selector for a Function in fcv3 to populate functionName.
	// +kubebuilder:validation:Optional
	FunctionNameSelector *v1.Selector `json:"functionNameSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Reserved Concurrency. Functions reserve a part of account concurrency. Other functions cannot use this part of concurrency. Reserved concurrency includes the total concurrency of Reserved Instances and As-You-go instances.
	// +kubebuilder:validation:Optional
	ReservedConcurrency *float64 `json:"reservedConcurrency,omitempty" tf:"reserved_concurrency,omitempty"`
}

// ConcurrencyConfigSpec defines the desired state of ConcurrencyConfig
type ConcurrencyConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ConcurrencyConfigParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ConcurrencyConfigInitParameters `json:"initProvider,omitempty"`
}

// ConcurrencyConfigStatus defines the observed state of ConcurrencyConfig.
type ConcurrencyConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConcurrencyConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ConcurrencyConfig is the Schema for the ConcurrencyConfigs API. Provides a Alicloud FCV3 Concurrency Config resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type ConcurrencyConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConcurrencyConfigSpec   `json:"spec"`
	Status            ConcurrencyConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConcurrencyConfigList contains a list of ConcurrencyConfigs
type ConcurrencyConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ConcurrencyConfig `json:"items"`
}

// Repository type metadata.
var (
	ConcurrencyConfig_Kind             = "ConcurrencyConfig"
	ConcurrencyConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ConcurrencyConfig_Kind}.String()
	ConcurrencyConfig_KindAPIVersion   = ConcurrencyConfig_Kind + "." + CRDGroupVersion.String()
	ConcurrencyConfig_GroupVersionKind = CRDGroupVersion.WithKind(ConcurrencyConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&ConcurrencyConfig{}, &ConcurrencyConfigList{})
}
