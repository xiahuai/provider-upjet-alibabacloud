// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AscriptInitParameters struct {

	// AScript name.
	AscriptName *string `json:"ascriptName,omitempty" tf:"ascript_name,omitempty"`

	// Whether to PreCheck only this request
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Whether AScript is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Whether extension parameters are enabled. When ExtAttributeEnabled is true, ExtAttributes must be set.
	ExtAttributeEnabled *bool `json:"extAttributeEnabled,omitempty" tf:"ext_attribute_enabled,omitempty"`

	// Expand the list of attributes. When ExtAttributeEnabled is true, ExtAttributes must be set. See ext_attributes below.
	ExtAttributes []ExtAttributesInitParameters `json:"extAttributes,omitempty" tf:"ext_attributes,omitempty"`

	// Listener ID of script attribution
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.Listener
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// Script execution location.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// AScript script content.
	ScriptContent *string `json:"scriptContent,omitempty" tf:"script_content,omitempty"`
}

type AscriptObservation struct {

	// AScript name.
	AscriptName *string `json:"ascriptName,omitempty" tf:"ascript_name,omitempty"`

	// Whether to PreCheck only this request
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Whether AScript is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Whether extension parameters are enabled. When ExtAttributeEnabled is true, ExtAttributes must be set.
	ExtAttributeEnabled *bool `json:"extAttributeEnabled,omitempty" tf:"ext_attribute_enabled,omitempty"`

	// Expand the list of attributes. When ExtAttributeEnabled is true, ExtAttributes must be set. See ext_attributes below.
	ExtAttributes []ExtAttributesObservation `json:"extAttributes,omitempty" tf:"ext_attributes,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Listener ID of script attribution
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Script execution location.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// AScript script content.
	ScriptContent *string `json:"scriptContent,omitempty" tf:"script_content,omitempty"`

	// Script status
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type AscriptParameters struct {

	// AScript name.
	// +kubebuilder:validation:Optional
	AscriptName *string `json:"ascriptName,omitempty" tf:"ascript_name,omitempty"`

	// Whether to PreCheck only this request
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Whether AScript is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Whether extension parameters are enabled. When ExtAttributeEnabled is true, ExtAttributes must be set.
	// +kubebuilder:validation:Optional
	ExtAttributeEnabled *bool `json:"extAttributeEnabled,omitempty" tf:"ext_attribute_enabled,omitempty"`

	// Expand the list of attributes. When ExtAttributeEnabled is true, ExtAttributes must be set. See ext_attributes below.
	// +kubebuilder:validation:Optional
	ExtAttributes []ExtAttributesParameters `json:"extAttributes,omitempty" tf:"ext_attributes,omitempty"`

	// Listener ID of script attribution
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/alb/v1alpha1.Listener
	// +kubebuilder:validation:Optional
	ListenerID *string `json:"listenerId,omitempty" tf:"listener_id,omitempty"`

	// Reference to a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDRef *v1.Reference `json:"listenerIdRef,omitempty" tf:"-"`

	// Selector for a Listener in alb to populate listenerId.
	// +kubebuilder:validation:Optional
	ListenerIDSelector *v1.Selector `json:"listenerIdSelector,omitempty" tf:"-"`

	// Script execution location.
	// +kubebuilder:validation:Optional
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// AScript script content.
	// +kubebuilder:validation:Optional
	ScriptContent *string `json:"scriptContent,omitempty" tf:"script_content,omitempty"`
}

type ExtAttributesInitParameters struct {

	// Key to extend attribute
	AttributeKey *string `json:"attributeKey,omitempty" tf:"attribute_key,omitempty"`

	// The value of the extended attribute
	AttributeValue *string `json:"attributeValue,omitempty" tf:"attribute_value,omitempty"`
}

type ExtAttributesObservation struct {

	// Key to extend attribute
	AttributeKey *string `json:"attributeKey,omitempty" tf:"attribute_key,omitempty"`

	// The value of the extended attribute
	AttributeValue *string `json:"attributeValue,omitempty" tf:"attribute_value,omitempty"`
}

type ExtAttributesParameters struct {

	// Key to extend attribute
	// +kubebuilder:validation:Optional
	AttributeKey *string `json:"attributeKey,omitempty" tf:"attribute_key,omitempty"`

	// The value of the extended attribute
	// +kubebuilder:validation:Optional
	AttributeValue *string `json:"attributeValue,omitempty" tf:"attribute_value,omitempty"`
}

// AscriptSpec defines the desired state of Ascript
type AscriptSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AscriptParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AscriptInitParameters `json:"initProvider,omitempty"`
}

// AscriptStatus defines the observed state of Ascript.
type AscriptStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AscriptObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Ascript is the Schema for the Ascripts API. Provides a Alicloud Application Load Balancer (ALB) A Script resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Ascript struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ascriptName) || (has(self.initProvider) && has(self.initProvider.ascriptName))",message="spec.forProvider.ascriptName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.position) || (has(self.initProvider) && has(self.initProvider.position))",message="spec.forProvider.position is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scriptContent) || (has(self.initProvider) && has(self.initProvider.scriptContent))",message="spec.forProvider.scriptContent is a required parameter"
	Spec   AscriptSpec   `json:"spec"`
	Status AscriptStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AscriptList contains a list of Ascripts
type AscriptList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Ascript `json:"items"`
}

// Repository type metadata.
var (
	Ascript_Kind             = "Ascript"
	Ascript_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Ascript_Kind}.String()
	Ascript_KindAPIVersion   = Ascript_Kind + "." + CRDGroupVersion.String()
	Ascript_GroupVersionKind = CRDGroupVersion.WithKind(Ascript_Kind)
)

func init() {
	SchemeBuilder.Register(&Ascript{}, &AscriptList{})
}
