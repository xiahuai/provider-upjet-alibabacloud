// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InstanceInitParameters struct {

	// Whether to renewal a KVStore DBInstance automatically or not. It is valid when payment_type is PrePaid. Default value: false.
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Auto-renewal period of an KVStore DBInstance, in the unit of the month. It is valid when payment_type is PrePaid. Valid values: [1~12]. Default value: 1.
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// Specifies whether to use a coupon. Default value: false.
	AutoUseCoupon *bool `json:"autoUseCoupon,omitempty" tf:"auto_use_coupon,omitempty"`

	// The ID of the backup file of the source instance.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Backup period.
	// +listType=set
	BackupPeriod []*string `json:"backupPeriod,omitempty" tf:"backup_period,omitempty"`

	// Backup time, the format is HH:mmZ-HH:mmZ (UTC time).
	BackupTime *string `json:"backupTime,omitempty" tf:"backup_time,omitempty"`

	// The total bandwidth of the instance. NOTE: From version 1.232.0, bandwidth can be set. If the instance is a cluster instance, bandwidth must be divisible by the number of shard_count in the instance, and if the instance is a read/write splitting instance, bandwidth cannot be set.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The ID of the event or the business information.
	BusinessInfo *string `json:"businessInfo,omitempty" tf:"business_info,omitempty"`

	// The storage capacity of the KVStore DBInstance. Unit: MB.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// The configuration of the KVStore DBInstance. Available parameters can refer to the latest docs Instance configurations table.
	// +mapType=granular
	Config map[string]*string `json:"config,omitempty" tf:"config,omitempty"`

	// The coupon code. NOTE: The default value youhuiquan_promotion_option_id_for_blank removed since v1.216.0, this can cause your status file to change even if it has not been modified, so please review your change plan before apply change plan.
	CouponNo *string `json:"couponNo,omitempty" tf:"coupon_no,omitempty"`

	// The name of KVStore DBInstance. It is a string of 2 to 256 characters.
	DBInstanceName *string `json:"dbInstanceName,omitempty" tf:"db_instance_name,omitempty"`

	// The ID of the dedicated cluster. This parameter is required when you create a Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance in a dedicated cluster.
	DedicatedHostGroupID *string `json:"dedicatedHostGroupId,omitempty" tf:"dedicated_host_group_id,omitempty"`

	// Specifies whether to precheck the request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The time when the database is switched after the instance is migrated, or when the major version is upgraded, or when the instance class is upgraded. Valid values:
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// Turn on or off incremental backup. Valid values: 1, 0. Default value: 0
	EnableBackupLog *float64 `json:"enableBackupLog,omitempty" tf:"enable_backup_log,omitempty"`

	// The Custom key ID, which you can get by calling DescribeEncryptionKeyList.If this parameter is not passed, the key is automatically generated by the key management service. To create a custom key, you can call the CreateKey interface of the key management service.
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// The Encryption algorithm, default AES-CTR-256.Note that this parameter is only available when the TDEStatus parameter is Enabled.
	EncryptionName *string `json:"encryptionName,omitempty" tf:"encryption_name,omitempty"`

	// The engine version of the KVStore DBInstance. Valid values: ["2.8", "4.0", "5.0", "6.0", "7.0"]. Default value: 5.0.
	// NOTE: When instance_type = Memcache, the engine_version only supports "4.0".
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies whether to forcibly change the type. Default value: true.
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Whether to create a distributed cache. Default value: false.
	GlobalInstance *bool `json:"globalInstance,omitempty" tf:"global_instance,omitempty"`

	// The ID of distributed cache.
	GlobalInstanceID *string `json:"globalInstanceId,omitempty" tf:"global_instance_id,omitempty"`

	// Type of the applied Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance. It can be retrieved by data source alicloud_kvstore_instance_classes
	// or referring to help-docs Instance type table.
	InstanceClass *string `json:"instanceClass,omitempty" tf:"instance_class,omitempty"`

	// Whether to open the release protection.
	InstanceReleaseProtection *bool `json:"instanceReleaseProtection,omitempty" tf:"instance_release_protection,omitempty"`

	// The engine type of the KVStore DBInstance. Valid values: Redis or Memcache. Default value: Redis.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Specifies whether to enable automatic minor version update. Valid values:
	IsAutoUpgradeOpen *string `json:"isAutoUpgradeOpen,omitempty" tf:"is_auto_upgrade_open,omitempty"`

	// An KMS encrypts password used to an instance. If the password is filled in, this field will be ignored.
	KMSEncryptedPassword *string `json:"kmsEncryptedPassword,omitempty" tf:"kms_encrypted_password,omitempty"`

	// An KMS encryption context used to decrypt kms_encrypted_password before creating or updating instance with kms_encrypted_password. See Encryption Context. It is valid when kms_encrypted_password is set.
	// +mapType=granular
	KMSEncryptionContext map[string]*string `json:"kmsEncryptionContext,omitempty" tf:"kms_encryption_context,omitempty"`

	// The end time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	MaintainEndTime *string `json:"maintainEndTime,omitempty" tf:"maintain_end_time,omitempty"`

	// The start time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	MaintainStartTime *string `json:"maintainStartTime,omitempty" tf:"maintain_start_time,omitempty"`

	// (Removed since v1.216.0) The method of modifying the whitelist. NOTE: Field modify_mode has been removed from provider version 1.216.0.
	ModifyMode *float64 `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// Specifies a change type when you change the configuration of a subscription instance. Valid values: UPGRADE, DOWNGRADE. Default value: UPGRADE. UPGRADE means upgrades the configuration of a subscription instance. DOWNGRADE means downgrades the configuration of a subscription instance.
	OrderType *string `json:"orderType,omitempty" tf:"order_type,omitempty"`

	// The password of the KVStore DBInstance. The password that is used to connect to the instance. The password must be 8 to 32 characters in length and must contain at least three of the following character types: uppercase letters, lowercase letters, special characters, and digits. Special characters include: ! @ # $ % ^ & * ( ) _ + - =
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// The billing method of the KVStore DBInstance. Valid values: PrePaid, PostPaid. Default value: PostPaid.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The duration that you will buy KVStore DBInstance (in month). It is valid when payment_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	Period *string `json:"period,omitempty" tf:"period,omitempty"`

	// It has been deprecated from provider version 1.101.0 and resource alicloud_kvstore_connection instead.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Private network connection port, used to modify the private network connection port.
	PrivateConnectionPort *string `json:"privateConnectionPort,omitempty" tf:"private_connection_port,omitempty"`

	// Private network connection prefix, used to modify the private network connection address. Only supports updating private network connections for existing instance.
	PrivateConnectionPrefix *string `json:"privateConnectionPrefix,omitempty" tf:"private_connection_prefix,omitempty"`

	// The internal IP address of the instance.
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// The number of read replicas in the primary zone. Valid values: 1 to 9.
	ReadOnlyCount *float64 `json:"readOnlyCount,omitempty" tf:"read_only_count,omitempty"`

	// The ID of resource group which the resource belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The point in time of a backup file.
	RestoreTime *string `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// The Specify the global resource descriptor ARN (Alibaba Cloud Resource Name) information of the role to be authorized, and use the related key management services after the authorization is completed, in the format: acs:ram::$accountID:role/$roleName.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.RoleArnExtractor()
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Modifies the SSL status. Valid values: Disable, Enable and Update.
	// NOTE: This functionality is supported by Cluster mode (Redis 2.8, 4.0, 5.0) and Standard mode( Redis 2.8 only).
	SSLEnable *string `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// The ID of the secondary zone to which you want to migrate the Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance.
	// -> NOTE: If you specify this parameter, the master node and replica node of the instance can be deployed in different zones and disaster recovery is implemented across zones. The instance can withstand failures in data centers.
	SecondaryZoneID *string `json:"secondaryZoneId,omitempty" tf:"secondary_zone_id,omitempty"`

	// The ID of security groups. Separate multiple security group IDs with commas (,), such as sg-***,sg-***,sg-***.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.SecurityGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
	SecurityIPGroupAttribute *string `json:"securityIpGroupAttribute,omitempty" tf:"security_ip_group_attribute,omitempty"`

	// The name of the whitelist group.
	SecurityIPGroupName *string `json:"securityIpGroupName,omitempty" tf:"security_ip_group_name,omitempty"`

	// The IP addresses in the whitelist group. The maximum number of IP addresses in the whitelist group is 1000.
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// The number of data shards. This parameter is available only if you create a cluster instance that uses cloud disks. You can use this parameter to specify a custom number of data shards. NOTE: From version 1.216.0, shard_count can be modified.
	ShardCount *float64 `json:"shardCount,omitempty" tf:"shard_count,omitempty"`

	// The number of read replicas in the secondary zone. NOTE:: When you create a multi-zone read/write splitting instance, you must specify both secondary_zone_id and slave_read_only_count.
	// -> NOTE: The sum of read_only_count and slave_read_only_count cannot be greater than 9.
	SlaveReadOnlyCount *float64 `json:"slaveReadOnlyCount,omitempty" tf:"slave_read_only_count,omitempty"`

	// The ID of the source instance.
	SrcdbInstanceID *string `json:"srcdbInstanceId,omitempty" tf:"srcdb_instance_id,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies whether to enable TDE. Valid values: Enabled.
	// NOTE:: TDE cannot be disabled after it is enabled. Before you enable it, evaluate whether this feature affects.
	// your business. For more information, see Enable TDE.
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Only meaningful if instance_type is Redis and network type is VPC. Valid values: Close, Open. Default value: Open. Close means the redis instance can be accessed without authentication. Open means authentication is required.
	VPCAuthMode *string `json:"vpcAuthMode,omitempty" tf:"vpc_auth_mode,omitempty"`

	// The ID of VSwitch.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`

	// The ID of the zone.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type InstanceObservation struct {

	// Whether to renewal a KVStore DBInstance automatically or not. It is valid when payment_type is PrePaid. Default value: false.
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Auto-renewal period of an KVStore DBInstance, in the unit of the month. It is valid when payment_type is PrePaid. Valid values: [1~12]. Default value: 1.
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// Specifies whether to use a coupon. Default value: false.
	AutoUseCoupon *bool `json:"autoUseCoupon,omitempty" tf:"auto_use_coupon,omitempty"`

	// The ID of the backup file of the source instance.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Backup period.
	// +listType=set
	BackupPeriod []*string `json:"backupPeriod,omitempty" tf:"backup_period,omitempty"`

	// Backup time, the format is HH:mmZ-HH:mmZ (UTC time).
	BackupTime *string `json:"backupTime,omitempty" tf:"backup_time,omitempty"`

	// The total bandwidth of the instance. NOTE: From version 1.232.0, bandwidth can be set. If the instance is a cluster instance, bandwidth must be divisible by the number of shard_count in the instance, and if the instance is a read/write splitting instance, bandwidth cannot be set.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The ID of the event or the business information.
	BusinessInfo *string `json:"businessInfo,omitempty" tf:"business_info,omitempty"`

	// The storage capacity of the KVStore DBInstance. Unit: MB.
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// The configuration of the KVStore DBInstance. Available parameters can refer to the latest docs Instance configurations table.
	// +mapType=granular
	Config map[string]*string `json:"config,omitempty" tf:"config,omitempty"`

	// Intranet connection address of the KVStore instance.
	ConnectionDomain *string `json:"connectionDomain,omitempty" tf:"connection_domain,omitempty"`

	// (Deprecated since v1.101.0) Indicates whether the address is a private endpoint.
	ConnectionString *string `json:"connectionString,omitempty" tf:"connection_string,omitempty"`

	// The coupon code. NOTE: The default value youhuiquan_promotion_option_id_for_blank removed since v1.216.0, this can cause your status file to change even if it has not been modified, so please review your change plan before apply change plan.
	CouponNo *string `json:"couponNo,omitempty" tf:"coupon_no,omitempty"`

	// The name of KVStore DBInstance. It is a string of 2 to 256 characters.
	DBInstanceName *string `json:"dbInstanceName,omitempty" tf:"db_instance_name,omitempty"`

	// The ID of the dedicated cluster. This parameter is required when you create a Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance in a dedicated cluster.
	DedicatedHostGroupID *string `json:"dedicatedHostGroupId,omitempty" tf:"dedicated_host_group_id,omitempty"`

	// Specifies whether to precheck the request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The time when the database is switched after the instance is migrated, or when the major version is upgraded, or when the instance class is upgraded. Valid values:
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// Turn on or off incremental backup. Valid values: 1, 0. Default value: 0
	EnableBackupLog *float64 `json:"enableBackupLog,omitempty" tf:"enable_backup_log,omitempty"`

	// The Custom key ID, which you can get by calling DescribeEncryptionKeyList.If this parameter is not passed, the key is automatically generated by the key management service. To create a custom key, you can call the CreateKey interface of the key management service.
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// The Encryption algorithm, default AES-CTR-256.Note that this parameter is only available when the TDEStatus parameter is Enabled.
	EncryptionName *string `json:"encryptionName,omitempty" tf:"encryption_name,omitempty"`

	// The expiration time of the prepaid instance.
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// The engine version of the KVStore DBInstance. Valid values: ["2.8", "4.0", "5.0", "6.0", "7.0"]. Default value: 5.0.
	// NOTE: When instance_type = Memcache, the engine_version only supports "4.0".
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies whether to forcibly change the type. Default value: true.
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Whether to create a distributed cache. Default value: false.
	GlobalInstance *bool `json:"globalInstance,omitempty" tf:"global_instance,omitempty"`

	// The ID of distributed cache.
	GlobalInstanceID *string `json:"globalInstanceId,omitempty" tf:"global_instance_id,omitempty"`

	// The ID of KVStore DBInstance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Type of the applied Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance. It can be retrieved by data source alicloud_kvstore_instance_classes
	// or referring to help-docs Instance type table.
	InstanceClass *string `json:"instanceClass,omitempty" tf:"instance_class,omitempty"`

	// Whether to open the release protection.
	InstanceReleaseProtection *bool `json:"instanceReleaseProtection,omitempty" tf:"instance_release_protection,omitempty"`

	// The engine type of the KVStore DBInstance. Valid values: Redis or Memcache. Default value: Redis.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Specifies whether to enable automatic minor version update. Valid values:
	IsAutoUpgradeOpen *string `json:"isAutoUpgradeOpen,omitempty" tf:"is_auto_upgrade_open,omitempty"`

	// An KMS encrypts password used to an instance. If the password is filled in, this field will be ignored.
	KMSEncryptedPassword *string `json:"kmsEncryptedPassword,omitempty" tf:"kms_encrypted_password,omitempty"`

	// An KMS encryption context used to decrypt kms_encrypted_password before creating or updating instance with kms_encrypted_password. See Encryption Context. It is valid when kms_encrypted_password is set.
	// +mapType=granular
	KMSEncryptionContext map[string]*string `json:"kmsEncryptionContext,omitempty" tf:"kms_encryption_context,omitempty"`

	// The end time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	MaintainEndTime *string `json:"maintainEndTime,omitempty" tf:"maintain_end_time,omitempty"`

	// The start time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	MaintainStartTime *string `json:"maintainStartTime,omitempty" tf:"maintain_start_time,omitempty"`

	// (Removed since v1.216.0) The method of modifying the whitelist. NOTE: Field modify_mode has been removed from provider version 1.216.0.
	ModifyMode *float64 `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// Specifies a change type when you change the configuration of a subscription instance. Valid values: UPGRADE, DOWNGRADE. Default value: UPGRADE. UPGRADE means upgrades the configuration of a subscription instance. DOWNGRADE means downgrades the configuration of a subscription instance.
	OrderType *string `json:"orderType,omitempty" tf:"order_type,omitempty"`

	// The billing method of the KVStore DBInstance. Valid values: PrePaid, PostPaid. Default value: PostPaid.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The duration that you will buy KVStore DBInstance (in month). It is valid when payment_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	Period *string `json:"period,omitempty" tf:"period,omitempty"`

	// It has been deprecated from provider version 1.101.0 and resource alicloud_kvstore_connection instead.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Private network connection port, used to modify the private network connection port.
	PrivateConnectionPort *string `json:"privateConnectionPort,omitempty" tf:"private_connection_port,omitempty"`

	// Private network connection prefix, used to modify the private network connection address. Only supports updating private network connections for existing instance.
	PrivateConnectionPrefix *string `json:"privateConnectionPrefix,omitempty" tf:"private_connection_prefix,omitempty"`

	// The internal IP address of the instance.
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// Theoretical maximum QPS value.
	QPS *float64 `json:"qps,omitempty" tf:"qps,omitempty"`

	// The number of read replicas in the primary zone. Valid values: 1 to 9.
	ReadOnlyCount *float64 `json:"readOnlyCount,omitempty" tf:"read_only_count,omitempty"`

	// The ID of resource group which the resource belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The point in time of a backup file.
	RestoreTime *string `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// The Specify the global resource descriptor ARN (Alibaba Cloud Resource Name) information of the role to be authorized, and use the related key management services after the authorization is completed, in the format: acs:ram::$accountID:role/$roleName.
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Modifies the SSL status. Valid values: Disable, Enable and Update.
	// NOTE: This functionality is supported by Cluster mode (Redis 2.8, 4.0, 5.0) and Standard mode( Redis 2.8 only).
	SSLEnable *string `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// The ID of the secondary zone to which you want to migrate the Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance.
	// -> NOTE: If you specify this parameter, the master node and replica node of the instance can be deployed in different zones and disaster recovery is implemented across zones. The instance can withstand failures in data centers.
	SecondaryZoneID *string `json:"secondaryZoneId,omitempty" tf:"secondary_zone_id,omitempty"`

	// The ID of security groups. Separate multiple security group IDs with commas (,), such as sg-***,sg-***,sg-***.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
	SecurityIPGroupAttribute *string `json:"securityIpGroupAttribute,omitempty" tf:"security_ip_group_attribute,omitempty"`

	// The name of the whitelist group.
	SecurityIPGroupName *string `json:"securityIpGroupName,omitempty" tf:"security_ip_group_name,omitempty"`

	// The IP addresses in the whitelist group. The maximum number of IP addresses in the whitelist group is 1000.
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// The number of data shards. This parameter is available only if you create a cluster instance that uses cloud disks. You can use this parameter to specify a custom number of data shards. NOTE: From version 1.216.0, shard_count can be modified.
	ShardCount *float64 `json:"shardCount,omitempty" tf:"shard_count,omitempty"`

	// The number of read replicas in the secondary zone. NOTE:: When you create a multi-zone read/write splitting instance, you must specify both secondary_zone_id and slave_read_only_count.
	// -> NOTE: The sum of read_only_count and slave_read_only_count cannot be greater than 9.
	SlaveReadOnlyCount *float64 `json:"slaveReadOnlyCount,omitempty" tf:"slave_read_only_count,omitempty"`

	// The ID of the source instance.
	SrcdbInstanceID *string `json:"srcdbInstanceId,omitempty" tf:"srcdb_instance_id,omitempty"`

	// The status of KVStore DBInstance.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies whether to enable TDE. Valid values: Enabled.
	// NOTE:: TDE cannot be disabled after it is enabled. Before you enable it, evaluate whether this feature affects.
	// your business. For more information, see Enable TDE.
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Only meaningful if instance_type is Redis and network type is VPC. Valid values: Close, Open. Default value: Open. Close means the redis instance can be accessed without authentication. Open means authentication is required.
	VPCAuthMode *string `json:"vpcAuthMode,omitempty" tf:"vpc_auth_mode,omitempty"`

	// The ID of VSwitch.
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// The ID of the zone.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type InstanceParameters struct {

	// Whether to renewal a KVStore DBInstance automatically or not. It is valid when payment_type is PrePaid. Default value: false.
	// +kubebuilder:validation:Optional
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Auto-renewal period of an KVStore DBInstance, in the unit of the month. It is valid when payment_type is PrePaid. Valid values: [1~12]. Default value: 1.
	// +kubebuilder:validation:Optional
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// Specifies whether to use a coupon. Default value: false.
	// +kubebuilder:validation:Optional
	AutoUseCoupon *bool `json:"autoUseCoupon,omitempty" tf:"auto_use_coupon,omitempty"`

	// The ID of the backup file of the source instance.
	// +kubebuilder:validation:Optional
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Backup period.
	// +kubebuilder:validation:Optional
	// +listType=set
	BackupPeriod []*string `json:"backupPeriod,omitempty" tf:"backup_period,omitempty"`

	// Backup time, the format is HH:mmZ-HH:mmZ (UTC time).
	// +kubebuilder:validation:Optional
	BackupTime *string `json:"backupTime,omitempty" tf:"backup_time,omitempty"`

	// The total bandwidth of the instance. NOTE: From version 1.232.0, bandwidth can be set. If the instance is a cluster instance, bandwidth must be divisible by the number of shard_count in the instance, and if the instance is a read/write splitting instance, bandwidth cannot be set.
	// +kubebuilder:validation:Optional
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The ID of the event or the business information.
	// +kubebuilder:validation:Optional
	BusinessInfo *string `json:"businessInfo,omitempty" tf:"business_info,omitempty"`

	// The storage capacity of the KVStore DBInstance. Unit: MB.
	// +kubebuilder:validation:Optional
	Capacity *float64 `json:"capacity,omitempty" tf:"capacity,omitempty"`

	// The configuration of the KVStore DBInstance. Available parameters can refer to the latest docs Instance configurations table.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Config map[string]*string `json:"config,omitempty" tf:"config,omitempty"`

	// The coupon code. NOTE: The default value youhuiquan_promotion_option_id_for_blank removed since v1.216.0, this can cause your status file to change even if it has not been modified, so please review your change plan before apply change plan.
	// +kubebuilder:validation:Optional
	CouponNo *string `json:"couponNo,omitempty" tf:"coupon_no,omitempty"`

	// The name of KVStore DBInstance. It is a string of 2 to 256 characters.
	// +kubebuilder:validation:Optional
	DBInstanceName *string `json:"dbInstanceName,omitempty" tf:"db_instance_name,omitempty"`

	// The ID of the dedicated cluster. This parameter is required when you create a Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance in a dedicated cluster.
	// +kubebuilder:validation:Optional
	DedicatedHostGroupID *string `json:"dedicatedHostGroupId,omitempty" tf:"dedicated_host_group_id,omitempty"`

	// Specifies whether to precheck the request. Valid values:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The time when the database is switched after the instance is migrated, or when the major version is upgraded, or when the instance class is upgraded. Valid values:
	// +kubebuilder:validation:Optional
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// Turn on or off incremental backup. Valid values: 1, 0. Default value: 0
	// +kubebuilder:validation:Optional
	EnableBackupLog *float64 `json:"enableBackupLog,omitempty" tf:"enable_backup_log,omitempty"`

	// The Custom key ID, which you can get by calling DescribeEncryptionKeyList.If this parameter is not passed, the key is automatically generated by the key management service. To create a custom key, you can call the CreateKey interface of the key management service.
	// +kubebuilder:validation:Optional
	EncryptionKey *string `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// The Encryption algorithm, default AES-CTR-256.Note that this parameter is only available when the TDEStatus parameter is Enabled.
	// +kubebuilder:validation:Optional
	EncryptionName *string `json:"encryptionName,omitempty" tf:"encryption_name,omitempty"`

	// The engine version of the KVStore DBInstance. Valid values: ["2.8", "4.0", "5.0", "6.0", "7.0"]. Default value: 5.0.
	// NOTE: When instance_type = Memcache, the engine_version only supports "4.0".
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies whether to forcibly change the type. Default value: true.
	// +kubebuilder:validation:Optional
	ForceUpgrade *bool `json:"forceUpgrade,omitempty" tf:"force_upgrade,omitempty"`

	// Whether to create a distributed cache. Default value: false.
	// +kubebuilder:validation:Optional
	GlobalInstance *bool `json:"globalInstance,omitempty" tf:"global_instance,omitempty"`

	// The ID of distributed cache.
	// +kubebuilder:validation:Optional
	GlobalInstanceID *string `json:"globalInstanceId,omitempty" tf:"global_instance_id,omitempty"`

	// Type of the applied Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance. It can be retrieved by data source alicloud_kvstore_instance_classes
	// or referring to help-docs Instance type table.
	// +kubebuilder:validation:Optional
	InstanceClass *string `json:"instanceClass,omitempty" tf:"instance_class,omitempty"`

	// Whether to open the release protection.
	// +kubebuilder:validation:Optional
	InstanceReleaseProtection *bool `json:"instanceReleaseProtection,omitempty" tf:"instance_release_protection,omitempty"`

	// The engine type of the KVStore DBInstance. Valid values: Redis or Memcache. Default value: Redis.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Specifies whether to enable automatic minor version update. Valid values:
	// +kubebuilder:validation:Optional
	IsAutoUpgradeOpen *string `json:"isAutoUpgradeOpen,omitempty" tf:"is_auto_upgrade_open,omitempty"`

	// An KMS encrypts password used to an instance. If the password is filled in, this field will be ignored.
	// +kubebuilder:validation:Optional
	KMSEncryptedPassword *string `json:"kmsEncryptedPassword,omitempty" tf:"kms_encrypted_password,omitempty"`

	// An KMS encryption context used to decrypt kms_encrypted_password before creating or updating instance with kms_encrypted_password. See Encryption Context. It is valid when kms_encrypted_password is set.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	KMSEncryptionContext map[string]*string `json:"kmsEncryptionContext,omitempty" tf:"kms_encryption_context,omitempty"`

	// The end time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	// +kubebuilder:validation:Optional
	MaintainEndTime *string `json:"maintainEndTime,omitempty" tf:"maintain_end_time,omitempty"`

	// The start time of the operation and maintenance time period of the KVStore DBInstance, in the format of HH:mmZ (UTC time).
	// +kubebuilder:validation:Optional
	MaintainStartTime *string `json:"maintainStartTime,omitempty" tf:"maintain_start_time,omitempty"`

	// (Removed since v1.216.0) The method of modifying the whitelist. NOTE: Field modify_mode has been removed from provider version 1.216.0.
	// +kubebuilder:validation:Optional
	ModifyMode *float64 `json:"modifyMode,omitempty" tf:"modify_mode,omitempty"`

	// Specifies a change type when you change the configuration of a subscription instance. Valid values: UPGRADE, DOWNGRADE. Default value: UPGRADE. UPGRADE means upgrades the configuration of a subscription instance. DOWNGRADE means downgrades the configuration of a subscription instance.
	// +kubebuilder:validation:Optional
	OrderType *string `json:"orderType,omitempty" tf:"order_type,omitempty"`

	// The password of the KVStore DBInstance. The password that is used to connect to the instance. The password must be 8 to 32 characters in length and must contain at least three of the following character types: uppercase letters, lowercase letters, special characters, and digits. Special characters include: ! @ # $ % ^ & * ( ) _ + - =
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// The billing method of the KVStore DBInstance. Valid values: PrePaid, PostPaid. Default value: PostPaid.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The duration that you will buy KVStore DBInstance (in month). It is valid when payment_type is PrePaid. Valid values: [1~9], 12, 24, 36.
	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`

	// It has been deprecated from provider version 1.101.0 and resource alicloud_kvstore_connection instead.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Private network connection port, used to modify the private network connection port.
	// +kubebuilder:validation:Optional
	PrivateConnectionPort *string `json:"privateConnectionPort,omitempty" tf:"private_connection_port,omitempty"`

	// Private network connection prefix, used to modify the private network connection address. Only supports updating private network connections for existing instance.
	// +kubebuilder:validation:Optional
	PrivateConnectionPrefix *string `json:"privateConnectionPrefix,omitempty" tf:"private_connection_prefix,omitempty"`

	// The internal IP address of the instance.
	// +kubebuilder:validation:Optional
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// The number of read replicas in the primary zone. Valid values: 1 to 9.
	// +kubebuilder:validation:Optional
	ReadOnlyCount *float64 `json:"readOnlyCount,omitempty" tf:"read_only_count,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of resource group which the resource belongs.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The point in time of a backup file.
	// +kubebuilder:validation:Optional
	RestoreTime *string `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// The Specify the global resource descriptor ARN (Alibaba Cloud Resource Name) information of the role to be authorized, and use the related key management services after the authorization is completed, in the format: acs:ram::$accountID:role/$roleName.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.RoleArnExtractor()
	// +kubebuilder:validation:Optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn,omitempty"`

	// Reference to a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnRef *v1.Reference `json:"roleArnRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate roleArn.
	// +kubebuilder:validation:Optional
	RoleArnSelector *v1.Selector `json:"roleArnSelector,omitempty" tf:"-"`

	// Modifies the SSL status. Valid values: Disable, Enable and Update.
	// NOTE: This functionality is supported by Cluster mode (Redis 2.8, 4.0, 5.0) and Standard mode( Redis 2.8 only).
	// +kubebuilder:validation:Optional
	SSLEnable *string `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// The ID of the secondary zone to which you want to migrate the Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance.
	// -> NOTE: If you specify this parameter, the master node and replica node of the instance can be deployed in different zones and disaster recovery is implemented across zones. The instance can withstand failures in data centers.
	// +kubebuilder:validation:Optional
	SecondaryZoneID *string `json:"secondaryZoneId,omitempty" tf:"secondary_zone_id,omitempty"`

	// The ID of security groups. Separate multiple security group IDs with commas (,), such as sg-***,sg-***,sg-***.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.SecurityGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in ecs to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// The value of this parameter is empty by default. The attribute of the whitelist group. The console does not display the whitelist group whose value of this parameter is hidden.
	// +kubebuilder:validation:Optional
	SecurityIPGroupAttribute *string `json:"securityIpGroupAttribute,omitempty" tf:"security_ip_group_attribute,omitempty"`

	// The name of the whitelist group.
	// +kubebuilder:validation:Optional
	SecurityIPGroupName *string `json:"securityIpGroupName,omitempty" tf:"security_ip_group_name,omitempty"`

	// The IP addresses in the whitelist group. The maximum number of IP addresses in the whitelist group is 1000.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityIps []*string `json:"securityIps,omitempty" tf:"security_ips,omitempty"`

	// The number of data shards. This parameter is available only if you create a cluster instance that uses cloud disks. You can use this parameter to specify a custom number of data shards. NOTE: From version 1.216.0, shard_count can be modified.
	// +kubebuilder:validation:Optional
	ShardCount *float64 `json:"shardCount,omitempty" tf:"shard_count,omitempty"`

	// The number of read replicas in the secondary zone. NOTE:: When you create a multi-zone read/write splitting instance, you must specify both secondary_zone_id and slave_read_only_count.
	// -> NOTE: The sum of read_only_count and slave_read_only_count cannot be greater than 9.
	// +kubebuilder:validation:Optional
	SlaveReadOnlyCount *float64 `json:"slaveReadOnlyCount,omitempty" tf:"slave_read_only_count,omitempty"`

	// The ID of the source instance.
	// +kubebuilder:validation:Optional
	SrcdbInstanceID *string `json:"srcdbInstanceId,omitempty" tf:"srcdb_instance_id,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies whether to enable TDE. Valid values: Enabled.
	// NOTE:: TDE cannot be disabled after it is enabled. Before you enable it, evaluate whether this feature affects.
	// your business. For more information, see Enable TDE.
	// +kubebuilder:validation:Optional
	TdeStatus *string `json:"tdeStatus,omitempty" tf:"tde_status,omitempty"`

	// Only meaningful if instance_type is Redis and network type is VPC. Valid values: Close, Open. Default value: Open. Close means the redis instance can be accessed without authentication. Open means authentication is required.
	// +kubebuilder:validation:Optional
	VPCAuthMode *string `json:"vpcAuthMode,omitempty" tf:"vpc_auth_mode,omitempty"`

	// The ID of VSwitch.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-alibabacloud/config/common.IdExtractor()
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`

	// The ID of the zone.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceInitParameters `json:"initProvider,omitempty"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Instance is the Schema for the Instances API. Provides a Tair (Redis OSS-Compatible) And Memcache (KVStore) Classic Instance resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec"`
	Status            InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
