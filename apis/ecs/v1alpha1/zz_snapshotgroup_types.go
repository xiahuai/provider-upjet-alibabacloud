// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SnapshotGroupInitParameters struct {

	// The description of the snapshot-consistent group. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of disk for which to create snapshots. You can specify multiple disk IDs across instances with the same zone.
	DiskID []*string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// The ID of disk N for which you do not need to create snapshots. After this parameter is specified, the created snapshot-consistent group does not contain snapshots of the disk.
	ExcludeDiskID []*string `json:"excludeDiskId,omitempty" tf:"exclude_disk_id,omitempty"`

	// The ID of the instance.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Instance
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to enable the instant access feature.
	InstantAccess *bool `json:"instantAccess,omitempty" tf:"instant_access,omitempty"`

	// Specify the number of days for which the instant access feature is available. Unit: days. Valid values: 1 to 65535.
	InstantAccessRetentionDays *float64 `json:"instantAccessRetentionDays,omitempty" tf:"instant_access_retention_days,omitempty"`

	// The ID of the resource group to which the snapshot consistency group belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The name of the snapshot-consistent group. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), hyphens (-), and colons (:). It must start with a letter or a digit and cannot start with http:// or https://.
	SnapshotGroupName *string `json:"snapshotGroupName,omitempty" tf:"snapshot_group_name,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type SnapshotGroupObservation struct {

	// The description of the snapshot-consistent group. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of disk for which to create snapshots. You can specify multiple disk IDs across instances with the same zone.
	DiskID []*string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// The ID of disk N for which you do not need to create snapshots. After this parameter is specified, the created snapshot-consistent group does not contain snapshots of the disk.
	ExcludeDiskID []*string `json:"excludeDiskId,omitempty" tf:"exclude_disk_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies whether to enable the instant access feature.
	InstantAccess *bool `json:"instantAccess,omitempty" tf:"instant_access,omitempty"`

	// Specify the number of days for which the instant access feature is available. Unit: days. Valid values: 1 to 65535.
	InstantAccessRetentionDays *float64 `json:"instantAccessRetentionDays,omitempty" tf:"instant_access_retention_days,omitempty"`

	// The ID of the resource group to which the snapshot consistency group belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The name of the snapshot-consistent group. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), hyphens (-), and colons (:). It must start with a letter or a digit and cannot start with http:// or https://.
	SnapshotGroupName *string `json:"snapshotGroupName,omitempty" tf:"snapshot_group_name,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type SnapshotGroupParameters struct {

	// The description of the snapshot-consistent group. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of disk for which to create snapshots. You can specify multiple disk IDs across instances with the same zone.
	// +kubebuilder:validation:Optional
	DiskID []*string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// The ID of disk N for which you do not need to create snapshots. After this parameter is specified, the created snapshot-consistent group does not contain snapshots of the disk.
	// +kubebuilder:validation:Optional
	ExcludeDiskID []*string `json:"excludeDiskId,omitempty" tf:"exclude_disk_id,omitempty"`

	// The ID of the instance.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to enable the instant access feature.
	// +kubebuilder:validation:Optional
	InstantAccess *bool `json:"instantAccess,omitempty" tf:"instant_access,omitempty"`

	// Specify the number of days for which the instant access feature is available. Unit: days. Valid values: 1 to 65535.
	// +kubebuilder:validation:Optional
	InstantAccessRetentionDays *float64 `json:"instantAccessRetentionDays,omitempty" tf:"instant_access_retention_days,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the resource group to which the snapshot consistency group belongs.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The name of the snapshot-consistent group. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (_), hyphens (-), and colons (:). It must start with a letter or a digit and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	SnapshotGroupName *string `json:"snapshotGroupName,omitempty" tf:"snapshot_group_name,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// SnapshotGroupSpec defines the desired state of SnapshotGroup
type SnapshotGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SnapshotGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SnapshotGroupInitParameters `json:"initProvider,omitempty"`
}

// SnapshotGroupStatus defines the observed state of SnapshotGroup.
type SnapshotGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SnapshotGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SnapshotGroup is the Schema for the SnapshotGroups API. Provides a Alicloud ECS Snapshot Group resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type SnapshotGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SnapshotGroupSpec   `json:"spec"`
	Status            SnapshotGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SnapshotGroupList contains a list of SnapshotGroups
type SnapshotGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SnapshotGroup `json:"items"`
}

// Repository type metadata.
var (
	SnapshotGroup_Kind             = "SnapshotGroup"
	SnapshotGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SnapshotGroup_Kind}.String()
	SnapshotGroup_KindAPIVersion   = SnapshotGroup_Kind + "." + CRDGroupVersion.String()
	SnapshotGroup_GroupVersionKind = CRDGroupVersion.WithKind(SnapshotGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&SnapshotGroup{}, &SnapshotGroupList{})
}
