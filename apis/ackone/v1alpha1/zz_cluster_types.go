// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterInitParameters struct {

	// (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when profile is 'Default'. It has to be false when cluster is deleted.
	ArgocdEnabled *bool `json:"argocdEnabled,omitempty" tf:"argocd_enabled,omitempty"`

	// Cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Cluster network information. See network below.
	Network []NetworkInitParameters `json:"network,omitempty" tf:"network,omitempty"`

	// Cluster attributes. Valid values: 'Default', 'XFlow'.
	Profile *string `json:"profile,omitempty" tf:"profile,omitempty"`
}

type ClusterObservation struct {

	// (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when profile is 'Default'. It has to be false when cluster is deleted.
	ArgocdEnabled *bool `json:"argocdEnabled,omitempty" tf:"argocd_enabled,omitempty"`

	// Cluster name.
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Cluster creation time.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Cluster network information. See network below.
	Network []NetworkObservation `json:"network,omitempty" tf:"network,omitempty"`

	// Cluster attributes. Valid values: 'Default', 'XFlow'.
	Profile *string `json:"profile,omitempty" tf:"profile,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type ClusterParameters struct {

	// (Available since v1.243.0) Whether to enable ArgoCD. Default to true. Only valid when profile is 'Default'. It has to be false when cluster is deleted.
	// +kubebuilder:validation:Optional
	ArgocdEnabled *bool `json:"argocdEnabled,omitempty" tf:"argocd_enabled,omitempty"`

	// Cluster name.
	// +kubebuilder:validation:Optional
	ClusterName *string `json:"clusterName,omitempty" tf:"cluster_name,omitempty"`

	// Cluster network information. See network below.
	// +kubebuilder:validation:Optional
	Network []NetworkParameters `json:"network,omitempty" tf:"network,omitempty"`

	// Cluster attributes. Valid values: 'Default', 'XFlow'.
	// +kubebuilder:validation:Optional
	Profile *string `json:"profile,omitempty" tf:"profile,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

type NetworkInitParameters struct {

	// VpcId to which the cluster belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Switch to which the cluster belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	Vswitches []*string `json:"vswitches,omitempty" tf:"vswitches,omitempty"`

	// References to Vswitch in vpc to populate vswitches.
	// +kubebuilder:validation:Optional
	VswitchesRefs []v1.Reference `json:"vswitchesRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate vswitches.
	// +kubebuilder:validation:Optional
	VswitchesSelector *v1.Selector `json:"vswitchesSelector,omitempty" tf:"-"`
}

type NetworkObservation struct {

	// Security group to which the cluster belongs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// VpcId to which the cluster belongs.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Switch to which the cluster belongs.
	Vswitches []*string `json:"vswitches,omitempty" tf:"vswitches,omitempty"`
}

type NetworkParameters struct {

	// VpcId to which the cluster belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Switch to which the cluster belongs.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +kubebuilder:validation:Optional
	Vswitches []*string `json:"vswitches,omitempty" tf:"vswitches,omitempty"`

	// References to Vswitch in vpc to populate vswitches.
	// +kubebuilder:validation:Optional
	VswitchesRefs []v1.Reference `json:"vswitchesRefs,omitempty" tf:"-"`

	// Selector for a list of Vswitch in vpc to populate vswitches.
	// +kubebuilder:validation:Optional
	VswitchesSelector *v1.Selector `json:"vswitchesSelector,omitempty" tf:"-"`
}

// ClusterSpec defines the desired state of Cluster
type ClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterInitParameters `json:"initProvider,omitempty"`
}

// ClusterStatus defines the observed state of Cluster.
type ClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Cluster is the Schema for the Clusters API. Provides a Alicloud Ack One Cluster resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Cluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.network) || (has(self.initProvider) && has(self.initProvider.network))",message="spec.forProvider.network is a required parameter"
	Spec   ClusterSpec   `json:"spec"`
	Status ClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterList contains a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Cluster `json:"items"`
}

// Repository type metadata.
var (
	Cluster_Kind             = "Cluster"
	Cluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Cluster_Kind}.String()
	Cluster_KindAPIVersion   = Cluster_Kind + "." + CRDGroupVersion.String()
	Cluster_GroupVersionKind = CRDGroupVersion.WithKind(Cluster_Kind)
)

func init() {
	SchemeBuilder.Register(&Cluster{}, &ClusterList{})
}
