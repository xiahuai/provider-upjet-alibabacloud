//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogConfigInitParameters) DeepCopyInto(out *AccessLogConfigInitParameters) {
	*out = *in
	if in.LogProject != nil {
		in, out := &in.LogProject, &out.LogProject
		*out = new(string)
		**out = **in
	}
	if in.LogStore != nil {
		in, out := &in.LogStore, &out.LogStore
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogConfigInitParameters.
func (in *AccessLogConfigInitParameters) DeepCopy() *AccessLogConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogConfigObservation) DeepCopyInto(out *AccessLogConfigObservation) {
	*out = *in
	if in.LogProject != nil {
		in, out := &in.LogProject, &out.LogProject
		*out = new(string)
		**out = **in
	}
	if in.LogStore != nil {
		in, out := &in.LogStore, &out.LogStore
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogConfigObservation.
func (in *AccessLogConfigObservation) DeepCopy() *AccessLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AccessLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogConfigParameters) DeepCopyInto(out *AccessLogConfigParameters) {
	*out = *in
	if in.LogProject != nil {
		in, out := &in.LogProject, &out.LogProject
		*out = new(string)
		**out = **in
	}
	if in.LogStore != nil {
		in, out := &in.LogStore, &out.LogStore
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogConfigParameters.
func (in *AccessLogConfigParameters) DeepCopy() *AccessLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogTracingConfigInitParameters) DeepCopyInto(out *AccessLogTracingConfigInitParameters) {
	*out = *in
	if in.TracingEnabled != nil {
		in, out := &in.TracingEnabled, &out.TracingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TracingSample != nil {
		in, out := &in.TracingSample, &out.TracingSample
		*out = new(float64)
		**out = **in
	}
	if in.TracingType != nil {
		in, out := &in.TracingType, &out.TracingType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogTracingConfigInitParameters.
func (in *AccessLogTracingConfigInitParameters) DeepCopy() *AccessLogTracingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogTracingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogTracingConfigObservation) DeepCopyInto(out *AccessLogTracingConfigObservation) {
	*out = *in
	if in.TracingEnabled != nil {
		in, out := &in.TracingEnabled, &out.TracingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TracingSample != nil {
		in, out := &in.TracingSample, &out.TracingSample
		*out = new(float64)
		**out = **in
	}
	if in.TracingType != nil {
		in, out := &in.TracingType, &out.TracingType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogTracingConfigObservation.
func (in *AccessLogTracingConfigObservation) DeepCopy() *AccessLogTracingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AccessLogTracingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogTracingConfigParameters) DeepCopyInto(out *AccessLogTracingConfigParameters) {
	*out = *in
	if in.TracingEnabled != nil {
		in, out := &in.TracingEnabled, &out.TracingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TracingSample != nil {
		in, out := &in.TracingSample, &out.TracingSample
		*out = new(float64)
		**out = **in
	}
	if in.TracingType != nil {
		in, out := &in.TracingType, &out.TracingType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogTracingConfigParameters.
func (in *AccessLogTracingConfigParameters) DeepCopy() *AccessLogTracingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogTracingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Acl) DeepCopyInto(out *Acl) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Acl.
func (in *Acl) DeepCopy() *Acl {
	if in == nil {
		return nil
	}
	out := new(Acl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Acl) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachment) DeepCopyInto(out *AclEntryAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachment.
func (in *AclEntryAttachment) DeepCopy() *AclEntryAttachment {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AclEntryAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachmentInitParameters) DeepCopyInto(out *AclEntryAttachmentInitParameters) {
	*out = *in
	if in.ACLID != nil {
		in, out := &in.ACLID, &out.ACLID
		*out = new(string)
		**out = **in
	}
	if in.ACLIDRef != nil {
		in, out := &in.ACLIDRef, &out.ACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ACLIDSelector != nil {
		in, out := &in.ACLIDSelector, &out.ACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Entry != nil {
		in, out := &in.Entry, &out.Entry
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachmentInitParameters.
func (in *AclEntryAttachmentInitParameters) DeepCopy() *AclEntryAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachmentList) DeepCopyInto(out *AclEntryAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AclEntryAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachmentList.
func (in *AclEntryAttachmentList) DeepCopy() *AclEntryAttachmentList {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AclEntryAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachmentObservation) DeepCopyInto(out *AclEntryAttachmentObservation) {
	*out = *in
	if in.ACLID != nil {
		in, out := &in.ACLID, &out.ACLID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Entry != nil {
		in, out := &in.Entry, &out.Entry
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachmentObservation.
func (in *AclEntryAttachmentObservation) DeepCopy() *AclEntryAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachmentParameters) DeepCopyInto(out *AclEntryAttachmentParameters) {
	*out = *in
	if in.ACLID != nil {
		in, out := &in.ACLID, &out.ACLID
		*out = new(string)
		**out = **in
	}
	if in.ACLIDRef != nil {
		in, out := &in.ACLIDRef, &out.ACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ACLIDSelector != nil {
		in, out := &in.ACLIDSelector, &out.ACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Entry != nil {
		in, out := &in.Entry, &out.Entry
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachmentParameters.
func (in *AclEntryAttachmentParameters) DeepCopy() *AclEntryAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachmentSpec) DeepCopyInto(out *AclEntryAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachmentSpec.
func (in *AclEntryAttachmentSpec) DeepCopy() *AclEntryAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclEntryAttachmentStatus) DeepCopyInto(out *AclEntryAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclEntryAttachmentStatus.
func (in *AclEntryAttachmentStatus) DeepCopy() *AclEntryAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(AclEntryAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclInitParameters) DeepCopyInto(out *AclInitParameters) {
	*out = *in
	if in.ACLName != nil {
		in, out := &in.ACLName, &out.ACLName
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclInitParameters.
func (in *AclInitParameters) DeepCopy() *AclInitParameters {
	if in == nil {
		return nil
	}
	out := new(AclInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclList) DeepCopyInto(out *AclList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Acl, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclList.
func (in *AclList) DeepCopy() *AclList {
	if in == nil {
		return nil
	}
	out := new(AclList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AclList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclObservation) DeepCopyInto(out *AclObservation) {
	*out = *in
	if in.ACLName != nil {
		in, out := &in.ACLName, &out.ACLName
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclObservation.
func (in *AclObservation) DeepCopy() *AclObservation {
	if in == nil {
		return nil
	}
	out := new(AclObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclParameters) DeepCopyInto(out *AclParameters) {
	*out = *in
	if in.ACLName != nil {
		in, out := &in.ACLName, &out.ACLName
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclParameters.
func (in *AclParameters) DeepCopy() *AclParameters {
	if in == nil {
		return nil
	}
	out := new(AclParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclSpec) DeepCopyInto(out *AclSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclSpec.
func (in *AclSpec) DeepCopy() *AclSpec {
	if in == nil {
		return nil
	}
	out := new(AclSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AclStatus) DeepCopyInto(out *AclStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AclStatus.
func (in *AclStatus) DeepCopy() *AclStatus {
	if in == nil {
		return nil
	}
	out := new(AclStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ascript) DeepCopyInto(out *Ascript) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ascript.
func (in *Ascript) DeepCopy() *Ascript {
	if in == nil {
		return nil
	}
	out := new(Ascript)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ascript) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AscriptInitParameters) DeepCopyInto(out *AscriptInitParameters) {
	*out = *in
	if in.AscriptName != nil {
		in, out := &in.AscriptName, &out.AscriptName
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExtAttributeEnabled != nil {
		in, out := &in.ExtAttributeEnabled, &out.ExtAttributeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ExtAttributes != nil {
		in, out := &in.ExtAttributes, &out.ExtAttributes
		*out = make([]ExtAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.ScriptContent != nil {
		in, out := &in.ScriptContent, &out.ScriptContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AscriptInitParameters.
func (in *AscriptInitParameters) DeepCopy() *AscriptInitParameters {
	if in == nil {
		return nil
	}
	out := new(AscriptInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AscriptList) DeepCopyInto(out *AscriptList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ascript, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AscriptList.
func (in *AscriptList) DeepCopy() *AscriptList {
	if in == nil {
		return nil
	}
	out := new(AscriptList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AscriptList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AscriptObservation) DeepCopyInto(out *AscriptObservation) {
	*out = *in
	if in.AscriptName != nil {
		in, out := &in.AscriptName, &out.AscriptName
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExtAttributeEnabled != nil {
		in, out := &in.ExtAttributeEnabled, &out.ExtAttributeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ExtAttributes != nil {
		in, out := &in.ExtAttributes, &out.ExtAttributes
		*out = make([]ExtAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.ScriptContent != nil {
		in, out := &in.ScriptContent, &out.ScriptContent
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AscriptObservation.
func (in *AscriptObservation) DeepCopy() *AscriptObservation {
	if in == nil {
		return nil
	}
	out := new(AscriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AscriptParameters) DeepCopyInto(out *AscriptParameters) {
	*out = *in
	if in.AscriptName != nil {
		in, out := &in.AscriptName, &out.AscriptName
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ExtAttributeEnabled != nil {
		in, out := &in.ExtAttributeEnabled, &out.ExtAttributeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ExtAttributes != nil {
		in, out := &in.ExtAttributes, &out.ExtAttributes
		*out = make([]ExtAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ScriptContent != nil {
		in, out := &in.ScriptContent, &out.ScriptContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AscriptParameters.
func (in *AscriptParameters) DeepCopy() *AscriptParameters {
	if in == nil {
		return nil
	}
	out := new(AscriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AscriptSpec) DeepCopyInto(out *AscriptSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AscriptSpec.
func (in *AscriptSpec) DeepCopy() *AscriptSpec {
	if in == nil {
		return nil
	}
	out := new(AscriptSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AscriptStatus) DeepCopyInto(out *AscriptStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AscriptStatus.
func (in *AscriptStatus) DeepCopy() *AscriptStatus {
	if in == nil {
		return nil
	}
	out := new(AscriptStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CACertificatesInitParameters) DeepCopyInto(out *CACertificatesInitParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CACertificatesInitParameters.
func (in *CACertificatesInitParameters) DeepCopy() *CACertificatesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CACertificatesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CACertificatesObservation) DeepCopyInto(out *CACertificatesObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CACertificatesObservation.
func (in *CACertificatesObservation) DeepCopy() *CACertificatesObservation {
	if in == nil {
		return nil
	}
	out := new(CACertificatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CACertificatesParameters) DeepCopyInto(out *CACertificatesParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CACertificatesParameters.
func (in *CACertificatesParameters) DeepCopy() *CACertificatesParameters {
	if in == nil {
		return nil
	}
	out := new(CACertificatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesInitParameters) DeepCopyInto(out *CertificatesInitParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesInitParameters.
func (in *CertificatesInitParameters) DeepCopy() *CertificatesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertificatesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesObservation) DeepCopyInto(out *CertificatesObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesObservation.
func (in *CertificatesObservation) DeepCopy() *CertificatesObservation {
	if in == nil {
		return nil
	}
	out := new(CertificatesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatesParameters) DeepCopyInto(out *CertificatesParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatesParameters.
func (in *CertificatesParameters) DeepCopy() *CertificatesParameters {
	if in == nil {
		return nil
	}
	out := new(CertificatesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionDrainConfigInitParameters) DeepCopyInto(out *ConnectionDrainConfigInitParameters) {
	*out = *in
	if in.ConnectionDrainEnabled != nil {
		in, out := &in.ConnectionDrainEnabled, &out.ConnectionDrainEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConnectionDrainTimeout != nil {
		in, out := &in.ConnectionDrainTimeout, &out.ConnectionDrainTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionDrainConfigInitParameters.
func (in *ConnectionDrainConfigInitParameters) DeepCopy() *ConnectionDrainConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionDrainConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionDrainConfigObservation) DeepCopyInto(out *ConnectionDrainConfigObservation) {
	*out = *in
	if in.ConnectionDrainEnabled != nil {
		in, out := &in.ConnectionDrainEnabled, &out.ConnectionDrainEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConnectionDrainTimeout != nil {
		in, out := &in.ConnectionDrainTimeout, &out.ConnectionDrainTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionDrainConfigObservation.
func (in *ConnectionDrainConfigObservation) DeepCopy() *ConnectionDrainConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionDrainConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionDrainConfigParameters) DeepCopyInto(out *ConnectionDrainConfigParameters) {
	*out = *in
	if in.ConnectionDrainEnabled != nil {
		in, out := &in.ConnectionDrainEnabled, &out.ConnectionDrainEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConnectionDrainTimeout != nil {
		in, out := &in.ConnectionDrainTimeout, &out.ConnectionDrainTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionDrainConfigParameters.
func (in *ConnectionDrainConfigParameters) DeepCopy() *ConnectionDrainConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionDrainConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieConfigInitParameters) DeepCopyInto(out *CookieConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]ValuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieConfigInitParameters.
func (in *CookieConfigInitParameters) DeepCopy() *CookieConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CookieConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieConfigObservation) DeepCopyInto(out *CookieConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]ValuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieConfigObservation.
func (in *CookieConfigObservation) DeepCopy() *CookieConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CookieConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieConfigParameters) DeepCopyInto(out *CookieConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]ValuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieConfigParameters.
func (in *CookieConfigParameters) DeepCopy() *CookieConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CookieConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsConfigInitParameters) DeepCopyInto(out *CorsConfigInitParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(string)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigin != nil {
		in, out := &in.AllowOrigin, &out.AllowOrigin
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsConfigInitParameters.
func (in *CorsConfigInitParameters) DeepCopy() *CorsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsConfigObservation) DeepCopyInto(out *CorsConfigObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(string)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigin != nil {
		in, out := &in.AllowOrigin, &out.AllowOrigin
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsConfigObservation.
func (in *CorsConfigObservation) DeepCopy() *CorsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CorsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsConfigParameters) DeepCopyInto(out *CorsConfigParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(string)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigin != nil {
		in, out := &in.AllowOrigin, &out.AllowOrigin
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsConfigParameters.
func (in *CorsConfigParameters) DeepCopy() *CorsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CorsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultActionsInitParameters) DeepCopyInto(out *DefaultActionsInitParameters) {
	*out = *in
	if in.ForwardGroupConfig != nil {
		in, out := &in.ForwardGroupConfig, &out.ForwardGroupConfig
		*out = make([]ForwardGroupConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultActionsInitParameters.
func (in *DefaultActionsInitParameters) DeepCopy() *DefaultActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultActionsObservation) DeepCopyInto(out *DefaultActionsObservation) {
	*out = *in
	if in.ForwardGroupConfig != nil {
		in, out := &in.ForwardGroupConfig, &out.ForwardGroupConfig
		*out = make([]ForwardGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultActionsObservation.
func (in *DefaultActionsObservation) DeepCopy() *DefaultActionsObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultActionsParameters) DeepCopyInto(out *DefaultActionsParameters) {
	*out = *in
	if in.ForwardGroupConfig != nil {
		in, out := &in.ForwardGroupConfig, &out.ForwardGroupConfig
		*out = make([]ForwardGroupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultActionsParameters.
func (in *DefaultActionsParameters) DeepCopy() *DefaultActionsParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeletionProtectionConfigInitParameters) DeepCopyInto(out *DeletionProtectionConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeletionProtectionConfigInitParameters.
func (in *DeletionProtectionConfigInitParameters) DeepCopy() *DeletionProtectionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeletionProtectionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeletionProtectionConfigObservation) DeepCopyInto(out *DeletionProtectionConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnabledTime != nil {
		in, out := &in.EnabledTime, &out.EnabledTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeletionProtectionConfigObservation.
func (in *DeletionProtectionConfigObservation) DeepCopy() *DeletionProtectionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DeletionProtectionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeletionProtectionConfigParameters) DeepCopyInto(out *DeletionProtectionConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeletionProtectionConfigParameters.
func (in *DeletionProtectionConfigParameters) DeepCopy() *DeletionProtectionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DeletionProtectionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtAttributesInitParameters) DeepCopyInto(out *ExtAttributesInitParameters) {
	*out = *in
	if in.AttributeKey != nil {
		in, out := &in.AttributeKey, &out.AttributeKey
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtAttributesInitParameters.
func (in *ExtAttributesInitParameters) DeepCopy() *ExtAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtAttributesObservation) DeepCopyInto(out *ExtAttributesObservation) {
	*out = *in
	if in.AttributeKey != nil {
		in, out := &in.AttributeKey, &out.AttributeKey
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtAttributesObservation.
func (in *ExtAttributesObservation) DeepCopy() *ExtAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ExtAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtAttributesParameters) DeepCopyInto(out *ExtAttributesParameters) {
	*out = *in
	if in.AttributeKey != nil {
		in, out := &in.AttributeKey, &out.AttributeKey
		*out = new(string)
		**out = **in
	}
	if in.AttributeValue != nil {
		in, out := &in.AttributeValue, &out.AttributeValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtAttributesParameters.
func (in *ExtAttributesParameters) DeepCopy() *ExtAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ExtAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedResponseConfigInitParameters) DeepCopyInto(out *FixedResponseConfigInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.HTTPCode != nil {
		in, out := &in.HTTPCode, &out.HTTPCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedResponseConfigInitParameters.
func (in *FixedResponseConfigInitParameters) DeepCopy() *FixedResponseConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(FixedResponseConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedResponseConfigObservation) DeepCopyInto(out *FixedResponseConfigObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.HTTPCode != nil {
		in, out := &in.HTTPCode, &out.HTTPCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedResponseConfigObservation.
func (in *FixedResponseConfigObservation) DeepCopy() *FixedResponseConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FixedResponseConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedResponseConfigParameters) DeepCopyInto(out *FixedResponseConfigParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.HTTPCode != nil {
		in, out := &in.HTTPCode, &out.HTTPCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedResponseConfigParameters.
func (in *FixedResponseConfigParameters) DeepCopy() *FixedResponseConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FixedResponseConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardGroupConfigInitParameters) DeepCopyInto(out *ForwardGroupConfigInitParameters) {
	*out = *in
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]ServerGroupTuplesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardGroupConfigInitParameters.
func (in *ForwardGroupConfigInitParameters) DeepCopy() *ForwardGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardGroupConfigObservation) DeepCopyInto(out *ForwardGroupConfigObservation) {
	*out = *in
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]ServerGroupTuplesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardGroupConfigObservation.
func (in *ForwardGroupConfigObservation) DeepCopy() *ForwardGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardGroupConfigParameters) DeepCopyInto(out *ForwardGroupConfigParameters) {
	*out = *in
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]ServerGroupTuplesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardGroupConfigParameters.
func (in *ForwardGroupConfigParameters) DeepCopy() *ForwardGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardGroupConfigServerGroupTuplesInitParameters) DeepCopyInto(out *ForwardGroupConfigServerGroupTuplesInitParameters) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupIDRef != nil {
		in, out := &in.ServerGroupIDRef, &out.ServerGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerGroupIDSelector != nil {
		in, out := &in.ServerGroupIDSelector, &out.ServerGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardGroupConfigServerGroupTuplesInitParameters.
func (in *ForwardGroupConfigServerGroupTuplesInitParameters) DeepCopy() *ForwardGroupConfigServerGroupTuplesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardGroupConfigServerGroupTuplesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardGroupConfigServerGroupTuplesObservation) DeepCopyInto(out *ForwardGroupConfigServerGroupTuplesObservation) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardGroupConfigServerGroupTuplesObservation.
func (in *ForwardGroupConfigServerGroupTuplesObservation) DeepCopy() *ForwardGroupConfigServerGroupTuplesObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardGroupConfigServerGroupTuplesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardGroupConfigServerGroupTuplesParameters) DeepCopyInto(out *ForwardGroupConfigServerGroupTuplesParameters) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupIDRef != nil {
		in, out := &in.ServerGroupIDRef, &out.ServerGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerGroupIDSelector != nil {
		in, out := &in.ServerGroupIDSelector, &out.ServerGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardGroupConfigServerGroupTuplesParameters.
func (in *ForwardGroupConfigServerGroupTuplesParameters) DeepCopy() *ForwardGroupConfigServerGroupTuplesParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardGroupConfigServerGroupTuplesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderConfigInitParameters) DeepCopyInto(out *HeaderConfigInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderConfigInitParameters.
func (in *HeaderConfigInitParameters) DeepCopy() *HeaderConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderConfigObservation) DeepCopyInto(out *HeaderConfigObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderConfigObservation.
func (in *HeaderConfigObservation) DeepCopy() *HeaderConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderConfigParameters) DeepCopyInto(out *HeaderConfigParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderConfigParameters.
func (in *HeaderConfigParameters) DeepCopy() *HeaderConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckConfigInitParameters) DeepCopyInto(out *HealthCheckConfigInitParameters) {
	*out = *in
	if in.HealthCheckCodes != nil {
		in, out := &in.HealthCheckCodes, &out.HealthCheckCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthCheckConnectPort != nil {
		in, out := &in.HealthCheckConnectPort, &out.HealthCheckConnectPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckEnabled != nil {
		in, out := &in.HealthCheckEnabled, &out.HealthCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHost != nil {
		in, out := &in.HealthCheckHost, &out.HealthCheckHost
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckMethod != nil {
		in, out := &in.HealthCheckMethod, &out.HealthCheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckProtocol != nil {
		in, out := &in.HealthCheckProtocol, &out.HealthCheckProtocol
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTimeout != nil {
		in, out := &in.HealthCheckTimeout, &out.HealthCheckTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckConfigInitParameters.
func (in *HealthCheckConfigInitParameters) DeepCopy() *HealthCheckConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckConfigObservation) DeepCopyInto(out *HealthCheckConfigObservation) {
	*out = *in
	if in.HealthCheckCodes != nil {
		in, out := &in.HealthCheckCodes, &out.HealthCheckCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthCheckConnectPort != nil {
		in, out := &in.HealthCheckConnectPort, &out.HealthCheckConnectPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckEnabled != nil {
		in, out := &in.HealthCheckEnabled, &out.HealthCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHost != nil {
		in, out := &in.HealthCheckHost, &out.HealthCheckHost
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckMethod != nil {
		in, out := &in.HealthCheckMethod, &out.HealthCheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckProtocol != nil {
		in, out := &in.HealthCheckProtocol, &out.HealthCheckProtocol
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTimeout != nil {
		in, out := &in.HealthCheckTimeout, &out.HealthCheckTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckConfigObservation.
func (in *HealthCheckConfigObservation) DeepCopy() *HealthCheckConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckConfigParameters) DeepCopyInto(out *HealthCheckConfigParameters) {
	*out = *in
	if in.HealthCheckCodes != nil {
		in, out := &in.HealthCheckCodes, &out.HealthCheckCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthCheckConnectPort != nil {
		in, out := &in.HealthCheckConnectPort, &out.HealthCheckConnectPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckEnabled != nil {
		in, out := &in.HealthCheckEnabled, &out.HealthCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHost != nil {
		in, out := &in.HealthCheckHost, &out.HealthCheckHost
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckMethod != nil {
		in, out := &in.HealthCheckMethod, &out.HealthCheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckProtocol != nil {
		in, out := &in.HealthCheckProtocol, &out.HealthCheckProtocol
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTimeout != nil {
		in, out := &in.HealthCheckTimeout, &out.HealthCheckTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckConfigParameters.
func (in *HealthCheckConfigParameters) DeepCopy() *HealthCheckConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplate) DeepCopyInto(out *HealthCheckTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplate.
func (in *HealthCheckTemplate) DeepCopy() *HealthCheckTemplate {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthCheckTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplateInitParameters) DeepCopyInto(out *HealthCheckTemplateInitParameters) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckCodes != nil {
		in, out := &in.HealthCheckCodes, &out.HealthCheckCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthCheckConnectPort != nil {
		in, out := &in.HealthCheckConnectPort, &out.HealthCheckConnectPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHost != nil {
		in, out := &in.HealthCheckHost, &out.HealthCheckHost
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckMethod != nil {
		in, out := &in.HealthCheckMethod, &out.HealthCheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckProtocol != nil {
		in, out := &in.HealthCheckProtocol, &out.HealthCheckProtocol
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTemplateName != nil {
		in, out := &in.HealthCheckTemplateName, &out.HealthCheckTemplateName
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTimeout != nil {
		in, out := &in.HealthCheckTimeout, &out.HealthCheckTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplateInitParameters.
func (in *HealthCheckTemplateInitParameters) DeepCopy() *HealthCheckTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplateList) DeepCopyInto(out *HealthCheckTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HealthCheckTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplateList.
func (in *HealthCheckTemplateList) DeepCopy() *HealthCheckTemplateList {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthCheckTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplateObservation) DeepCopyInto(out *HealthCheckTemplateObservation) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckCodes != nil {
		in, out := &in.HealthCheckCodes, &out.HealthCheckCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthCheckConnectPort != nil {
		in, out := &in.HealthCheckConnectPort, &out.HealthCheckConnectPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHost != nil {
		in, out := &in.HealthCheckHost, &out.HealthCheckHost
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckMethod != nil {
		in, out := &in.HealthCheckMethod, &out.HealthCheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckProtocol != nil {
		in, out := &in.HealthCheckProtocol, &out.HealthCheckProtocol
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTemplateName != nil {
		in, out := &in.HealthCheckTemplateName, &out.HealthCheckTemplateName
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTimeout != nil {
		in, out := &in.HealthCheckTimeout, &out.HealthCheckTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplateObservation.
func (in *HealthCheckTemplateObservation) DeepCopy() *HealthCheckTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplateParameters) DeepCopyInto(out *HealthCheckTemplateParameters) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckCodes != nil {
		in, out := &in.HealthCheckCodes, &out.HealthCheckCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthCheckConnectPort != nil {
		in, out := &in.HealthCheckConnectPort, &out.HealthCheckConnectPort
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckHTTPVersion != nil {
		in, out := &in.HealthCheckHTTPVersion, &out.HealthCheckHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckHost != nil {
		in, out := &in.HealthCheckHost, &out.HealthCheckHost
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckInterval != nil {
		in, out := &in.HealthCheckInterval, &out.HealthCheckInterval
		*out = new(float64)
		**out = **in
	}
	if in.HealthCheckMethod != nil {
		in, out := &in.HealthCheckMethod, &out.HealthCheckMethod
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckPath != nil {
		in, out := &in.HealthCheckPath, &out.HealthCheckPath
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckProtocol != nil {
		in, out := &in.HealthCheckProtocol, &out.HealthCheckProtocol
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTemplateName != nil {
		in, out := &in.HealthCheckTemplateName, &out.HealthCheckTemplateName
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckTimeout != nil {
		in, out := &in.HealthCheckTimeout, &out.HealthCheckTimeout
		*out = new(float64)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplateParameters.
func (in *HealthCheckTemplateParameters) DeepCopy() *HealthCheckTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplateSpec) DeepCopyInto(out *HealthCheckTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplateSpec.
func (in *HealthCheckTemplateSpec) DeepCopy() *HealthCheckTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckTemplateStatus) DeepCopyInto(out *HealthCheckTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckTemplateStatus.
func (in *HealthCheckTemplateStatus) DeepCopy() *HealthCheckTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(HealthCheckTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigInitParameters) DeepCopyInto(out *HostConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigInitParameters.
func (in *HostConfigInitParameters) DeepCopy() *HostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigObservation) DeepCopyInto(out *HostConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigObservation.
func (in *HostConfigObservation) DeepCopy() *HostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigParameters) DeepCopyInto(out *HostConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigParameters.
func (in *HostConfigParameters) DeepCopy() *HostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsertHeaderConfigInitParameters) DeepCopyInto(out *InsertHeaderConfigInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsertHeaderConfigInitParameters.
func (in *InsertHeaderConfigInitParameters) DeepCopy() *InsertHeaderConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InsertHeaderConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsertHeaderConfigObservation) DeepCopyInto(out *InsertHeaderConfigObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsertHeaderConfigObservation.
func (in *InsertHeaderConfigObservation) DeepCopy() *InsertHeaderConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InsertHeaderConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InsertHeaderConfigParameters) DeepCopyInto(out *InsertHeaderConfigParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueType != nil {
		in, out := &in.ValueType, &out.ValueType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InsertHeaderConfigParameters.
func (in *InsertHeaderConfigParameters) DeepCopy() *InsertHeaderConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InsertHeaderConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Listener) DeepCopyInto(out *Listener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Listener.
func (in *Listener) DeepCopy() *Listener {
	if in == nil {
		return nil
	}
	out := new(Listener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Listener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachment) DeepCopyInto(out *ListenerAclAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachment.
func (in *ListenerAclAttachment) DeepCopy() *ListenerAclAttachment {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerAclAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachmentInitParameters) DeepCopyInto(out *ListenerAclAttachmentInitParameters) {
	*out = *in
	if in.ACLID != nil {
		in, out := &in.ACLID, &out.ACLID
		*out = new(string)
		**out = **in
	}
	if in.ACLIDRef != nil {
		in, out := &in.ACLIDRef, &out.ACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ACLIDSelector != nil {
		in, out := &in.ACLIDSelector, &out.ACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ACLType != nil {
		in, out := &in.ACLType, &out.ACLType
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachmentInitParameters.
func (in *ListenerAclAttachmentInitParameters) DeepCopy() *ListenerAclAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachmentList) DeepCopyInto(out *ListenerAclAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListenerAclAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachmentList.
func (in *ListenerAclAttachmentList) DeepCopy() *ListenerAclAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerAclAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachmentObservation) DeepCopyInto(out *ListenerAclAttachmentObservation) {
	*out = *in
	if in.ACLID != nil {
		in, out := &in.ACLID, &out.ACLID
		*out = new(string)
		**out = **in
	}
	if in.ACLType != nil {
		in, out := &in.ACLType, &out.ACLType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachmentObservation.
func (in *ListenerAclAttachmentObservation) DeepCopy() *ListenerAclAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachmentParameters) DeepCopyInto(out *ListenerAclAttachmentParameters) {
	*out = *in
	if in.ACLID != nil {
		in, out := &in.ACLID, &out.ACLID
		*out = new(string)
		**out = **in
	}
	if in.ACLIDRef != nil {
		in, out := &in.ACLIDRef, &out.ACLIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ACLIDSelector != nil {
		in, out := &in.ACLIDSelector, &out.ACLIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ACLType != nil {
		in, out := &in.ACLType, &out.ACLType
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachmentParameters.
func (in *ListenerAclAttachmentParameters) DeepCopy() *ListenerAclAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachmentSpec) DeepCopyInto(out *ListenerAclAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachmentSpec.
func (in *ListenerAclAttachmentSpec) DeepCopy() *ListenerAclAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerAclAttachmentStatus) DeepCopyInto(out *ListenerAclAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerAclAttachmentStatus.
func (in *ListenerAclAttachmentStatus) DeepCopy() *ListenerAclAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerAclAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerInitParameters) DeepCopyInto(out *ListenerInitParameters) {
	*out = *in
	if in.AccessLogRecordCustomizedHeadersEnabled != nil {
		in, out := &in.AccessLogRecordCustomizedHeadersEnabled, &out.AccessLogRecordCustomizedHeadersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AccessLogTracingConfig != nil {
		in, out := &in.AccessLogTracingConfig, &out.AccessLogTracingConfig
		*out = make([]AccessLogTracingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACertificates != nil {
		in, out := &in.CACertificates, &out.CACertificates
		*out = make([]CACertificatesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CAEnabled != nil {
		in, out := &in.CAEnabled, &out.CAEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]CertificatesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultActions != nil {
		in, out := &in.DefaultActions, &out.DefaultActions
		*out = make([]DefaultActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.GzipEnabled != nil {
		in, out := &in.GzipEnabled, &out.GzipEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ListenerDescription != nil {
		in, out := &in.ListenerDescription, &out.ListenerDescription
		*out = new(string)
		**out = **in
	}
	if in.ListenerPort != nil {
		in, out := &in.ListenerPort, &out.ListenerPort
		*out = new(float64)
		**out = **in
	}
	if in.ListenerProtocol != nil {
		in, out := &in.ListenerProtocol, &out.ListenerProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIDRef != nil {
		in, out := &in.LoadBalancerIDRef, &out.LoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerIDSelector != nil {
		in, out := &in.LoadBalancerIDSelector, &out.LoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.QuicConfig != nil {
		in, out := &in.QuicConfig, &out.QuicConfig
		*out = make([]QuicConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SecurityPolicyID != nil {
		in, out := &in.SecurityPolicyID, &out.SecurityPolicyID
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyIDRef != nil {
		in, out := &in.SecurityPolicyIDRef, &out.SecurityPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityPolicyIDSelector != nil {
		in, out := &in.SecurityPolicyIDSelector, &out.SecurityPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.XForwardedForConfig != nil {
		in, out := &in.XForwardedForConfig, &out.XForwardedForConfig
		*out = make([]XForwardedForConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerInitParameters.
func (in *ListenerInitParameters) DeepCopy() *ListenerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerList) DeepCopyInto(out *ListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Listener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerList.
func (in *ListenerList) DeepCopy() *ListenerList {
	if in == nil {
		return nil
	}
	out := new(ListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerObservation) DeepCopyInto(out *ListenerObservation) {
	*out = *in
	if in.AccessLogRecordCustomizedHeadersEnabled != nil {
		in, out := &in.AccessLogRecordCustomizedHeadersEnabled, &out.AccessLogRecordCustomizedHeadersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AccessLogTracingConfig != nil {
		in, out := &in.AccessLogTracingConfig, &out.AccessLogTracingConfig
		*out = make([]AccessLogTracingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACertificates != nil {
		in, out := &in.CACertificates, &out.CACertificates
		*out = make([]CACertificatesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CAEnabled != nil {
		in, out := &in.CAEnabled, &out.CAEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]CertificatesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultActions != nil {
		in, out := &in.DefaultActions, &out.DefaultActions
		*out = make([]DefaultActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.GzipEnabled != nil {
		in, out := &in.GzipEnabled, &out.GzipEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ListenerDescription != nil {
		in, out := &in.ListenerDescription, &out.ListenerDescription
		*out = new(string)
		**out = **in
	}
	if in.ListenerPort != nil {
		in, out := &in.ListenerPort, &out.ListenerPort
		*out = new(float64)
		**out = **in
	}
	if in.ListenerProtocol != nil {
		in, out := &in.ListenerProtocol, &out.ListenerProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.QuicConfig != nil {
		in, out := &in.QuicConfig, &out.QuicConfig
		*out = make([]QuicConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SecurityPolicyID != nil {
		in, out := &in.SecurityPolicyID, &out.SecurityPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.XForwardedForConfig != nil {
		in, out := &in.XForwardedForConfig, &out.XForwardedForConfig
		*out = make([]XForwardedForConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerObservation.
func (in *ListenerObservation) DeepCopy() *ListenerObservation {
	if in == nil {
		return nil
	}
	out := new(ListenerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerParameters) DeepCopyInto(out *ListenerParameters) {
	*out = *in
	if in.AccessLogRecordCustomizedHeadersEnabled != nil {
		in, out := &in.AccessLogRecordCustomizedHeadersEnabled, &out.AccessLogRecordCustomizedHeadersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AccessLogTracingConfig != nil {
		in, out := &in.AccessLogTracingConfig, &out.AccessLogTracingConfig
		*out = make([]AccessLogTracingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACertificates != nil {
		in, out := &in.CACertificates, &out.CACertificates
		*out = make([]CACertificatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CAEnabled != nil {
		in, out := &in.CAEnabled, &out.CAEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Certificates != nil {
		in, out := &in.Certificates, &out.Certificates
		*out = make([]CertificatesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultActions != nil {
		in, out := &in.DefaultActions, &out.DefaultActions
		*out = make([]DefaultActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.GzipEnabled != nil {
		in, out := &in.GzipEnabled, &out.GzipEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Http2Enabled != nil {
		in, out := &in.Http2Enabled, &out.Http2Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ListenerDescription != nil {
		in, out := &in.ListenerDescription, &out.ListenerDescription
		*out = new(string)
		**out = **in
	}
	if in.ListenerPort != nil {
		in, out := &in.ListenerPort, &out.ListenerPort
		*out = new(float64)
		**out = **in
	}
	if in.ListenerProtocol != nil {
		in, out := &in.ListenerProtocol, &out.ListenerProtocol
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIDRef != nil {
		in, out := &in.LoadBalancerIDRef, &out.LoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerIDSelector != nil {
		in, out := &in.LoadBalancerIDSelector, &out.LoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.QuicConfig != nil {
		in, out := &in.QuicConfig, &out.QuicConfig
		*out = make([]QuicConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SecurityPolicyID != nil {
		in, out := &in.SecurityPolicyID, &out.SecurityPolicyID
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyIDRef != nil {
		in, out := &in.SecurityPolicyIDRef, &out.SecurityPolicyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityPolicyIDSelector != nil {
		in, out := &in.SecurityPolicyIDSelector, &out.SecurityPolicyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.XForwardedForConfig != nil {
		in, out := &in.XForwardedForConfig, &out.XForwardedForConfig
		*out = make([]XForwardedForConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerParameters.
func (in *ListenerParameters) DeepCopy() *ListenerParameters {
	if in == nil {
		return nil
	}
	out := new(ListenerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpec) DeepCopyInto(out *ListenerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpec.
func (in *ListenerSpec) DeepCopy() *ListenerSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerStatus) DeepCopyInto(out *ListenerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerStatus.
func (in *ListenerStatus) DeepCopy() *ListenerStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerAddressesInitParameters) DeepCopyInto(out *LoadBalancerAddressesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerAddressesInitParameters.
func (in *LoadBalancerAddressesInitParameters) DeepCopy() *LoadBalancerAddressesInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerAddressesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerAddressesObservation) DeepCopyInto(out *LoadBalancerAddressesObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.EIPType != nil {
		in, out := &in.EIPType, &out.EIPType
		*out = new(string)
		**out = **in
	}
	if in.IPv4LocalAddresses != nil {
		in, out := &in.IPv4LocalAddresses, &out.IPv4LocalAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressHcStatus != nil {
		in, out := &in.IPv6AddressHcStatus, &out.IPv6AddressHcStatus
		*out = new(string)
		**out = **in
	}
	if in.IPv6LocalAddresses != nil {
		in, out := &in.IPv6LocalAddresses, &out.IPv6LocalAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IntranetAddress != nil {
		in, out := &in.IntranetAddress, &out.IntranetAddress
		*out = new(string)
		**out = **in
	}
	if in.IntranetAddressHcStatus != nil {
		in, out := &in.IntranetAddressHcStatus, &out.IntranetAddressHcStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerAddressesObservation.
func (in *LoadBalancerAddressesObservation) DeepCopy() *LoadBalancerAddressesObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerAddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerAddressesParameters) DeepCopyInto(out *LoadBalancerAddressesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerAddressesParameters.
func (in *LoadBalancerAddressesParameters) DeepCopy() *LoadBalancerAddressesParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerAddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBillingConfigInitParameters) DeepCopyInto(out *LoadBalancerBillingConfigInitParameters) {
	*out = *in
	if in.PayType != nil {
		in, out := &in.PayType, &out.PayType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBillingConfigInitParameters.
func (in *LoadBalancerBillingConfigInitParameters) DeepCopy() *LoadBalancerBillingConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBillingConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBillingConfigObservation) DeepCopyInto(out *LoadBalancerBillingConfigObservation) {
	*out = *in
	if in.PayType != nil {
		in, out := &in.PayType, &out.PayType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBillingConfigObservation.
func (in *LoadBalancerBillingConfigObservation) DeepCopy() *LoadBalancerBillingConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBillingConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBillingConfigParameters) DeepCopyInto(out *LoadBalancerBillingConfigParameters) {
	*out = *in
	if in.PayType != nil {
		in, out := &in.PayType, &out.PayType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBillingConfigParameters.
func (in *LoadBalancerBillingConfigParameters) DeepCopy() *LoadBalancerBillingConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBillingConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerInitParameters) DeepCopyInto(out *LoadBalancerInitParameters) {
	*out = *in
	if in.AccessLogConfig != nil {
		in, out := &in.AccessLogConfig, &out.AccessLogConfig
		*out = make([]AccessLogConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddressAllocatedMode != nil {
		in, out := &in.AddressAllocatedMode, &out.AddressAllocatedMode
		*out = new(string)
		**out = **in
	}
	if in.AddressIPVersion != nil {
		in, out := &in.AddressIPVersion, &out.AddressIPVersion
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackageID != nil {
		in, out := &in.BandwidthPackageID, &out.BandwidthPackageID
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtectionConfig != nil {
		in, out := &in.DeletionProtectionConfig, &out.DeletionProtectionConfig
		*out = make([]DeletionProtectionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.IPv6AddressType != nil {
		in, out := &in.IPv6AddressType, &out.IPv6AddressType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerBillingConfig != nil {
		in, out := &in.LoadBalancerBillingConfig, &out.LoadBalancerBillingConfig
		*out = make([]LoadBalancerBillingConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerEdition != nil {
		in, out := &in.LoadBalancerEdition, &out.LoadBalancerEdition
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerName != nil {
		in, out := &in.LoadBalancerName, &out.LoadBalancerName
		*out = new(string)
		**out = **in
	}
	if in.ModificationProtectionConfig != nil {
		in, out := &in.ModificationProtectionConfig, &out.ModificationProtectionConfig
		*out = make([]ModificationProtectionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneMappings != nil {
		in, out := &in.ZoneMappings, &out.ZoneMappings
		*out = make([]ZoneMappingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerInitParameters.
func (in *LoadBalancerInitParameters) DeepCopy() *LoadBalancerInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerList) DeepCopyInto(out *LoadBalancerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerList.
func (in *LoadBalancerList) DeepCopy() *LoadBalancerList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
	if in.AccessLogConfig != nil {
		in, out := &in.AccessLogConfig, &out.AccessLogConfig
		*out = make([]AccessLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddressAllocatedMode != nil {
		in, out := &in.AddressAllocatedMode, &out.AddressAllocatedMode
		*out = new(string)
		**out = **in
	}
	if in.AddressIPVersion != nil {
		in, out := &in.AddressIPVersion, &out.AddressIPVersion
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackageID != nil {
		in, out := &in.BandwidthPackageID, &out.BandwidthPackageID
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtectionConfig != nil {
		in, out := &in.DeletionProtectionConfig, &out.DeletionProtectionConfig
		*out = make([]DeletionProtectionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6AddressType != nil {
		in, out := &in.IPv6AddressType, &out.IPv6AddressType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerBillingConfig != nil {
		in, out := &in.LoadBalancerBillingConfig, &out.LoadBalancerBillingConfig
		*out = make([]LoadBalancerBillingConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerEdition != nil {
		in, out := &in.LoadBalancerEdition, &out.LoadBalancerEdition
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerName != nil {
		in, out := &in.LoadBalancerName, &out.LoadBalancerName
		*out = new(string)
		**out = **in
	}
	if in.ModificationProtectionConfig != nil {
		in, out := &in.ModificationProtectionConfig, &out.ModificationProtectionConfig
		*out = make([]ModificationProtectionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegionID != nil {
		in, out := &in.RegionID, &out.RegionID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.ZoneMappings != nil {
		in, out := &in.ZoneMappings, &out.ZoneMappings
		*out = make([]ZoneMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.AccessLogConfig != nil {
		in, out := &in.AccessLogConfig, &out.AccessLogConfig
		*out = make([]AccessLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AddressAllocatedMode != nil {
		in, out := &in.AddressAllocatedMode, &out.AddressAllocatedMode
		*out = new(string)
		**out = **in
	}
	if in.AddressIPVersion != nil {
		in, out := &in.AddressIPVersion, &out.AddressIPVersion
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackageID != nil {
		in, out := &in.BandwidthPackageID, &out.BandwidthPackageID
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtectionConfig != nil {
		in, out := &in.DeletionProtectionConfig, &out.DeletionProtectionConfig
		*out = make([]DeletionProtectionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtectionEnabled != nil {
		in, out := &in.DeletionProtectionEnabled, &out.DeletionProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.IPv6AddressType != nil {
		in, out := &in.IPv6AddressType, &out.IPv6AddressType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerBillingConfig != nil {
		in, out := &in.LoadBalancerBillingConfig, &out.LoadBalancerBillingConfig
		*out = make([]LoadBalancerBillingConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerEdition != nil {
		in, out := &in.LoadBalancerEdition, &out.LoadBalancerEdition
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerName != nil {
		in, out := &in.LoadBalancerName, &out.LoadBalancerName
		*out = new(string)
		**out = **in
	}
	if in.ModificationProtectionConfig != nil {
		in, out := &in.ModificationProtectionConfig, &out.ModificationProtectionConfig
		*out = make([]ModificationProtectionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneMappings != nil {
		in, out := &in.ZoneMappings, &out.ZoneMappings
		*out = make([]ZoneMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachment) DeepCopyInto(out *LoadBalancerSecurityGroupAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachment.
func (in *LoadBalancerSecurityGroupAttachment) DeepCopy() *LoadBalancerSecurityGroupAttachment {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerSecurityGroupAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachmentInitParameters) DeepCopyInto(out *LoadBalancerSecurityGroupAttachmentInitParameters) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIDRef != nil {
		in, out := &in.LoadBalancerIDRef, &out.LoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerIDSelector != nil {
		in, out := &in.LoadBalancerIDSelector, &out.LoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachmentInitParameters.
func (in *LoadBalancerSecurityGroupAttachmentInitParameters) DeepCopy() *LoadBalancerSecurityGroupAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachmentList) DeepCopyInto(out *LoadBalancerSecurityGroupAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerSecurityGroupAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachmentList.
func (in *LoadBalancerSecurityGroupAttachmentList) DeepCopy() *LoadBalancerSecurityGroupAttachmentList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerSecurityGroupAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachmentObservation) DeepCopyInto(out *LoadBalancerSecurityGroupAttachmentObservation) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachmentObservation.
func (in *LoadBalancerSecurityGroupAttachmentObservation) DeepCopy() *LoadBalancerSecurityGroupAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachmentParameters) DeepCopyInto(out *LoadBalancerSecurityGroupAttachmentParameters) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIDRef != nil {
		in, out := &in.LoadBalancerIDRef, &out.LoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerIDSelector != nil {
		in, out := &in.LoadBalancerIDSelector, &out.LoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachmentParameters.
func (in *LoadBalancerSecurityGroupAttachmentParameters) DeepCopy() *LoadBalancerSecurityGroupAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachmentSpec) DeepCopyInto(out *LoadBalancerSecurityGroupAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachmentSpec.
func (in *LoadBalancerSecurityGroupAttachmentSpec) DeepCopy() *LoadBalancerSecurityGroupAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSecurityGroupAttachmentStatus) DeepCopyInto(out *LoadBalancerSecurityGroupAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSecurityGroupAttachmentStatus.
func (in *LoadBalancerSecurityGroupAttachmentStatus) DeepCopy() *LoadBalancerSecurityGroupAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSecurityGroupAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerSpec) DeepCopyInto(out *LoadBalancerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerSpec.
func (in *LoadBalancerSpec) DeepCopy() *LoadBalancerSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerStatus) DeepCopyInto(out *LoadBalancerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerStatus.
func (in *LoadBalancerStatus) DeepCopy() *LoadBalancerStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachment) DeepCopyInto(out *LoadBalancerZoneShiftedAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachment.
func (in *LoadBalancerZoneShiftedAttachment) DeepCopy() *LoadBalancerZoneShiftedAttachment {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerZoneShiftedAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachmentInitParameters) DeepCopyInto(out *LoadBalancerZoneShiftedAttachmentInitParameters) {
	*out = *in
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIDRef != nil {
		in, out := &in.LoadBalancerIDRef, &out.LoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerIDSelector != nil {
		in, out := &in.LoadBalancerIDSelector, &out.LoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDRef != nil {
		in, out := &in.VswitchIDRef, &out.VswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchIDSelector != nil {
		in, out := &in.VswitchIDSelector, &out.VswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachmentInitParameters.
func (in *LoadBalancerZoneShiftedAttachmentInitParameters) DeepCopy() *LoadBalancerZoneShiftedAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachmentList) DeepCopyInto(out *LoadBalancerZoneShiftedAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoadBalancerZoneShiftedAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachmentList.
func (in *LoadBalancerZoneShiftedAttachmentList) DeepCopy() *LoadBalancerZoneShiftedAttachmentList {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoadBalancerZoneShiftedAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachmentObservation) DeepCopyInto(out *LoadBalancerZoneShiftedAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachmentObservation.
func (in *LoadBalancerZoneShiftedAttachmentObservation) DeepCopy() *LoadBalancerZoneShiftedAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachmentParameters) DeepCopyInto(out *LoadBalancerZoneShiftedAttachmentParameters) {
	*out = *in
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerIDRef != nil {
		in, out := &in.LoadBalancerIDRef, &out.LoadBalancerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerIDSelector != nil {
		in, out := &in.LoadBalancerIDSelector, &out.LoadBalancerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDRef != nil {
		in, out := &in.VswitchIDRef, &out.VswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchIDSelector != nil {
		in, out := &in.VswitchIDSelector, &out.VswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachmentParameters.
func (in *LoadBalancerZoneShiftedAttachmentParameters) DeepCopy() *LoadBalancerZoneShiftedAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachmentSpec) DeepCopyInto(out *LoadBalancerZoneShiftedAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachmentSpec.
func (in *LoadBalancerZoneShiftedAttachmentSpec) DeepCopy() *LoadBalancerZoneShiftedAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerZoneShiftedAttachmentStatus) DeepCopyInto(out *LoadBalancerZoneShiftedAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerZoneShiftedAttachmentStatus.
func (in *LoadBalancerZoneShiftedAttachmentStatus) DeepCopy() *LoadBalancerZoneShiftedAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerZoneShiftedAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodConfigInitParameters) DeepCopyInto(out *MethodConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodConfigInitParameters.
func (in *MethodConfigInitParameters) DeepCopy() *MethodConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MethodConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodConfigObservation) DeepCopyInto(out *MethodConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodConfigObservation.
func (in *MethodConfigObservation) DeepCopy() *MethodConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MethodConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodConfigParameters) DeepCopyInto(out *MethodConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodConfigParameters.
func (in *MethodConfigParameters) DeepCopy() *MethodConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MethodConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorGroupConfigInitParameters) DeepCopyInto(out *MirrorGroupConfigInitParameters) {
	*out = *in
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]MirrorGroupConfigServerGroupTuplesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorGroupConfigInitParameters.
func (in *MirrorGroupConfigInitParameters) DeepCopy() *MirrorGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(MirrorGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorGroupConfigObservation) DeepCopyInto(out *MirrorGroupConfigObservation) {
	*out = *in
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]MirrorGroupConfigServerGroupTuplesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorGroupConfigObservation.
func (in *MirrorGroupConfigObservation) DeepCopy() *MirrorGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MirrorGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorGroupConfigParameters) DeepCopyInto(out *MirrorGroupConfigParameters) {
	*out = *in
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]MirrorGroupConfigServerGroupTuplesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorGroupConfigParameters.
func (in *MirrorGroupConfigParameters) DeepCopy() *MirrorGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MirrorGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorGroupConfigServerGroupTuplesInitParameters) DeepCopyInto(out *MirrorGroupConfigServerGroupTuplesInitParameters) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorGroupConfigServerGroupTuplesInitParameters.
func (in *MirrorGroupConfigServerGroupTuplesInitParameters) DeepCopy() *MirrorGroupConfigServerGroupTuplesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MirrorGroupConfigServerGroupTuplesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorGroupConfigServerGroupTuplesObservation) DeepCopyInto(out *MirrorGroupConfigServerGroupTuplesObservation) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorGroupConfigServerGroupTuplesObservation.
func (in *MirrorGroupConfigServerGroupTuplesObservation) DeepCopy() *MirrorGroupConfigServerGroupTuplesObservation {
	if in == nil {
		return nil
	}
	out := new(MirrorGroupConfigServerGroupTuplesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MirrorGroupConfigServerGroupTuplesParameters) DeepCopyInto(out *MirrorGroupConfigServerGroupTuplesParameters) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MirrorGroupConfigServerGroupTuplesParameters.
func (in *MirrorGroupConfigServerGroupTuplesParameters) DeepCopy() *MirrorGroupConfigServerGroupTuplesParameters {
	if in == nil {
		return nil
	}
	out := new(MirrorGroupConfigServerGroupTuplesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModificationProtectionConfigInitParameters) DeepCopyInto(out *ModificationProtectionConfigInitParameters) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModificationProtectionConfigInitParameters.
func (in *ModificationProtectionConfigInitParameters) DeepCopy() *ModificationProtectionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ModificationProtectionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModificationProtectionConfigObservation) DeepCopyInto(out *ModificationProtectionConfigObservation) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModificationProtectionConfigObservation.
func (in *ModificationProtectionConfigObservation) DeepCopy() *ModificationProtectionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ModificationProtectionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModificationProtectionConfigParameters) DeepCopyInto(out *ModificationProtectionConfigParameters) {
	*out = *in
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModificationProtectionConfigParameters.
func (in *ModificationProtectionConfigParameters) DeepCopy() *ModificationProtectionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ModificationProtectionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathConfigInitParameters) DeepCopyInto(out *PathConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathConfigInitParameters.
func (in *PathConfigInitParameters) DeepCopy() *PathConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathConfigObservation) DeepCopyInto(out *PathConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathConfigObservation.
func (in *PathConfigObservation) DeepCopy() *PathConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PathConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathConfigParameters) DeepCopyInto(out *PathConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathConfigParameters.
func (in *PathConfigParameters) DeepCopy() *PathConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PathConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConfigInitParameters) DeepCopyInto(out *QueryStringConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]QueryStringConfigValuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConfigInitParameters.
func (in *QueryStringConfigInitParameters) DeepCopy() *QueryStringConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConfigObservation) DeepCopyInto(out *QueryStringConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]QueryStringConfigValuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConfigObservation.
func (in *QueryStringConfigObservation) DeepCopy() *QueryStringConfigObservation {
	if in == nil {
		return nil
	}
	out := new(QueryStringConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConfigParameters) DeepCopyInto(out *QueryStringConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]QueryStringConfigValuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConfigParameters.
func (in *QueryStringConfigParameters) DeepCopy() *QueryStringConfigParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConfigValuesInitParameters) DeepCopyInto(out *QueryStringConfigValuesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConfigValuesInitParameters.
func (in *QueryStringConfigValuesInitParameters) DeepCopy() *QueryStringConfigValuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringConfigValuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConfigValuesObservation) DeepCopyInto(out *QueryStringConfigValuesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConfigValuesObservation.
func (in *QueryStringConfigValuesObservation) DeepCopy() *QueryStringConfigValuesObservation {
	if in == nil {
		return nil
	}
	out := new(QueryStringConfigValuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryStringConfigValuesParameters) DeepCopyInto(out *QueryStringConfigValuesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryStringConfigValuesParameters.
func (in *QueryStringConfigValuesParameters) DeepCopy() *QueryStringConfigValuesParameters {
	if in == nil {
		return nil
	}
	out := new(QueryStringConfigValuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuicConfigInitParameters) DeepCopyInto(out *QuicConfigInitParameters) {
	*out = *in
	if in.QuicListenerID != nil {
		in, out := &in.QuicListenerID, &out.QuicListenerID
		*out = new(string)
		**out = **in
	}
	if in.QuicUpgradeEnabled != nil {
		in, out := &in.QuicUpgradeEnabled, &out.QuicUpgradeEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuicConfigInitParameters.
func (in *QuicConfigInitParameters) DeepCopy() *QuicConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(QuicConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuicConfigObservation) DeepCopyInto(out *QuicConfigObservation) {
	*out = *in
	if in.QuicListenerID != nil {
		in, out := &in.QuicListenerID, &out.QuicListenerID
		*out = new(string)
		**out = **in
	}
	if in.QuicUpgradeEnabled != nil {
		in, out := &in.QuicUpgradeEnabled, &out.QuicUpgradeEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuicConfigObservation.
func (in *QuicConfigObservation) DeepCopy() *QuicConfigObservation {
	if in == nil {
		return nil
	}
	out := new(QuicConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuicConfigParameters) DeepCopyInto(out *QuicConfigParameters) {
	*out = *in
	if in.QuicListenerID != nil {
		in, out := &in.QuicListenerID, &out.QuicListenerID
		*out = new(string)
		**out = **in
	}
	if in.QuicUpgradeEnabled != nil {
		in, out := &in.QuicUpgradeEnabled, &out.QuicUpgradeEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuicConfigParameters.
func (in *QuicConfigParameters) DeepCopy() *QuicConfigParameters {
	if in == nil {
		return nil
	}
	out := new(QuicConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectConfigInitParameters) DeepCopyInto(out *RedirectConfigInitParameters) {
	*out = *in
	if in.HTTPCode != nil {
		in, out := &in.HTTPCode, &out.HTTPCode
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectConfigInitParameters.
func (in *RedirectConfigInitParameters) DeepCopy() *RedirectConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectConfigObservation) DeepCopyInto(out *RedirectConfigObservation) {
	*out = *in
	if in.HTTPCode != nil {
		in, out := &in.HTTPCode, &out.HTTPCode
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectConfigObservation.
func (in *RedirectConfigObservation) DeepCopy() *RedirectConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectConfigParameters) DeepCopyInto(out *RedirectConfigParameters) {
	*out = *in
	if in.HTTPCode != nil {
		in, out := &in.HTTPCode, &out.HTTPCode
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectConfigParameters.
func (in *RedirectConfigParameters) DeepCopy() *RedirectConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoveHeaderConfigInitParameters) DeepCopyInto(out *RemoveHeaderConfigInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoveHeaderConfigInitParameters.
func (in *RemoveHeaderConfigInitParameters) DeepCopy() *RemoveHeaderConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemoveHeaderConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoveHeaderConfigObservation) DeepCopyInto(out *RemoveHeaderConfigObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoveHeaderConfigObservation.
func (in *RemoveHeaderConfigObservation) DeepCopy() *RemoveHeaderConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RemoveHeaderConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoveHeaderConfigParameters) DeepCopyInto(out *RemoveHeaderConfigParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoveHeaderConfigParameters.
func (in *RemoveHeaderConfigParameters) DeepCopy() *RemoveHeaderConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RemoveHeaderConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderConfigInitParameters) DeepCopyInto(out *ResponseHeaderConfigInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderConfigInitParameters.
func (in *ResponseHeaderConfigInitParameters) DeepCopy() *ResponseHeaderConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderConfigObservation) DeepCopyInto(out *ResponseHeaderConfigObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderConfigObservation.
func (in *ResponseHeaderConfigObservation) DeepCopy() *ResponseHeaderConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderConfigParameters) DeepCopyInto(out *ResponseHeaderConfigParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderConfigParameters.
func (in *ResponseHeaderConfigParameters) DeepCopy() *ResponseHeaderConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseStatusCodeConfigInitParameters) DeepCopyInto(out *ResponseStatusCodeConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseStatusCodeConfigInitParameters.
func (in *ResponseStatusCodeConfigInitParameters) DeepCopy() *ResponseStatusCodeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseStatusCodeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseStatusCodeConfigObservation) DeepCopyInto(out *ResponseStatusCodeConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseStatusCodeConfigObservation.
func (in *ResponseStatusCodeConfigObservation) DeepCopy() *ResponseStatusCodeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseStatusCodeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseStatusCodeConfigParameters) DeepCopyInto(out *ResponseStatusCodeConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseStatusCodeConfigParameters.
func (in *ResponseStatusCodeConfigParameters) DeepCopy() *ResponseStatusCodeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseStatusCodeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RewriteConfigInitParameters) DeepCopyInto(out *RewriteConfigInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RewriteConfigInitParameters.
func (in *RewriteConfigInitParameters) DeepCopy() *RewriteConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RewriteConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RewriteConfigObservation) DeepCopyInto(out *RewriteConfigObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RewriteConfigObservation.
func (in *RewriteConfigObservation) DeepCopy() *RewriteConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RewriteConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RewriteConfigParameters) DeepCopyInto(out *RewriteConfigParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RewriteConfigParameters.
func (in *RewriteConfigParameters) DeepCopy() *RewriteConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RewriteConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Rule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionsForwardGroupConfigInitParameters) DeepCopyInto(out *RuleActionsForwardGroupConfigInitParameters) {
	*out = *in
	if in.ServerGroupStickySession != nil {
		in, out := &in.ServerGroupStickySession, &out.ServerGroupStickySession
		*out = make([]ServerGroupStickySessionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]ForwardGroupConfigServerGroupTuplesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionsForwardGroupConfigInitParameters.
func (in *RuleActionsForwardGroupConfigInitParameters) DeepCopy() *RuleActionsForwardGroupConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleActionsForwardGroupConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionsForwardGroupConfigObservation) DeepCopyInto(out *RuleActionsForwardGroupConfigObservation) {
	*out = *in
	if in.ServerGroupStickySession != nil {
		in, out := &in.ServerGroupStickySession, &out.ServerGroupStickySession
		*out = make([]ServerGroupStickySessionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]ForwardGroupConfigServerGroupTuplesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionsForwardGroupConfigObservation.
func (in *RuleActionsForwardGroupConfigObservation) DeepCopy() *RuleActionsForwardGroupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RuleActionsForwardGroupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionsForwardGroupConfigParameters) DeepCopyInto(out *RuleActionsForwardGroupConfigParameters) {
	*out = *in
	if in.ServerGroupStickySession != nil {
		in, out := &in.ServerGroupStickySession, &out.ServerGroupStickySession
		*out = make([]ServerGroupStickySessionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerGroupTuples != nil {
		in, out := &in.ServerGroupTuples, &out.ServerGroupTuples
		*out = make([]ForwardGroupConfigServerGroupTuplesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionsForwardGroupConfigParameters.
func (in *RuleActionsForwardGroupConfigParameters) DeepCopy() *RuleActionsForwardGroupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RuleActionsForwardGroupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionsInitParameters) DeepCopyInto(out *RuleActionsInitParameters) {
	*out = *in
	if in.CorsConfig != nil {
		in, out := &in.CorsConfig, &out.CorsConfig
		*out = make([]CorsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FixedResponseConfig != nil {
		in, out := &in.FixedResponseConfig, &out.FixedResponseConfig
		*out = make([]FixedResponseConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardGroupConfig != nil {
		in, out := &in.ForwardGroupConfig, &out.ForwardGroupConfig
		*out = make([]RuleActionsForwardGroupConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InsertHeaderConfig != nil {
		in, out := &in.InsertHeaderConfig, &out.InsertHeaderConfig
		*out = make([]InsertHeaderConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.RedirectConfig != nil {
		in, out := &in.RedirectConfig, &out.RedirectConfig
		*out = make([]RedirectConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveHeaderConfig != nil {
		in, out := &in.RemoveHeaderConfig, &out.RemoveHeaderConfig
		*out = make([]RemoveHeaderConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RewriteConfig != nil {
		in, out := &in.RewriteConfig, &out.RewriteConfig
		*out = make([]RewriteConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficLimitConfig != nil {
		in, out := &in.TrafficLimitConfig, &out.TrafficLimitConfig
		*out = make([]TrafficLimitConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficMirrorConfig != nil {
		in, out := &in.TrafficMirrorConfig, &out.TrafficMirrorConfig
		*out = make([]TrafficMirrorConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionsInitParameters.
func (in *RuleActionsInitParameters) DeepCopy() *RuleActionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleActionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionsObservation) DeepCopyInto(out *RuleActionsObservation) {
	*out = *in
	if in.CorsConfig != nil {
		in, out := &in.CorsConfig, &out.CorsConfig
		*out = make([]CorsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FixedResponseConfig != nil {
		in, out := &in.FixedResponseConfig, &out.FixedResponseConfig
		*out = make([]FixedResponseConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardGroupConfig != nil {
		in, out := &in.ForwardGroupConfig, &out.ForwardGroupConfig
		*out = make([]RuleActionsForwardGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InsertHeaderConfig != nil {
		in, out := &in.InsertHeaderConfig, &out.InsertHeaderConfig
		*out = make([]InsertHeaderConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.RedirectConfig != nil {
		in, out := &in.RedirectConfig, &out.RedirectConfig
		*out = make([]RedirectConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveHeaderConfig != nil {
		in, out := &in.RemoveHeaderConfig, &out.RemoveHeaderConfig
		*out = make([]RemoveHeaderConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RewriteConfig != nil {
		in, out := &in.RewriteConfig, &out.RewriteConfig
		*out = make([]RewriteConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficLimitConfig != nil {
		in, out := &in.TrafficLimitConfig, &out.TrafficLimitConfig
		*out = make([]TrafficLimitConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficMirrorConfig != nil {
		in, out := &in.TrafficMirrorConfig, &out.TrafficMirrorConfig
		*out = make([]TrafficMirrorConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionsObservation.
func (in *RuleActionsObservation) DeepCopy() *RuleActionsObservation {
	if in == nil {
		return nil
	}
	out := new(RuleActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionsParameters) DeepCopyInto(out *RuleActionsParameters) {
	*out = *in
	if in.CorsConfig != nil {
		in, out := &in.CorsConfig, &out.CorsConfig
		*out = make([]CorsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FixedResponseConfig != nil {
		in, out := &in.FixedResponseConfig, &out.FixedResponseConfig
		*out = make([]FixedResponseConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForwardGroupConfig != nil {
		in, out := &in.ForwardGroupConfig, &out.ForwardGroupConfig
		*out = make([]RuleActionsForwardGroupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InsertHeaderConfig != nil {
		in, out := &in.InsertHeaderConfig, &out.InsertHeaderConfig
		*out = make([]InsertHeaderConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.RedirectConfig != nil {
		in, out := &in.RedirectConfig, &out.RedirectConfig
		*out = make([]RedirectConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveHeaderConfig != nil {
		in, out := &in.RemoveHeaderConfig, &out.RemoveHeaderConfig
		*out = make([]RemoveHeaderConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RewriteConfig != nil {
		in, out := &in.RewriteConfig, &out.RewriteConfig
		*out = make([]RewriteConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficLimitConfig != nil {
		in, out := &in.TrafficLimitConfig, &out.TrafficLimitConfig
		*out = make([]TrafficLimitConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficMirrorConfig != nil {
		in, out := &in.TrafficMirrorConfig, &out.TrafficMirrorConfig
		*out = make([]TrafficMirrorConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionsParameters.
func (in *RuleActionsParameters) DeepCopy() *RuleActionsParameters {
	if in == nil {
		return nil
	}
	out := new(RuleActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleConditionsInitParameters) DeepCopyInto(out *RuleConditionsInitParameters) {
	*out = *in
	if in.CookieConfig != nil {
		in, out := &in.CookieConfig, &out.CookieConfig
		*out = make([]CookieConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeaderConfig != nil {
		in, out := &in.HeaderConfig, &out.HeaderConfig
		*out = make([]HeaderConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MethodConfig != nil {
		in, out := &in.MethodConfig, &out.MethodConfig
		*out = make([]MethodConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathConfig != nil {
		in, out := &in.PathConfig, &out.PathConfig
		*out = make([]PathConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringConfig != nil {
		in, out := &in.QueryStringConfig, &out.QueryStringConfig
		*out = make([]QueryStringConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderConfig != nil {
		in, out := &in.ResponseHeaderConfig, &out.ResponseHeaderConfig
		*out = make([]ResponseHeaderConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseStatusCodeConfig != nil {
		in, out := &in.ResponseStatusCodeConfig, &out.ResponseStatusCodeConfig
		*out = make([]ResponseStatusCodeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPConfig != nil {
		in, out := &in.SourceIPConfig, &out.SourceIPConfig
		*out = make([]SourceIPConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleConditionsInitParameters.
func (in *RuleConditionsInitParameters) DeepCopy() *RuleConditionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleConditionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleConditionsObservation) DeepCopyInto(out *RuleConditionsObservation) {
	*out = *in
	if in.CookieConfig != nil {
		in, out := &in.CookieConfig, &out.CookieConfig
		*out = make([]CookieConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeaderConfig != nil {
		in, out := &in.HeaderConfig, &out.HeaderConfig
		*out = make([]HeaderConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MethodConfig != nil {
		in, out := &in.MethodConfig, &out.MethodConfig
		*out = make([]MethodConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathConfig != nil {
		in, out := &in.PathConfig, &out.PathConfig
		*out = make([]PathConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringConfig != nil {
		in, out := &in.QueryStringConfig, &out.QueryStringConfig
		*out = make([]QueryStringConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderConfig != nil {
		in, out := &in.ResponseHeaderConfig, &out.ResponseHeaderConfig
		*out = make([]ResponseHeaderConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseStatusCodeConfig != nil {
		in, out := &in.ResponseStatusCodeConfig, &out.ResponseStatusCodeConfig
		*out = make([]ResponseStatusCodeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPConfig != nil {
		in, out := &in.SourceIPConfig, &out.SourceIPConfig
		*out = make([]SourceIPConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleConditionsObservation.
func (in *RuleConditionsObservation) DeepCopy() *RuleConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(RuleConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleConditionsParameters) DeepCopyInto(out *RuleConditionsParameters) {
	*out = *in
	if in.CookieConfig != nil {
		in, out := &in.CookieConfig, &out.CookieConfig
		*out = make([]CookieConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HeaderConfig != nil {
		in, out := &in.HeaderConfig, &out.HeaderConfig
		*out = make([]HeaderConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MethodConfig != nil {
		in, out := &in.MethodConfig, &out.MethodConfig
		*out = make([]MethodConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathConfig != nil {
		in, out := &in.PathConfig, &out.PathConfig
		*out = make([]PathConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QueryStringConfig != nil {
		in, out := &in.QueryStringConfig, &out.QueryStringConfig
		*out = make([]QueryStringConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderConfig != nil {
		in, out := &in.ResponseHeaderConfig, &out.ResponseHeaderConfig
		*out = make([]ResponseHeaderConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseStatusCodeConfig != nil {
		in, out := &in.ResponseStatusCodeConfig, &out.ResponseStatusCodeConfig
		*out = make([]ResponseStatusCodeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPConfig != nil {
		in, out := &in.SourceIPConfig, &out.SourceIPConfig
		*out = make([]SourceIPConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleConditionsParameters.
func (in *RuleConditionsParameters) DeepCopy() *RuleConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(RuleConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleInitParameters) DeepCopyInto(out *RuleInitParameters) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RuleActions != nil {
		in, out := &in.RuleActions, &out.RuleActions
		*out = make([]RuleActionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleConditions != nil {
		in, out := &in.RuleConditions, &out.RuleConditions
		*out = make([]RuleConditionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleName != nil {
		in, out := &in.RuleName, &out.RuleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleInitParameters.
func (in *RuleInitParameters) DeepCopy() *RuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleList) DeepCopyInto(out *RuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Rule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleList.
func (in *RuleList) DeepCopy() *RuleList {
	if in == nil {
		return nil
	}
	out := new(RuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RuleActions != nil {
		in, out := &in.RuleActions, &out.RuleActions
		*out = make([]RuleActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleConditions != nil {
		in, out := &in.RuleConditions, &out.RuleConditions
		*out = make([]RuleConditionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleName != nil {
		in, out := &in.RuleName, &out.RuleName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ListenerID != nil {
		in, out := &in.ListenerID, &out.ListenerID
		*out = new(string)
		**out = **in
	}
	if in.ListenerIDRef != nil {
		in, out := &in.ListenerIDRef, &out.ListenerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ListenerIDSelector != nil {
		in, out := &in.ListenerIDSelector, &out.ListenerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RuleActions != nil {
		in, out := &in.RuleActions, &out.RuleActions
		*out = make([]RuleActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleConditions != nil {
		in, out := &in.RuleConditions, &out.RuleConditions
		*out = make([]RuleConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleName != nil {
		in, out := &in.RuleName, &out.RuleName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSpec) DeepCopyInto(out *RuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSpec.
func (in *RuleSpec) DeepCopy() *RuleSpec {
	if in == nil {
		return nil
	}
	out := new(RuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleStatus) DeepCopyInto(out *RuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleStatus.
func (in *RuleStatus) DeepCopy() *RuleStatus {
	if in == nil {
		return nil
	}
	out := new(RuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicy) DeepCopyInto(out *SecurityPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicy.
func (in *SecurityPolicy) DeepCopy() *SecurityPolicy {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyInitParameters) DeepCopyInto(out *SecurityPolicyInitParameters) {
	*out = *in
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyName != nil {
		in, out := &in.SecurityPolicyName, &out.SecurityPolicyName
		*out = new(string)
		**out = **in
	}
	if in.TLSVersions != nil {
		in, out := &in.TLSVersions, &out.TLSVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyInitParameters.
func (in *SecurityPolicyInitParameters) DeepCopy() *SecurityPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyList) DeepCopyInto(out *SecurityPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyList.
func (in *SecurityPolicyList) DeepCopy() *SecurityPolicyList {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyObservation) DeepCopyInto(out *SecurityPolicyObservation) {
	*out = *in
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyName != nil {
		in, out := &in.SecurityPolicyName, &out.SecurityPolicyName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TLSVersions != nil {
		in, out := &in.TLSVersions, &out.TLSVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyObservation.
func (in *SecurityPolicyObservation) DeepCopy() *SecurityPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyParameters) DeepCopyInto(out *SecurityPolicyParameters) {
	*out = *in
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyName != nil {
		in, out := &in.SecurityPolicyName, &out.SecurityPolicyName
		*out = new(string)
		**out = **in
	}
	if in.TLSVersions != nil {
		in, out := &in.TLSVersions, &out.TLSVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyParameters.
func (in *SecurityPolicyParameters) DeepCopy() *SecurityPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicySpec) DeepCopyInto(out *SecurityPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicySpec.
func (in *SecurityPolicySpec) DeepCopy() *SecurityPolicySpec {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityPolicyStatus) DeepCopyInto(out *SecurityPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityPolicyStatus.
func (in *SecurityPolicyStatus) DeepCopy() *SecurityPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroup) DeepCopyInto(out *ServerGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroup.
func (in *ServerGroup) DeepCopy() *ServerGroup {
	if in == nil {
		return nil
	}
	out := new(ServerGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServerGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupInitParameters) DeepCopyInto(out *ServerGroupInitParameters) {
	*out = *in
	if in.ConnectionDrainConfig != nil {
		in, out := &in.ConnectionDrainConfig, &out.ConnectionDrainConfig
		*out = make([]ConnectionDrainConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CrossZoneEnabled != nil {
		in, out := &in.CrossZoneEnabled, &out.CrossZoneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckConfig != nil {
		in, out := &in.HealthCheckConfig, &out.HealthCheckConfig
		*out = make([]HealthCheckConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthCheckTemplateID != nil {
		in, out := &in.HealthCheckTemplateID, &out.HealthCheckTemplateID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Enabled != nil {
		in, out := &in.IPv6Enabled, &out.IPv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupName != nil {
		in, out := &in.ServerGroupName, &out.ServerGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupType != nil {
		in, out := &in.ServerGroupType, &out.ServerGroupType
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SlowStartConfig != nil {
		in, out := &in.SlowStartConfig, &out.SlowStartConfig
		*out = make([]SlowStartConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySessionConfig != nil {
		in, out := &in.StickySessionConfig, &out.StickySessionConfig
		*out = make([]StickySessionConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UchConfig != nil {
		in, out := &in.UchConfig, &out.UchConfig
		*out = make([]UchConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpstreamKeepaliveEnabled != nil {
		in, out := &in.UpstreamKeepaliveEnabled, &out.UpstreamKeepaliveEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupInitParameters.
func (in *ServerGroupInitParameters) DeepCopy() *ServerGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupList) DeepCopyInto(out *ServerGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServerGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupList.
func (in *ServerGroupList) DeepCopy() *ServerGroupList {
	if in == nil {
		return nil
	}
	out := new(ServerGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServerGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupObservation) DeepCopyInto(out *ServerGroupObservation) {
	*out = *in
	if in.ConnectionDrainConfig != nil {
		in, out := &in.ConnectionDrainConfig, &out.ConnectionDrainConfig
		*out = make([]ConnectionDrainConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.CrossZoneEnabled != nil {
		in, out := &in.CrossZoneEnabled, &out.CrossZoneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckConfig != nil {
		in, out := &in.HealthCheckConfig, &out.HealthCheckConfig
		*out = make([]HealthCheckConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthCheckTemplateID != nil {
		in, out := &in.HealthCheckTemplateID, &out.HealthCheckTemplateID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Enabled != nil {
		in, out := &in.IPv6Enabled, &out.IPv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupName != nil {
		in, out := &in.ServerGroupName, &out.ServerGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupType != nil {
		in, out := &in.ServerGroupType, &out.ServerGroupType
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SlowStartConfig != nil {
		in, out := &in.SlowStartConfig, &out.SlowStartConfig
		*out = make([]SlowStartConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StickySessionConfig != nil {
		in, out := &in.StickySessionConfig, &out.StickySessionConfig
		*out = make([]StickySessionConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UchConfig != nil {
		in, out := &in.UchConfig, &out.UchConfig
		*out = make([]UchConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpstreamKeepaliveEnabled != nil {
		in, out := &in.UpstreamKeepaliveEnabled, &out.UpstreamKeepaliveEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupObservation.
func (in *ServerGroupObservation) DeepCopy() *ServerGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ServerGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupParameters) DeepCopyInto(out *ServerGroupParameters) {
	*out = *in
	if in.ConnectionDrainConfig != nil {
		in, out := &in.ConnectionDrainConfig, &out.ConnectionDrainConfig
		*out = make([]ConnectionDrainConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CrossZoneEnabled != nil {
		in, out := &in.CrossZoneEnabled, &out.CrossZoneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.HealthCheckConfig != nil {
		in, out := &in.HealthCheckConfig, &out.HealthCheckConfig
		*out = make([]HealthCheckConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthCheckTemplateID != nil {
		in, out := &in.HealthCheckTemplateID, &out.HealthCheckTemplateID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Enabled != nil {
		in, out := &in.IPv6Enabled, &out.IPv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupName != nil {
		in, out := &in.ServerGroupName, &out.ServerGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupType != nil {
		in, out := &in.ServerGroupType, &out.ServerGroupType
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SlowStartConfig != nil {
		in, out := &in.SlowStartConfig, &out.SlowStartConfig
		*out = make([]SlowStartConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StickySessionConfig != nil {
		in, out := &in.StickySessionConfig, &out.StickySessionConfig
		*out = make([]StickySessionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UchConfig != nil {
		in, out := &in.UchConfig, &out.UchConfig
		*out = make([]UchConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpstreamKeepaliveEnabled != nil {
		in, out := &in.UpstreamKeepaliveEnabled, &out.UpstreamKeepaliveEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupParameters.
func (in *ServerGroupParameters) DeepCopy() *ServerGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupSpec) DeepCopyInto(out *ServerGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupSpec.
func (in *ServerGroupSpec) DeepCopy() *ServerGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ServerGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupStatus) DeepCopyInto(out *ServerGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupStatus.
func (in *ServerGroupStatus) DeepCopy() *ServerGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ServerGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupStickySessionInitParameters) DeepCopyInto(out *ServerGroupStickySessionInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupStickySessionInitParameters.
func (in *ServerGroupStickySessionInitParameters) DeepCopy() *ServerGroupStickySessionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupStickySessionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupStickySessionObservation) DeepCopyInto(out *ServerGroupStickySessionObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupStickySessionObservation.
func (in *ServerGroupStickySessionObservation) DeepCopy() *ServerGroupStickySessionObservation {
	if in == nil {
		return nil
	}
	out := new(ServerGroupStickySessionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupStickySessionParameters) DeepCopyInto(out *ServerGroupStickySessionParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupStickySessionParameters.
func (in *ServerGroupStickySessionParameters) DeepCopy() *ServerGroupStickySessionParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupStickySessionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupTuplesInitParameters) DeepCopyInto(out *ServerGroupTuplesInitParameters) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupIDRef != nil {
		in, out := &in.ServerGroupIDRef, &out.ServerGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerGroupIDSelector != nil {
		in, out := &in.ServerGroupIDSelector, &out.ServerGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupTuplesInitParameters.
func (in *ServerGroupTuplesInitParameters) DeepCopy() *ServerGroupTuplesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupTuplesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupTuplesObservation) DeepCopyInto(out *ServerGroupTuplesObservation) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupTuplesObservation.
func (in *ServerGroupTuplesObservation) DeepCopy() *ServerGroupTuplesObservation {
	if in == nil {
		return nil
	}
	out := new(ServerGroupTuplesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerGroupTuplesParameters) DeepCopyInto(out *ServerGroupTuplesParameters) {
	*out = *in
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServerGroupIDRef != nil {
		in, out := &in.ServerGroupIDRef, &out.ServerGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerGroupIDSelector != nil {
		in, out := &in.ServerGroupIDSelector, &out.ServerGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerGroupTuplesParameters.
func (in *ServerGroupTuplesParameters) DeepCopy() *ServerGroupTuplesParameters {
	if in == nil {
		return nil
	}
	out := new(ServerGroupTuplesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersInitParameters) DeepCopyInto(out *ServersInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RemoteIPEnabled != nil {
		in, out := &in.RemoteIPEnabled, &out.RemoteIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIP != nil {
		in, out := &in.ServerIP, &out.ServerIP
		*out = new(string)
		**out = **in
	}
	if in.ServerIPRef != nil {
		in, out := &in.ServerIPRef, &out.ServerIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIPSelector != nil {
		in, out := &in.ServerIPSelector, &out.ServerIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersInitParameters.
func (in *ServersInitParameters) DeepCopy() *ServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersObservation) DeepCopyInto(out *ServersObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RemoteIPEnabled != nil {
		in, out := &in.RemoteIPEnabled, &out.RemoteIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServerGroupID != nil {
		in, out := &in.ServerGroupID, &out.ServerGroupID
		*out = new(string)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIP != nil {
		in, out := &in.ServerIP, &out.ServerIP
		*out = new(string)
		**out = **in
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersObservation.
func (in *ServersObservation) DeepCopy() *ServersObservation {
	if in == nil {
		return nil
	}
	out := new(ServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersParameters) DeepCopyInto(out *ServersParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RemoteIPEnabled != nil {
		in, out := &in.RemoteIPEnabled, &out.RemoteIPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIP != nil {
		in, out := &in.ServerIP, &out.ServerIP
		*out = new(string)
		**out = **in
	}
	if in.ServerIPRef != nil {
		in, out := &in.ServerIPRef, &out.ServerIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIPSelector != nil {
		in, out := &in.ServerIPSelector, &out.ServerIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersParameters.
func (in *ServersParameters) DeepCopy() *ServersParameters {
	if in == nil {
		return nil
	}
	out := new(ServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowStartConfigInitParameters) DeepCopyInto(out *SlowStartConfigInitParameters) {
	*out = *in
	if in.SlowStartDuration != nil {
		in, out := &in.SlowStartDuration, &out.SlowStartDuration
		*out = new(float64)
		**out = **in
	}
	if in.SlowStartEnabled != nil {
		in, out := &in.SlowStartEnabled, &out.SlowStartEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowStartConfigInitParameters.
func (in *SlowStartConfigInitParameters) DeepCopy() *SlowStartConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SlowStartConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowStartConfigObservation) DeepCopyInto(out *SlowStartConfigObservation) {
	*out = *in
	if in.SlowStartDuration != nil {
		in, out := &in.SlowStartDuration, &out.SlowStartDuration
		*out = new(float64)
		**out = **in
	}
	if in.SlowStartEnabled != nil {
		in, out := &in.SlowStartEnabled, &out.SlowStartEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowStartConfigObservation.
func (in *SlowStartConfigObservation) DeepCopy() *SlowStartConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SlowStartConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SlowStartConfigParameters) DeepCopyInto(out *SlowStartConfigParameters) {
	*out = *in
	if in.SlowStartDuration != nil {
		in, out := &in.SlowStartDuration, &out.SlowStartDuration
		*out = new(float64)
		**out = **in
	}
	if in.SlowStartEnabled != nil {
		in, out := &in.SlowStartEnabled, &out.SlowStartEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SlowStartConfigParameters.
func (in *SlowStartConfigParameters) DeepCopy() *SlowStartConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SlowStartConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPConfigInitParameters) DeepCopyInto(out *SourceIPConfigInitParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPConfigInitParameters.
func (in *SourceIPConfigInitParameters) DeepCopy() *SourceIPConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPConfigObservation) DeepCopyInto(out *SourceIPConfigObservation) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPConfigObservation.
func (in *SourceIPConfigObservation) DeepCopy() *SourceIPConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPConfigParameters) DeepCopyInto(out *SourceIPConfigParameters) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPConfigParameters.
func (in *SourceIPConfigParameters) DeepCopy() *SourceIPConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySessionConfigInitParameters) DeepCopyInto(out *StickySessionConfigInitParameters) {
	*out = *in
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(float64)
		**out = **in
	}
	if in.StickySessionEnabled != nil {
		in, out := &in.StickySessionEnabled, &out.StickySessionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StickySessionType != nil {
		in, out := &in.StickySessionType, &out.StickySessionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySessionConfigInitParameters.
func (in *StickySessionConfigInitParameters) DeepCopy() *StickySessionConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(StickySessionConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySessionConfigObservation) DeepCopyInto(out *StickySessionConfigObservation) {
	*out = *in
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(float64)
		**out = **in
	}
	if in.StickySessionEnabled != nil {
		in, out := &in.StickySessionEnabled, &out.StickySessionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StickySessionType != nil {
		in, out := &in.StickySessionType, &out.StickySessionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySessionConfigObservation.
func (in *StickySessionConfigObservation) DeepCopy() *StickySessionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StickySessionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StickySessionConfigParameters) DeepCopyInto(out *StickySessionConfigParameters) {
	*out = *in
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(float64)
		**out = **in
	}
	if in.StickySessionEnabled != nil {
		in, out := &in.StickySessionEnabled, &out.StickySessionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StickySessionType != nil {
		in, out := &in.StickySessionType, &out.StickySessionType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StickySessionConfigParameters.
func (in *StickySessionConfigParameters) DeepCopy() *StickySessionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StickySessionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficLimitConfigInitParameters) DeepCopyInto(out *TrafficLimitConfigInitParameters) {
	*out = *in
	if in.PerIPQPS != nil {
		in, out := &in.PerIPQPS, &out.PerIPQPS
		*out = new(float64)
		**out = **in
	}
	if in.QPS != nil {
		in, out := &in.QPS, &out.QPS
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficLimitConfigInitParameters.
func (in *TrafficLimitConfigInitParameters) DeepCopy() *TrafficLimitConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficLimitConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficLimitConfigObservation) DeepCopyInto(out *TrafficLimitConfigObservation) {
	*out = *in
	if in.PerIPQPS != nil {
		in, out := &in.PerIPQPS, &out.PerIPQPS
		*out = new(float64)
		**out = **in
	}
	if in.QPS != nil {
		in, out := &in.QPS, &out.QPS
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficLimitConfigObservation.
func (in *TrafficLimitConfigObservation) DeepCopy() *TrafficLimitConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficLimitConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficLimitConfigParameters) DeepCopyInto(out *TrafficLimitConfigParameters) {
	*out = *in
	if in.PerIPQPS != nil {
		in, out := &in.PerIPQPS, &out.PerIPQPS
		*out = new(float64)
		**out = **in
	}
	if in.QPS != nil {
		in, out := &in.QPS, &out.QPS
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficLimitConfigParameters.
func (in *TrafficLimitConfigParameters) DeepCopy() *TrafficLimitConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficLimitConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorConfigInitParameters) DeepCopyInto(out *TrafficMirrorConfigInitParameters) {
	*out = *in
	if in.MirrorGroupConfig != nil {
		in, out := &in.MirrorGroupConfig, &out.MirrorGroupConfig
		*out = make([]MirrorGroupConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorConfigInitParameters.
func (in *TrafficMirrorConfigInitParameters) DeepCopy() *TrafficMirrorConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorConfigObservation) DeepCopyInto(out *TrafficMirrorConfigObservation) {
	*out = *in
	if in.MirrorGroupConfig != nil {
		in, out := &in.MirrorGroupConfig, &out.MirrorGroupConfig
		*out = make([]MirrorGroupConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorConfigObservation.
func (in *TrafficMirrorConfigObservation) DeepCopy() *TrafficMirrorConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficMirrorConfigParameters) DeepCopyInto(out *TrafficMirrorConfigParameters) {
	*out = *in
	if in.MirrorGroupConfig != nil {
		in, out := &in.MirrorGroupConfig, &out.MirrorGroupConfig
		*out = make([]MirrorGroupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficMirrorConfigParameters.
func (in *TrafficMirrorConfigParameters) DeepCopy() *TrafficMirrorConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TrafficMirrorConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UchConfigInitParameters) DeepCopyInto(out *UchConfigInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UchConfigInitParameters.
func (in *UchConfigInitParameters) DeepCopy() *UchConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(UchConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UchConfigObservation) DeepCopyInto(out *UchConfigObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UchConfigObservation.
func (in *UchConfigObservation) DeepCopy() *UchConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UchConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UchConfigParameters) DeepCopyInto(out *UchConfigParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UchConfigParameters.
func (in *UchConfigParameters) DeepCopy() *UchConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UchConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValuesInitParameters) DeepCopyInto(out *ValuesInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValuesInitParameters.
func (in *ValuesInitParameters) DeepCopy() *ValuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValuesObservation) DeepCopyInto(out *ValuesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValuesObservation.
func (in *ValuesObservation) DeepCopy() *ValuesObservation {
	if in == nil {
		return nil
	}
	out := new(ValuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValuesParameters) DeepCopyInto(out *ValuesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValuesParameters.
func (in *ValuesParameters) DeepCopy() *ValuesParameters {
	if in == nil {
		return nil
	}
	out := new(ValuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XForwardedForConfigInitParameters) DeepCopyInto(out *XForwardedForConfigInitParameters) {
	*out = *in
	if in.XForwardedForClientCertClientVerifyAlias != nil {
		in, out := &in.XForwardedForClientCertClientVerifyAlias, &out.XForwardedForClientCertClientVerifyAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertClientVerifyEnabled != nil {
		in, out := &in.XForwardedForClientCertClientVerifyEnabled, &out.XForwardedForClientCertClientVerifyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertFingerPrintAlias != nil {
		in, out := &in.XForwardedForClientCertFingerPrintAlias, &out.XForwardedForClientCertFingerPrintAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertFingerPrintEnabled != nil {
		in, out := &in.XForwardedForClientCertFingerPrintEnabled, &out.XForwardedForClientCertFingerPrintEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertIssuerDnAlias != nil {
		in, out := &in.XForwardedForClientCertIssuerDnAlias, &out.XForwardedForClientCertIssuerDnAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertIssuerDnEnabled != nil {
		in, out := &in.XForwardedForClientCertIssuerDnEnabled, &out.XForwardedForClientCertIssuerDnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertSubjectDnAlias != nil {
		in, out := &in.XForwardedForClientCertSubjectDnAlias, &out.XForwardedForClientCertSubjectDnAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertSubjectDnEnabled != nil {
		in, out := &in.XForwardedForClientCertSubjectDnEnabled, &out.XForwardedForClientCertSubjectDnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientSourceIpsEnabled != nil {
		in, out := &in.XForwardedForClientSourceIpsEnabled, &out.XForwardedForClientSourceIpsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientSourceIpsTrusted != nil {
		in, out := &in.XForwardedForClientSourceIpsTrusted, &out.XForwardedForClientSourceIpsTrusted
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientSrcPortEnabled != nil {
		in, out := &in.XForwardedForClientSrcPortEnabled, &out.XForwardedForClientSrcPortEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForEnabled != nil {
		in, out := &in.XForwardedForEnabled, &out.XForwardedForEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForHostEnabled != nil {
		in, out := &in.XForwardedForHostEnabled, &out.XForwardedForHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForProcessingMode != nil {
		in, out := &in.XForwardedForProcessingMode, &out.XForwardedForProcessingMode
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForProtoEnabled != nil {
		in, out := &in.XForwardedForProtoEnabled, &out.XForwardedForProtoEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForSlbIDEnabled != nil {
		in, out := &in.XForwardedForSlbIDEnabled, &out.XForwardedForSlbIDEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForSlbPortEnabled != nil {
		in, out := &in.XForwardedForSlbPortEnabled, &out.XForwardedForSlbPortEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XForwardedForConfigInitParameters.
func (in *XForwardedForConfigInitParameters) DeepCopy() *XForwardedForConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(XForwardedForConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XForwardedForConfigObservation) DeepCopyInto(out *XForwardedForConfigObservation) {
	*out = *in
	if in.XForwardedForClientCertClientVerifyAlias != nil {
		in, out := &in.XForwardedForClientCertClientVerifyAlias, &out.XForwardedForClientCertClientVerifyAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertClientVerifyEnabled != nil {
		in, out := &in.XForwardedForClientCertClientVerifyEnabled, &out.XForwardedForClientCertClientVerifyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertFingerPrintAlias != nil {
		in, out := &in.XForwardedForClientCertFingerPrintAlias, &out.XForwardedForClientCertFingerPrintAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertFingerPrintEnabled != nil {
		in, out := &in.XForwardedForClientCertFingerPrintEnabled, &out.XForwardedForClientCertFingerPrintEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertIssuerDnAlias != nil {
		in, out := &in.XForwardedForClientCertIssuerDnAlias, &out.XForwardedForClientCertIssuerDnAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertIssuerDnEnabled != nil {
		in, out := &in.XForwardedForClientCertIssuerDnEnabled, &out.XForwardedForClientCertIssuerDnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertSubjectDnAlias != nil {
		in, out := &in.XForwardedForClientCertSubjectDnAlias, &out.XForwardedForClientCertSubjectDnAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertSubjectDnEnabled != nil {
		in, out := &in.XForwardedForClientCertSubjectDnEnabled, &out.XForwardedForClientCertSubjectDnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientSourceIpsEnabled != nil {
		in, out := &in.XForwardedForClientSourceIpsEnabled, &out.XForwardedForClientSourceIpsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientSourceIpsTrusted != nil {
		in, out := &in.XForwardedForClientSourceIpsTrusted, &out.XForwardedForClientSourceIpsTrusted
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientSrcPortEnabled != nil {
		in, out := &in.XForwardedForClientSrcPortEnabled, &out.XForwardedForClientSrcPortEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForEnabled != nil {
		in, out := &in.XForwardedForEnabled, &out.XForwardedForEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForHostEnabled != nil {
		in, out := &in.XForwardedForHostEnabled, &out.XForwardedForHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForProcessingMode != nil {
		in, out := &in.XForwardedForProcessingMode, &out.XForwardedForProcessingMode
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForProtoEnabled != nil {
		in, out := &in.XForwardedForProtoEnabled, &out.XForwardedForProtoEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForSlbIDEnabled != nil {
		in, out := &in.XForwardedForSlbIDEnabled, &out.XForwardedForSlbIDEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForSlbPortEnabled != nil {
		in, out := &in.XForwardedForSlbPortEnabled, &out.XForwardedForSlbPortEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XForwardedForConfigObservation.
func (in *XForwardedForConfigObservation) DeepCopy() *XForwardedForConfigObservation {
	if in == nil {
		return nil
	}
	out := new(XForwardedForConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XForwardedForConfigParameters) DeepCopyInto(out *XForwardedForConfigParameters) {
	*out = *in
	if in.XForwardedForClientCertClientVerifyAlias != nil {
		in, out := &in.XForwardedForClientCertClientVerifyAlias, &out.XForwardedForClientCertClientVerifyAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertClientVerifyEnabled != nil {
		in, out := &in.XForwardedForClientCertClientVerifyEnabled, &out.XForwardedForClientCertClientVerifyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertFingerPrintAlias != nil {
		in, out := &in.XForwardedForClientCertFingerPrintAlias, &out.XForwardedForClientCertFingerPrintAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertFingerPrintEnabled != nil {
		in, out := &in.XForwardedForClientCertFingerPrintEnabled, &out.XForwardedForClientCertFingerPrintEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertIssuerDnAlias != nil {
		in, out := &in.XForwardedForClientCertIssuerDnAlias, &out.XForwardedForClientCertIssuerDnAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertIssuerDnEnabled != nil {
		in, out := &in.XForwardedForClientCertIssuerDnEnabled, &out.XForwardedForClientCertIssuerDnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientCertSubjectDnAlias != nil {
		in, out := &in.XForwardedForClientCertSubjectDnAlias, &out.XForwardedForClientCertSubjectDnAlias
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientCertSubjectDnEnabled != nil {
		in, out := &in.XForwardedForClientCertSubjectDnEnabled, &out.XForwardedForClientCertSubjectDnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientSourceIpsEnabled != nil {
		in, out := &in.XForwardedForClientSourceIpsEnabled, &out.XForwardedForClientSourceIpsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForClientSourceIpsTrusted != nil {
		in, out := &in.XForwardedForClientSourceIpsTrusted, &out.XForwardedForClientSourceIpsTrusted
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForClientSrcPortEnabled != nil {
		in, out := &in.XForwardedForClientSrcPortEnabled, &out.XForwardedForClientSrcPortEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForEnabled != nil {
		in, out := &in.XForwardedForEnabled, &out.XForwardedForEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForHostEnabled != nil {
		in, out := &in.XForwardedForHostEnabled, &out.XForwardedForHostEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForProcessingMode != nil {
		in, out := &in.XForwardedForProcessingMode, &out.XForwardedForProcessingMode
		*out = new(string)
		**out = **in
	}
	if in.XForwardedForProtoEnabled != nil {
		in, out := &in.XForwardedForProtoEnabled, &out.XForwardedForProtoEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForSlbIDEnabled != nil {
		in, out := &in.XForwardedForSlbIDEnabled, &out.XForwardedForSlbIDEnabled
		*out = new(bool)
		**out = **in
	}
	if in.XForwardedForSlbPortEnabled != nil {
		in, out := &in.XForwardedForSlbPortEnabled, &out.XForwardedForSlbPortEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XForwardedForConfigParameters.
func (in *XForwardedForConfigParameters) DeepCopy() *XForwardedForConfigParameters {
	if in == nil {
		return nil
	}
	out := new(XForwardedForConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneMappingsInitParameters) DeepCopyInto(out *ZoneMappingsInitParameters) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.EIPType != nil {
		in, out := &in.EIPType, &out.EIPType
		*out = new(string)
		**out = **in
	}
	if in.IntranetAddress != nil {
		in, out := &in.IntranetAddress, &out.IntranetAddress
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDRef != nil {
		in, out := &in.VswitchIDRef, &out.VswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchIDSelector != nil {
		in, out := &in.VswitchIDSelector, &out.VswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneMappingsInitParameters.
func (in *ZoneMappingsInitParameters) DeepCopy() *ZoneMappingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneMappingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneMappingsObservation) DeepCopyInto(out *ZoneMappingsObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.EIPType != nil {
		in, out := &in.EIPType, &out.EIPType
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.IntranetAddress != nil {
		in, out := &in.IntranetAddress, &out.IntranetAddress
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerAddresses != nil {
		in, out := &in.LoadBalancerAddresses, &out.LoadBalancerAddresses
		*out = make([]LoadBalancerAddressesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneMappingsObservation.
func (in *ZoneMappingsObservation) DeepCopy() *ZoneMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneMappingsParameters) DeepCopyInto(out *ZoneMappingsParameters) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.EIPType != nil {
		in, out := &in.EIPType, &out.EIPType
		*out = new(string)
		**out = **in
	}
	if in.IntranetAddress != nil {
		in, out := &in.IntranetAddress, &out.IntranetAddress
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDRef != nil {
		in, out := &in.VswitchIDRef, &out.VswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchIDSelector != nil {
		in, out := &in.VswitchIDSelector, &out.VswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneMappingsParameters.
func (in *ZoneMappingsParameters) DeepCopy() *ZoneMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneMappingsParameters)
	in.DeepCopyInto(out)
	return out
}
