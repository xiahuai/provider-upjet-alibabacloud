// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DiskInitParameters struct {
	AdvancedFeatures *string `json:"advancedFeatures,omitempty" tf:"advanced_features,omitempty"`

	// Specifies whether to enable the performance burst feature. Valid values: true, false. NOTE: bursting_enabled is only valid when category is cloud_auto.
	BurstingEnabled *bool `json:"burstingEnabled,omitempty" tf:"bursting_enabled,omitempty"`

	// The category of the data disk. Default value: cloud_efficiency. Valid Values: cloud, cloud_efficiency, cloud_ssd, cloud_essd, cloud_auto, cloud_essd_entry, elastic_ephemeral_disk_standard, elastic_ephemeral_disk_premium.
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	DedicatedBlockStorageClusterID *string `json:"dedicatedBlockStorageClusterId,omitempty" tf:"dedicated_block_storage_cluster_id,omitempty"`

	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: false.
	DeleteAutoSnapshot *bool `json:"deleteAutoSnapshot,omitempty" tf:"delete_auto_snapshot,omitempty"`

	// Specifies whether to release the disk along with its associated instance. Default value: false.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName *string `json:"diskName,omitempty" tf:"disk_name,omitempty"`

	// Specifies whether to check the validity of the request without actually making the request.request Default value: false. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: true, false.
	EnableAutoSnapshot *bool `json:"enableAutoSnapshot,omitempty" tf:"enable_auto_snapshot,omitempty"`

	EncryptAlgorithm *string `json:"encryptAlgorithm,omitempty" tf:"encrypt_algorithm,omitempty"`

	// Specifies whether to encrypt the disk. Default value: false. Valid values:
	Encrypted *bool `json:"encrypted,omitempty" tf:"encrypted,omitempty"`

	// The ID of the instance to which the created subscription disk is automatically attached.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Instance
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The ID of the Key Management Service (KMS) key that is used for the disk. NOTE: kms_key_id is only valid when encrypted is true.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/kms/v1alpha1.Key
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Reference to a Key in kms to populate kmsKeyId.
	// +kubebuilder:validation:Optional
	KMSKeyIDRef *v1.Reference `json:"kmsKeyIdRef,omitempty" tf:"-"`

	// Selector for a Key in kms to populate kmsKeyId.
	// +kubebuilder:validation:Optional
	KMSKeyIDSelector *v1.Selector `json:"kmsKeyIdSelector,omitempty" tf:"-"`

	// Specifies whether to enable the multi-attach feature for the disk. Default value: Disabled. Valid values: Enabled, Disabled. NOTE: Currently, multi_attach can only be set to Enabled when category is set to cloud_essd.
	MultiAttach *string `json:"multiAttach,omitempty" tf:"multi_attach,omitempty"`

	// The payment type of the disk. Default to PayAsYouGo. Valid values: PayAsYouGo, Subscription. If you want to change the disk payment type, the instance_id is required.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	PerformanceLevel *string `json:"performanceLevel,omitempty" tf:"performance_level,omitempty"`

	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. NOTE: provisioned_iops is only valid when category is cloud_auto.
	ProvisionedIops *float64 `json:"provisionedIops,omitempty" tf:"provisioned_iops,omitempty"`

	// , tags, and kms_key_id parameters are ignored.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// The ID of the snapshot to use to create the disk. NOTE: If the size of the snapshot specified by snapshot_id is larger than the value of size, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by snapshot_id is smaller than the value of size, the size of the created disk is equal to the value of size.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`

	// The ID of the storage set.
	StorageSetID *string `json:"storageSetId,omitempty" tf:"storage_set_id,omitempty"`

	// The number of partitions in the storage set.
	StorageSetPartitionNumber *float64 `json:"storageSetPartitionNumber,omitempty" tf:"storage_set_partition_number,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type to expand cloud disks. Valid Values: online, offline. Default to offline.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// and instance_id must be set but can not be set at the same time.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type DiskObservation struct {
	AdvancedFeatures *string `json:"advancedFeatures,omitempty" tf:"advanced_features,omitempty"`

	// Specifies whether to enable the performance burst feature. Valid values: true, false. NOTE: bursting_enabled is only valid when category is cloud_auto.
	BurstingEnabled *bool `json:"burstingEnabled,omitempty" tf:"bursting_enabled,omitempty"`

	// The category of the data disk. Default value: cloud_efficiency. Valid Values: cloud, cloud_efficiency, cloud_ssd, cloud_essd, cloud_auto, cloud_essd_entry, elastic_ephemeral_disk_standard, elastic_ephemeral_disk_premium.
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// (Available since v1.237.0) The time when the disk was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	DedicatedBlockStorageClusterID *string `json:"dedicatedBlockStorageClusterId,omitempty" tf:"dedicated_block_storage_cluster_id,omitempty"`

	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: false.
	DeleteAutoSnapshot *bool `json:"deleteAutoSnapshot,omitempty" tf:"delete_auto_snapshot,omitempty"`

	// Specifies whether to release the disk along with its associated instance. Default value: false.
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	DiskName *string `json:"diskName,omitempty" tf:"disk_name,omitempty"`

	// Specifies whether to check the validity of the request without actually making the request.request Default value: false. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: true, false.
	EnableAutoSnapshot *bool `json:"enableAutoSnapshot,omitempty" tf:"enable_auto_snapshot,omitempty"`

	EncryptAlgorithm *string `json:"encryptAlgorithm,omitempty" tf:"encrypt_algorithm,omitempty"`

	// Specifies whether to encrypt the disk. Default value: false. Valid values:
	Encrypted *bool `json:"encrypted,omitempty" tf:"encrypted,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the instance to which the created subscription disk is automatically attached.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The ID of the Key Management Service (KMS) key that is used for the disk. NOTE: kms_key_id is only valid when encrypted is true.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Specifies whether to enable the multi-attach feature for the disk. Default value: Disabled. Valid values: Enabled, Disabled. NOTE: Currently, multi_attach can only be set to Enabled when category is set to cloud_essd.
	MultiAttach *string `json:"multiAttach,omitempty" tf:"multi_attach,omitempty"`

	// The payment type of the disk. Default to PayAsYouGo. Valid values: PayAsYouGo, Subscription. If you want to change the disk payment type, the instance_id is required.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	PerformanceLevel *string `json:"performanceLevel,omitempty" tf:"performance_level,omitempty"`

	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. NOTE: provisioned_iops is only valid when category is cloud_auto.
	ProvisionedIops *float64 `json:"provisionedIops,omitempty" tf:"provisioned_iops,omitempty"`

	// (Available since v1.237.0) The ID of the region to which the disk belongs.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// , tags, and kms_key_id parameters are ignored.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// The ID of the snapshot to use to create the disk. NOTE: If the size of the snapshot specified by snapshot_id is larger than the value of size, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by snapshot_id is smaller than the value of size, the size of the created disk is equal to the value of size.
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`

	// The status of the disk.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The ID of the storage set.
	StorageSetID *string `json:"storageSetId,omitempty" tf:"storage_set_id,omitempty"`

	// The number of partitions in the storage set.
	StorageSetPartitionNumber *float64 `json:"storageSetPartitionNumber,omitempty" tf:"storage_set_partition_number,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type to expand cloud disks. Valid Values: online, offline. Default to offline.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// and instance_id must be set but can not be set at the same time.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type DiskParameters struct {

	// +kubebuilder:validation:Optional
	AdvancedFeatures *string `json:"advancedFeatures,omitempty" tf:"advanced_features,omitempty"`

	// Specifies whether to enable the performance burst feature. Valid values: true, false. NOTE: bursting_enabled is only valid when category is cloud_auto.
	// +kubebuilder:validation:Optional
	BurstingEnabled *bool `json:"burstingEnabled,omitempty" tf:"bursting_enabled,omitempty"`

	// The category of the data disk. Default value: cloud_efficiency. Valid Values: cloud, cloud_efficiency, cloud_ssd, cloud_essd, cloud_auto, cloud_essd_entry, elastic_ephemeral_disk_standard, elastic_ephemeral_disk_premium.
	// +kubebuilder:validation:Optional
	Category *string `json:"category,omitempty" tf:"category,omitempty"`

	// +kubebuilder:validation:Optional
	DedicatedBlockStorageClusterID *string `json:"dedicatedBlockStorageClusterId,omitempty" tf:"dedicated_block_storage_cluster_id,omitempty"`

	// Specifies whether to delete the automatic snapshots of the disk when the disk is released. Default value: false.
	// +kubebuilder:validation:Optional
	DeleteAutoSnapshot *bool `json:"deleteAutoSnapshot,omitempty" tf:"delete_auto_snapshot,omitempty"`

	// Specifies whether to release the disk along with its associated instance. Default value: false.
	// +kubebuilder:validation:Optional
	DeleteWithInstance *bool `json:"deleteWithInstance,omitempty" tf:"delete_with_instance,omitempty"`

	// The description of the disk. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the data disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-). The name must start with a letter.
	// +kubebuilder:validation:Optional
	DiskName *string `json:"diskName,omitempty" tf:"disk_name,omitempty"`

	// Specifies whether to check the validity of the request without actually making the request.request Default value: false. Valid values:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values: true, false.
	// +kubebuilder:validation:Optional
	EnableAutoSnapshot *bool `json:"enableAutoSnapshot,omitempty" tf:"enable_auto_snapshot,omitempty"`

	// +kubebuilder:validation:Optional
	EncryptAlgorithm *string `json:"encryptAlgorithm,omitempty" tf:"encrypt_algorithm,omitempty"`

	// Specifies whether to encrypt the disk. Default value: false. Valid values:
	// +kubebuilder:validation:Optional
	Encrypted *bool `json:"encrypted,omitempty" tf:"encrypted,omitempty"`

	// The ID of the instance to which the created subscription disk is automatically attached.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// The ID of the Key Management Service (KMS) key that is used for the disk. NOTE: kms_key_id is only valid when encrypted is true.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/kms/v1alpha1.Key
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// Reference to a Key in kms to populate kmsKeyId.
	// +kubebuilder:validation:Optional
	KMSKeyIDRef *v1.Reference `json:"kmsKeyIdRef,omitempty" tf:"-"`

	// Selector for a Key in kms to populate kmsKeyId.
	// +kubebuilder:validation:Optional
	KMSKeyIDSelector *v1.Selector `json:"kmsKeyIdSelector,omitempty" tf:"-"`

	// Specifies whether to enable the multi-attach feature for the disk. Default value: Disabled. Valid values: Enabled, Disabled. NOTE: Currently, multi_attach can only be set to Enabled when category is set to cloud_essd.
	// +kubebuilder:validation:Optional
	MultiAttach *string `json:"multiAttach,omitempty" tf:"multi_attach,omitempty"`

	// The payment type of the disk. Default to PayAsYouGo. Valid values: PayAsYouGo, Subscription. If you want to change the disk payment type, the instance_id is required.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Specifies the performance level of an ESSD when you create the ESSD. Valid values:
	// +kubebuilder:validation:Optional
	PerformanceLevel *string `json:"performanceLevel,omitempty" tf:"performance_level,omitempty"`

	// The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 Ã— Capacity - Baseline IOPS}. NOTE: provisioned_iops is only valid when category is cloud_auto.
	// +kubebuilder:validation:Optional
	ProvisionedIops *float64 `json:"provisionedIops,omitempty" tf:"provisioned_iops,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// , tags, and kms_key_id parameters are ignored.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The size of the disk. Unit: GiB. This parameter is required. Valid values:
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// The ID of the snapshot to use to create the disk. NOTE: If the size of the snapshot specified by snapshot_id is larger than the value of size, the size of the created disk is equal to the specified snapshot size. If the size of the snapshot specified by snapshot_id is smaller than the value of size, the size of the created disk is equal to the value of size.
	// +kubebuilder:validation:Optional
	SnapshotID *string `json:"snapshotId,omitempty" tf:"snapshot_id,omitempty"`

	// The ID of the storage set.
	// +kubebuilder:validation:Optional
	StorageSetID *string `json:"storageSetId,omitempty" tf:"storage_set_id,omitempty"`

	// The number of partitions in the storage set.
	// +kubebuilder:validation:Optional
	StorageSetPartitionNumber *float64 `json:"storageSetPartitionNumber,omitempty" tf:"storage_set_partition_number,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type to expand cloud disks. Valid Values: online, offline. Default to offline.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// and instance_id must be set but can not be set at the same time.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// DiskSpec defines the desired state of Disk
type DiskSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DiskParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DiskInitParameters `json:"initProvider,omitempty"`
}

// DiskStatus defines the observed state of Disk.
type DiskStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DiskObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Disk is the Schema for the Disks API. Provides a Alicloud ECS Disk resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Disk struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DiskSpec   `json:"spec"`
	Status            DiskStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DiskList contains a list of Disks
type DiskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Disk `json:"items"`
}

// Repository type metadata.
var (
	Disk_Kind             = "Disk"
	Disk_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Disk_Kind}.String()
	Disk_KindAPIVersion   = Disk_Kind + "." + CRDGroupVersion.String()
	Disk_GroupVersionKind = CRDGroupVersion.WithKind(Disk_Kind)
)

func init() {
	SchemeBuilder.Register(&Disk{}, &DiskList{})
}
