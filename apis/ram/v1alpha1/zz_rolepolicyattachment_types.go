// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RolePolicyAttachmentInitParameters struct {

	// The name of the policy.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Policy
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("policy_name",false)
	PolicyName *string `json:"policyName,omitempty" tf:"policy_name,omitempty"`

	// Reference to a Policy in ram to populate policyName.
	// +kubebuilder:validation:Optional
	PolicyNameRef *v1.Reference `json:"policyNameRef,omitempty" tf:"-"`

	// Selector for a Policy in ram to populate policyName.
	// +kubebuilder:validation:Optional
	PolicyNameSelector *v1.Selector `json:"policyNameSelector,omitempty" tf:"-"`

	// Policy type.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Policy
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("type",true)
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type,omitempty"`

	// Reference to a Policy in ram to populate policyType.
	// +kubebuilder:validation:Optional
	PolicyTypeRef *v1.Reference `json:"policyTypeRef,omitempty" tf:"-"`

	// Selector for a Policy in ram to populate policyType.
	// +kubebuilder:validation:Optional
	PolicyTypeSelector *v1.Selector `json:"policyTypeSelector,omitempty" tf:"-"`

	// The RAM role name.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// Reference to a Role in ram to populate roleName.
	// +kubebuilder:validation:Optional
	RoleNameRef *v1.Reference `json:"roleNameRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate roleName.
	// +kubebuilder:validation:Optional
	RoleNameSelector *v1.Selector `json:"roleNameSelector,omitempty" tf:"-"`
}

type RolePolicyAttachmentObservation struct {

	// The ID of the resource supplied above. The value is formulated as role:<policy_name>:<policy_type>:<role_name>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the policy.
	PolicyName *string `json:"policyName,omitempty" tf:"policy_name,omitempty"`

	// Policy type.
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type,omitempty"`

	// The RAM role name.
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`
}

type RolePolicyAttachmentParameters struct {

	// The name of the policy.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Policy
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("policy_name",false)
	// +kubebuilder:validation:Optional
	PolicyName *string `json:"policyName,omitempty" tf:"policy_name,omitempty"`

	// Reference to a Policy in ram to populate policyName.
	// +kubebuilder:validation:Optional
	PolicyNameRef *v1.Reference `json:"policyNameRef,omitempty" tf:"-"`

	// Selector for a Policy in ram to populate policyName.
	// +kubebuilder:validation:Optional
	PolicyNameSelector *v1.Selector `json:"policyNameSelector,omitempty" tf:"-"`

	// Policy type.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Policy
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("type",true)
	// +kubebuilder:validation:Optional
	PolicyType *string `json:"policyType,omitempty" tf:"policy_type,omitempty"`

	// Reference to a Policy in ram to populate policyType.
	// +kubebuilder:validation:Optional
	PolicyTypeRef *v1.Reference `json:"policyTypeRef,omitempty" tf:"-"`

	// Selector for a Policy in ram to populate policyType.
	// +kubebuilder:validation:Optional
	PolicyTypeSelector *v1.Selector `json:"policyTypeSelector,omitempty" tf:"-"`

	// The RAM role name.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ram/v1alpha1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// Reference to a Role in ram to populate roleName.
	// +kubebuilder:validation:Optional
	RoleNameRef *v1.Reference `json:"roleNameRef,omitempty" tf:"-"`

	// Selector for a Role in ram to populate roleName.
	// +kubebuilder:validation:Optional
	RoleNameSelector *v1.Selector `json:"roleNameSelector,omitempty" tf:"-"`
}

// RolePolicyAttachmentSpec defines the desired state of RolePolicyAttachment
type RolePolicyAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RolePolicyAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RolePolicyAttachmentInitParameters `json:"initProvider,omitempty"`
}

// RolePolicyAttachmentStatus defines the observed state of RolePolicyAttachment.
type RolePolicyAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RolePolicyAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RolePolicyAttachment is the Schema for the RolePolicyAttachments API. Provides a Alicloud RAM Role Policy Attachment resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type RolePolicyAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RolePolicyAttachmentSpec   `json:"spec"`
	Status            RolePolicyAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RolePolicyAttachmentList contains a list of RolePolicyAttachments
type RolePolicyAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RolePolicyAttachment `json:"items"`
}

// Repository type metadata.
var (
	RolePolicyAttachment_Kind             = "RolePolicyAttachment"
	RolePolicyAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RolePolicyAttachment_Kind}.String()
	RolePolicyAttachment_KindAPIVersion   = RolePolicyAttachment_Kind + "." + CRDGroupVersion.String()
	RolePolicyAttachment_GroupVersionKind = CRDGroupVersion.WithKind(RolePolicyAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&RolePolicyAttachment{}, &RolePolicyAttachmentList{})
}
