// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ImagePipelineInitParameters struct {

	// The ID of Alibaba Cloud account to which to share the created image.
	// +listType=set
	AddAccount []*string `json:"addAccount,omitempty" tf:"add_account,omitempty"`

	// The source image. When you set base_image_type to IMAGE, set base_image to the ID of a custom image. When you set base_image_type to IMAGE_FAMILY, set base_image to the name of an image family.
	BaseImage *string `json:"baseImage,omitempty" tf:"base_image,omitempty"`

	// The type of the source image. Valid values: IMAGE, IMAGE_FAMILY.
	BaseImageType *string `json:"baseImageType,omitempty" tf:"base_image_type,omitempty"`

	// The content of the image template. The content cannot be greater than 16 KB in size, and can contain up to 127 commands.
	BuildContent *string `json:"buildContent,omitempty" tf:"build_content,omitempty"`

	// Specifies whether to release the intermediate instance if the image cannot be created.
	DeleteInstanceOnFailure *bool `json:"deleteInstanceOnFailure,omitempty" tf:"delete_instance_on_failure,omitempty"`

	// The description of the image template. The description must be 2 to 256 characters in length and cannot start with http:// or https://. Note: If the intermediate instance cannot be started, the instance is released by default.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name prefix of the image to be created. The prefix must be 2 to 64 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.),and hyphens (-).
	ImageName *string `json:"imageName,omitempty" tf:"image_name,omitempty"`

	// The instance type of the instance. You can call the DescribeInstanceTypes operation to query instance types. If you do not specify this parameter, an instance type that provides the fewest vCPUs and memory resources is automatically selected. This configuration is subject to resource availability of instance types. For example, the ecs.g6.large instance type is selected by default. If available ecs.g6.large resources are insufficient, the ecs.g6.xlarge instance type is selected.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The size of the outbound public bandwidth for the intermediate instance. Unit: Mbit/s. Valid values: 0 to 100. Default value: 0.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// The name of the image template. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.),and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The size of the system disk of the intermediate instance. Unit: GiB. Valid values: 20 to 500. Default value: 40.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of region to which to distribute the created image.
	// +listType=set
	ToRegionID []*string `json:"toRegionId,omitempty" tf:"to_region_id,omitempty"`

	// The ID of the vSwitch. If you do not specify this parameter, a virtual private cloud (VPC) and a vSwitch are created by default.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`
}

type ImagePipelineObservation struct {

	// The ID of Alibaba Cloud account to which to share the created image.
	// +listType=set
	AddAccount []*string `json:"addAccount,omitempty" tf:"add_account,omitempty"`

	// The source image. When you set base_image_type to IMAGE, set base_image to the ID of a custom image. When you set base_image_type to IMAGE_FAMILY, set base_image to the name of an image family.
	BaseImage *string `json:"baseImage,omitempty" tf:"base_image,omitempty"`

	// The type of the source image. Valid values: IMAGE, IMAGE_FAMILY.
	BaseImageType *string `json:"baseImageType,omitempty" tf:"base_image_type,omitempty"`

	// The content of the image template. The content cannot be greater than 16 KB in size, and can contain up to 127 commands.
	BuildContent *string `json:"buildContent,omitempty" tf:"build_content,omitempty"`

	// Specifies whether to release the intermediate instance if the image cannot be created.
	DeleteInstanceOnFailure *bool `json:"deleteInstanceOnFailure,omitempty" tf:"delete_instance_on_failure,omitempty"`

	// The description of the image template. The description must be 2 to 256 characters in length and cannot start with http:// or https://. Note: If the intermediate instance cannot be started, the instance is released by default.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name prefix of the image to be created. The prefix must be 2 to 64 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.),and hyphens (-).
	ImageName *string `json:"imageName,omitempty" tf:"image_name,omitempty"`

	// The instance type of the instance. You can call the DescribeInstanceTypes operation to query instance types. If you do not specify this parameter, an instance type that provides the fewest vCPUs and memory resources is automatically selected. This configuration is subject to resource availability of instance types. For example, the ecs.g6.large instance type is selected by default. If available ecs.g6.large resources are insufficient, the ecs.g6.xlarge instance type is selected.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The size of the outbound public bandwidth for the intermediate instance. Unit: Mbit/s. Valid values: 0 to 100. Default value: 0.
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// The name of the image template. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.),and hyphens (-).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The size of the system disk of the intermediate instance. Unit: GiB. Valid values: 20 to 500. Default value: 40.
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of region to which to distribute the created image.
	// +listType=set
	ToRegionID []*string `json:"toRegionId,omitempty" tf:"to_region_id,omitempty"`

	// The ID of the vSwitch. If you do not specify this parameter, a virtual private cloud (VPC) and a vSwitch are created by default.
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`
}

type ImagePipelineParameters struct {

	// The ID of Alibaba Cloud account to which to share the created image.
	// +kubebuilder:validation:Optional
	// +listType=set
	AddAccount []*string `json:"addAccount,omitempty" tf:"add_account,omitempty"`

	// The source image. When you set base_image_type to IMAGE, set base_image to the ID of a custom image. When you set base_image_type to IMAGE_FAMILY, set base_image to the name of an image family.
	// +kubebuilder:validation:Optional
	BaseImage *string `json:"baseImage,omitempty" tf:"base_image,omitempty"`

	// The type of the source image. Valid values: IMAGE, IMAGE_FAMILY.
	// +kubebuilder:validation:Optional
	BaseImageType *string `json:"baseImageType,omitempty" tf:"base_image_type,omitempty"`

	// The content of the image template. The content cannot be greater than 16 KB in size, and can contain up to 127 commands.
	// +kubebuilder:validation:Optional
	BuildContent *string `json:"buildContent,omitempty" tf:"build_content,omitempty"`

	// Specifies whether to release the intermediate instance if the image cannot be created.
	// +kubebuilder:validation:Optional
	DeleteInstanceOnFailure *bool `json:"deleteInstanceOnFailure,omitempty" tf:"delete_instance_on_failure,omitempty"`

	// The description of the image template. The description must be 2 to 256 characters in length and cannot start with http:// or https://. Note: If the intermediate instance cannot be started, the instance is released by default.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name prefix of the image to be created. The prefix must be 2 to 64 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.),and hyphens (-).
	// +kubebuilder:validation:Optional
	ImageName *string `json:"imageName,omitempty" tf:"image_name,omitempty"`

	// The instance type of the instance. You can call the DescribeInstanceTypes operation to query instance types. If you do not specify this parameter, an instance type that provides the fewest vCPUs and memory resources is automatically selected. This configuration is subject to resource availability of instance types. For example, the ecs.g6.large instance type is selected by default. If available ecs.g6.large resources are insufficient, the ecs.g6.xlarge instance type is selected.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The size of the outbound public bandwidth for the intermediate instance. Unit: Mbit/s. Valid values: 0 to 100. Default value: 0.
	// +kubebuilder:validation:Optional
	InternetMaxBandwidthOut *float64 `json:"internetMaxBandwidthOut,omitempty" tf:"internet_max_bandwidth_out,omitempty"`

	// The name of the image template. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), periods (.),and hyphens (-).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the resource group.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The size of the system disk of the intermediate instance. Unit: GiB. Valid values: 20 to 500. Default value: 40.
	// +kubebuilder:validation:Optional
	SystemDiskSize *float64 `json:"systemDiskSize,omitempty" tf:"system_disk_size,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of region to which to distribute the created image.
	// +kubebuilder:validation:Optional
	// +listType=set
	ToRegionID []*string `json:"toRegionId,omitempty" tf:"to_region_id,omitempty"`

	// The ID of the vSwitch. If you do not specify this parameter, a virtual private cloud (VPC) and a vSwitch are created by default.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`
}

// ImagePipelineSpec defines the desired state of ImagePipeline
type ImagePipelineSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ImagePipelineParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ImagePipelineInitParameters `json:"initProvider,omitempty"`
}

// ImagePipelineStatus defines the observed state of ImagePipeline.
type ImagePipelineStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ImagePipelineObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ImagePipeline is the Schema for the ImagePipelines API. Provides a Alicloud ECS Image Pipeline resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type ImagePipeline struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.baseImage) || (has(self.initProvider) && has(self.initProvider.baseImage))",message="spec.forProvider.baseImage is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.baseImageType) || (has(self.initProvider) && has(self.initProvider.baseImageType))",message="spec.forProvider.baseImageType is a required parameter"
	Spec   ImagePipelineSpec   `json:"spec"`
	Status ImagePipelineStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ImagePipelineList contains a list of ImagePipelines
type ImagePipelineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ImagePipeline `json:"items"`
}

// Repository type metadata.
var (
	ImagePipeline_Kind             = "ImagePipeline"
	ImagePipeline_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ImagePipeline_Kind}.String()
	ImagePipeline_KindAPIVersion   = ImagePipeline_Kind + "." + CRDGroupVersion.String()
	ImagePipeline_GroupVersionKind = CRDGroupVersion.WithKind(ImagePipeline_Kind)
)

func init() {
	SchemeBuilder.Register(&ImagePipeline{}, &ImagePipelineList{})
}
