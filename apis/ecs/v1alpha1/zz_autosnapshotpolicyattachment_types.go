// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoSnapshotPolicyAttachmentInitParameters struct {

	// The auto snapshot policy id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.AutoSnapshotPolicy
	AutoSnapshotPolicyID *string `json:"autoSnapshotPolicyId,omitempty" tf:"auto_snapshot_policy_id,omitempty"`

	// Reference to a AutoSnapshotPolicy in ecs to populate autoSnapshotPolicyId.
	// +kubebuilder:validation:Optional
	AutoSnapshotPolicyIDRef *v1.Reference `json:"autoSnapshotPolicyIdRef,omitempty" tf:"-"`

	// Selector for a AutoSnapshotPolicy in ecs to populate autoSnapshotPolicyId.
	// +kubebuilder:validation:Optional
	AutoSnapshotPolicyIDSelector *v1.Selector `json:"autoSnapshotPolicyIdSelector,omitempty" tf:"-"`

	// The disk id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Disk
	DiskID *string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// Reference to a Disk in ecs to populate diskId.
	// +kubebuilder:validation:Optional
	DiskIDRef *v1.Reference `json:"diskIdRef,omitempty" tf:"-"`

	// Selector for a Disk in ecs to populate diskId.
	// +kubebuilder:validation:Optional
	DiskIDSelector *v1.Selector `json:"diskIdSelector,omitempty" tf:"-"`
}

type AutoSnapshotPolicyAttachmentObservation struct {

	// The auto snapshot policy id.
	AutoSnapshotPolicyID *string `json:"autoSnapshotPolicyId,omitempty" tf:"auto_snapshot_policy_id,omitempty"`

	// The disk id.
	DiskID *string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// The resource ID of Auto Snapshot Policy Attachment. The value is formatted <auto_snapshot_policy_id>:<disk_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AutoSnapshotPolicyAttachmentParameters struct {

	// The auto snapshot policy id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.AutoSnapshotPolicy
	// +kubebuilder:validation:Optional
	AutoSnapshotPolicyID *string `json:"autoSnapshotPolicyId,omitempty" tf:"auto_snapshot_policy_id,omitempty"`

	// Reference to a AutoSnapshotPolicy in ecs to populate autoSnapshotPolicyId.
	// +kubebuilder:validation:Optional
	AutoSnapshotPolicyIDRef *v1.Reference `json:"autoSnapshotPolicyIdRef,omitempty" tf:"-"`

	// Selector for a AutoSnapshotPolicy in ecs to populate autoSnapshotPolicyId.
	// +kubebuilder:validation:Optional
	AutoSnapshotPolicyIDSelector *v1.Selector `json:"autoSnapshotPolicyIdSelector,omitempty" tf:"-"`

	// The disk id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/ecs/v1alpha1.Disk
	// +kubebuilder:validation:Optional
	DiskID *string `json:"diskId,omitempty" tf:"disk_id,omitempty"`

	// Reference to a Disk in ecs to populate diskId.
	// +kubebuilder:validation:Optional
	DiskIDRef *v1.Reference `json:"diskIdRef,omitempty" tf:"-"`

	// Selector for a Disk in ecs to populate diskId.
	// +kubebuilder:validation:Optional
	DiskIDSelector *v1.Selector `json:"diskIdSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// AutoSnapshotPolicyAttachmentSpec defines the desired state of AutoSnapshotPolicyAttachment
type AutoSnapshotPolicyAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutoSnapshotPolicyAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutoSnapshotPolicyAttachmentInitParameters `json:"initProvider,omitempty"`
}

// AutoSnapshotPolicyAttachmentStatus defines the observed state of AutoSnapshotPolicyAttachment.
type AutoSnapshotPolicyAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutoSnapshotPolicyAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AutoSnapshotPolicyAttachment is the Schema for the AutoSnapshotPolicyAttachments API. Provides a Alicloud ECS Auto Snapshot Policy Attachment resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type AutoSnapshotPolicyAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutoSnapshotPolicyAttachmentSpec   `json:"spec"`
	Status            AutoSnapshotPolicyAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutoSnapshotPolicyAttachmentList contains a list of AutoSnapshotPolicyAttachments
type AutoSnapshotPolicyAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutoSnapshotPolicyAttachment `json:"items"`
}

// Repository type metadata.
var (
	AutoSnapshotPolicyAttachment_Kind             = "AutoSnapshotPolicyAttachment"
	AutoSnapshotPolicyAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AutoSnapshotPolicyAttachment_Kind}.String()
	AutoSnapshotPolicyAttachment_KindAPIVersion   = AutoSnapshotPolicyAttachment_Kind + "." + CRDGroupVersion.String()
	AutoSnapshotPolicyAttachment_GroupVersionKind = CRDGroupVersion.WithKind(AutoSnapshotPolicyAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&AutoSnapshotPolicyAttachment{}, &AutoSnapshotPolicyAttachmentList{})
}
