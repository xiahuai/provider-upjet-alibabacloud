// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BucketWormInitParameters struct {

	// The name of the bucket
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// The specified number of days to retain the Object.
	RetentionPeriodInDays *float64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days,omitempty"`

	// The status of the compliance retention policy. Optional values:
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type BucketWormObservation struct {

	// The name of the bucket
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// The creation time of the resource
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The ID of the resource supplied above.The value is formulated as <bucket>:<worm_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The specified number of days to retain the Object.
	RetentionPeriodInDays *float64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days,omitempty"`

	// The status of the compliance retention policy. Optional values:
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The ID of the retention policy.
	WormID *string `json:"wormId,omitempty" tf:"worm_id,omitempty"`
}

type BucketWormParameters struct {

	// The name of the bucket
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-alibabacloud/apis/oss/v1alpha1.Bucket
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// Reference to a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketRef *v1.Reference `json:"bucketRef,omitempty" tf:"-"`

	// Selector for a Bucket in oss to populate bucket.
	// +kubebuilder:validation:Optional
	BucketSelector *v1.Selector `json:"bucketSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The specified number of days to retain the Object.
	// +kubebuilder:validation:Optional
	RetentionPeriodInDays *float64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days,omitempty"`

	// The status of the compliance retention policy. Optional values:
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

// BucketWormSpec defines the desired state of BucketWorm
type BucketWormSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BucketWormParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BucketWormInitParameters `json:"initProvider,omitempty"`
}

// BucketWormStatus defines the observed state of BucketWorm.
type BucketWormStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BucketWormObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BucketWorm is the Schema for the BucketWorms API. Provides a Alicloud OSS Bucket Worm resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type BucketWorm struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketWormSpec   `json:"spec"`
	Status            BucketWormStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BucketWormList contains a list of BucketWorms
type BucketWormList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BucketWorm `json:"items"`
}

// Repository type metadata.
var (
	BucketWorm_Kind             = "BucketWorm"
	BucketWorm_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BucketWorm_Kind}.String()
	BucketWorm_KindAPIVersion   = BucketWorm_Kind + "." + CRDGroupVersion.String()
	BucketWorm_GroupVersionKind = CRDGroupVersion.WithKind(BucketWorm_Kind)
)

func init() {
	SchemeBuilder.Register(&BucketWorm{}, &BucketWormList{})
}
